Looking to launch executable "/opt/conda/bin/bwa-meme_mode3.avx512bw", simd = _mode3.avx512bw
Launching executable "/opt/conda/bin/bwa-meme_mode3.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: reference.genbank.Zdi.fasta
* Entering FMI_search
Reading other elements of the index from files reference.genbank.Zdi.fasta
* Index prefix: reference.genbank.Zdi.fasta
* Read 0 ALT contigs
* Reading reference genome..
* Binary seq file = reference.genbank.Zdi.fasta.0123
* Reference genome size: 1379380954 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 5679.4903 MB
2. Memory pre-allocation for BSW: 9584.6810 MB
[M::memoryAllocLearned::MEME] Reading Learned-index models into memory
[Learned-Config] MODE:3 SEARCH_METHOD: 1 MEM_TRADEOFF:1 EXPONENTIAL_SMEMSEARCH: 1 DEBUG_MODE:0 Num 2nd Models:268435456 PWL Bits Used:28
[M::memoryAllocLearned::MEME] Loading RMI model and Pac reference file took 10.719 sec
[M::memoryAllocLearned::MEME] Reading suffix array into memory
[M::memoryAllocLearned::MEME] Loading pos_packed file took 13.887 sec
[M::memoryAllocLearned::MEME] Generating SA, 64-bit Suffix and ISA in memory
[M::memoryAllocLearned::MEME] Runtime-build-index took 10.913 sec
3. Memory pre-allocation for BWT: 7540.2955 MB
------------------------------------------
* Threads used (compute): 40
* No. of pipeline threads: 2

[0000] read_chunk: 400000000, work_chunk_size: 400000033, nseq: 3007486
	[0000][ M::kt_pipeline] read 3007486 sequences (400000033 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 400000235, nseq: 3006560
	[0000][ M::kt_pipeline] read 3006560 sequences (400000235 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3007486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (77, 1238598, 92, 91)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (77, 143, 210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 476)
[0000][PE] mean and std.dev: (146.94, 92.70)
[0000][PE] low and high boundaries for proper pairs: (1, 609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (123, 167, 224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 426)
[0000][PE] mean and std.dev: (176.53, 72.52)
[0000][PE] low and high boundaries for proper pairs: (1, 527)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (44, 211, 781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2255)
[0000][PE] mean and std.dev: (373.82, 538.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2992)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (101, 150, 247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 539)
[0000][PE] mean and std.dev: (168.25, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 685)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3007486 reads in 717.049 CPU sec, 18.627 real sec
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3006560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (86, 1237241, 94, 92)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (116, 177, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1058)
[0000][PE] mean and std.dev: (241.15, 211.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (123, 168, 224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 426)
[0000][PE] mean and std.dev: (176.72, 72.41)
[0000][PE] low and high boundaries for proper pairs: (1, 527)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (59, 218, 699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1979)
[0000][PE] mean and std.dev: (373.00, 460.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2619)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (87, 151, 378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 960)
[0000][PE] mean and std.dev: (203.25, 199.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1251)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000258, nseq: 3004734
	[0000][ M::kt_pipeline] read 3004734 sequences (400000258 bp)...
	[0000][ M::mem_process_seqs] Processed 3006560 reads in 724.788 CPU sec, 18.997 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3004734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (85, 1229321, 90, 70)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (91, 151, 366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 916)
[0000][PE] mean and std.dev: (187.89, 150.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1191)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (123, 167, 224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 426)
[0000][PE] mean and std.dev: (176.76, 72.41)
[0000][PE] low and high boundaries for proper pairs: (1, 527)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (61, 394, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4696)
[0000][PE] mean and std.dev: (869.80, 1065.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6241)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (84, 184, 476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1260)
[0000][PE] mean and std.dev: (225.00, 230.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1652)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000130, nseq: 3005184
	[0000][ M::kt_pipeline] read 3005184 sequences (400000130 bp)...
	[0000][ M::mem_process_seqs] Processed 3004734 reads in 740.145 CPU sec, 19.703 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3005184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (77, 1233799, 92, 69)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (112, 273, 469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1183)
[0000][PE] mean and std.dev: (284.14, 230.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1540)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (123, 167, 224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 426)
[0000][PE] mean and std.dev: (176.57, 72.44)
[0000][PE] low and high boundaries for proper pairs: (1, 527)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (71, 215, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4712)
[0000][PE] mean and std.dev: (757.99, 1074.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6259)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (88, 179, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1111)
[0000][PE] mean and std.dev: (261.42, 240.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1452)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000221, nseq: 3004200
	[0000][ M::kt_pipeline] read 3004200 sequences (400000221 bp)...
	[0000][ M::mem_process_seqs] Processed 3005184 reads in 729.879 CPU sec, 19.200 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3004200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (109, 1227716, 93, 108)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (128, 232, 473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1163)
[0000][PE] mean and std.dev: (256.80, 204.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1508)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (123, 167, 224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 426)
[0000][PE] mean and std.dev: (176.59, 72.41)
[0000][PE] low and high boundaries for proper pairs: (1, 527)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (64, 238, 1095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3157)
[0000][PE] mean and std.dev: (552.78, 666.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4188)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (114, 174, 407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 993)
[0000][PE] mean and std.dev: (230.19, 190.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1286)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000092, nseq: 3005462
	[0000][ M::kt_pipeline] read 3005462 sequences (400000092 bp)...
	[0000][ M::mem_process_seqs] Processed 3004200 reads in 736.787 CPU sec, 19.264 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3005462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (90, 1227305, 59, 103)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (106, 202, 695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1873)
[0000][PE] mean and std.dev: (371.42, 454.48)
[0000][PE] low and high boundaries for proper pairs: (1, 2462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (123, 167, 224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 426)
[0000][PE] mean and std.dev: (176.74, 72.41)
[0000][PE] low and high boundaries for proper pairs: (1, 527)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (94, 235, 1157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3283)
[0000][PE] mean and std.dev: (588.15, 754.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4346)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (139, 183, 291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 595)
[0000][PE] mean and std.dev: (178.32, 105.42)
[0000][PE] low and high boundaries for proper pairs: (1, 747)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000284, nseq: 3006870
	[0000][ M::kt_pipeline] read 3006870 sequences (400000284 bp)...
	[0000][ M::mem_process_seqs] Processed 3005462 reads in 745.739 CPU sec, 19.919 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3006870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (72, 1242443, 97, 84)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (117, 205, 769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2073)
[0000][PE] mean and std.dev: (347.10, 415.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (123, 167, 224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 426)
[0000][PE] mean and std.dev: (176.68, 72.49)
[0000][PE] low and high boundaries for proper pairs: (1, 527)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (101, 286, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3455)
[0000][PE] mean and std.dev: (633.98, 759.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4573)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (84, 140, 252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 588)
[0000][PE] mean and std.dev: (142.48, 102.28)
[0000][PE] low and high boundaries for proper pairs: (1, 756)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000241, nseq: 3005532
	[0000][ M::kt_pipeline] read 3005532 sequences (400000241 bp)...
	[0000][ M::mem_process_seqs] Processed 3006870 reads in 727.376 CPU sec, 19.030 real sec
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3005532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (96, 1219113, 94, 96)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (117, 186, 522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1332)
[0000][PE] mean and std.dev: (228.26, 183.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (123, 167, 224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 426)
[0000][PE] mean and std.dev: (176.59, 72.45)
[0000][PE] low and high boundaries for proper pairs: (1, 527)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (111, 614, 1472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4194)
[0000][PE] mean and std.dev: (845.74, 1003.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5555)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (93, 167, 378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 948)
[0000][PE] mean and std.dev: (180.68, 158.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1233)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000036, nseq: 3005400
	[0000][ M::kt_pipeline] read 3005400 sequences (400000036 bp)...
	[0000][ M::mem_process_seqs] Processed 3005532 reads in 751.106 CPU sec, 19.794 real sec
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3005400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (67, 1230109, 113, 93)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (108, 179, 487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1245)
[0000][PE] mean and std.dev: (209.07, 188.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1624)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (123, 167, 224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 426)
[0000][PE] mean and std.dev: (176.69, 72.45)
[0000][PE] low and high boundaries for proper pairs: (1, 527)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (99, 384, 1172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3318)
[0000][PE] mean and std.dev: (702.67, 785.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4391)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (106, 166, 512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1324)
[0000][PE] mean and std.dev: (255.88, 235.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3005400 reads in 727.768 CPU sec, 19.119 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000015, nseq: 3006542
	[0000][ M::kt_pipeline] read 3006542 sequences (400000015 bp)...
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3006542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (61, 1235702, 115, 91)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (98, 176, 496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1292)
[0000][PE] mean and std.dev: (276.77, 286.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1690)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (123, 167, 224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 426)
[0000][PE] mean and std.dev: (176.66, 72.48)
[0000][PE] low and high boundaries for proper pairs: (1, 527)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (130, 334, 1090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3010)
[0000][PE] mean and std.dev: (550.06, 604.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3970)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (115, 155, 351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 823)
[0000][PE] mean and std.dev: (176.60, 117.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000168, nseq: 3007342
	[0000][ M::kt_pipeline] read 3007342 sequences (400000168 bp)...
	[0000][ M::mem_process_seqs] Processed 3006542 reads in 726.527 CPU sec, 19.011 real sec
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3007342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (86, 1241365, 99, 68)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (101, 151, 333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 797)
[0000][PE] mean and std.dev: (175.87, 138.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (123, 167, 224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 426)
[0000][PE] mean and std.dev: (176.58, 72.44)
[0000][PE] low and high boundaries for proper pairs: (1, 527)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (75, 344, 1059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3027)
[0000][PE] mean and std.dev: (510.81, 681.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4011)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (110, 156, 913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2519)
[0000][PE] mean and std.dev: (325.12, 402.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3322)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000234, nseq: 3002928
	[0000][ M::kt_pipeline] read 3002928 sequences (400000234 bp)...
	[0000][ M::mem_process_seqs] Processed 3007342 reads in 721.293 CPU sec, 19.341 real sec
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3002928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (70, 1191424, 107, 74)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (103, 158, 380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 934)
[0000][PE] mean and std.dev: (201.63, 165.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1211)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (123, 167, 224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 426)
[0000][PE] mean and std.dev: (176.49, 72.40)
[0000][PE] low and high boundaries for proper pairs: (1, 527)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (123, 334, 1597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4545)
[0000][PE] mean and std.dev: (902.99, 1191.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6019)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (131, 213, 353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 797)
[0000][PE] mean and std.dev: (205.31, 127.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1019)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000082, nseq: 3005916
	[0000][ M::kt_pipeline] read 3005916 sequences (400000082 bp)...
	[0000][ M::mem_process_seqs] Processed 3002928 reads in 772.059 CPU sec, 20.218 real sec
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3005916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (100, 1232743, 118, 93)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (98, 148, 201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 407)
[0000][PE] mean and std.dev: (130.30, 56.81)
[0000][PE] low and high boundaries for proper pairs: (1, 510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (123, 167, 224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 426)
[0000][PE] mean and std.dev: (176.70, 72.42)
[0000][PE] low and high boundaries for proper pairs: (1, 527)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (72, 241, 1004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2868)
[0000][PE] mean and std.dev: (403.43, 555.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3800)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (97, 149, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1480)
[0000][PE] mean and std.dev: (245.05, 267.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1941)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 393376059, nseq: 2957154
	[0000][ M::kt_pipeline] read 2957154 sequences (393376059 bp)...
	[0000][ M::mem_process_seqs] Processed 3005916 reads in 743.854 CPU sec, 19.530 real sec
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 2957154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (72, 1202502, 84, 87)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (99, 156, 575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1527)
[0000][PE] mean and std.dev: (238.02, 259.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (123, 167, 224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 426)
[0000][PE] mean and std.dev: (176.61, 72.46)
[0000][PE] low and high boundaries for proper pairs: (1, 527)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (101, 312, 1099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3095)
[0000][PE] mean and std.dev: (553.25, 693.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4093)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (92, 130, 242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 542)
[0000][PE] mean and std.dev: (135.54, 94.90)
[0000][PE] low and high boundaries for proper pairs: (1, 692)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2957154 reads in 721.145 CPU sec, 19.109 real sec
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 40
Processor is running @2394.726140 MHz
Runtime profile:

	Time taken for main_mem function: 315.08 sec

	IO times (sec) :
	Reading IO time (reads) avg: 150.17, (150.17, 150.17)
	Writing IO time (SAM) avg: 68.01, (68.01, 68.01)
	Reading IO time (Reference Genome) avg: 0.98, (0.98, 0.98)
	Index read time avg: 0.24, (0.24, 0.24)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 313.82
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 270.82, (270.82, 270.82)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 141.26, (141.26, 141.26)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 124.88, (124.88, 124.88)
		MEM_ALN_CHAIN_FLT avg: 0.00, (0.00, 0.00)
		MEM_ALN_CHAIN_SEED avg: 0.00, (0.00, 0.00)
		ERT_SEED_CHAIN avg: 0.00, (0.00, 0.00)
	LEARNED_SEED_CHAIN avg: 50.30, (50.40, 50.20)
		SMEM compute avg: 0.00, (0.00, 0.00)
		SAL compute avg: 0.00, (0.00, 0.00)
				MEM_SA avg: 0.00, (0.00, 0.00)

		BSW time, avg: 71.45, (71.69, 71.23)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
