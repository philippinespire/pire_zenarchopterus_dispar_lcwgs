Looking to launch executable "/opt/conda/bin/bwa-meme_mode3.avx512bw", simd = _mode3.avx512bw
Launching executable "/opt/conda/bin/bwa-meme_mode3.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: reference.genbank.Zdi.fasta
* Entering FMI_search
Reading other elements of the index from files reference.genbank.Zdi.fasta
* Index prefix: reference.genbank.Zdi.fasta
* Read 0 ALT contigs
* Reading reference genome..
* Binary seq file = reference.genbank.Zdi.fasta.0123
* Reference genome size: 1379380954 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 5679.4903 MB
2. Memory pre-allocation for BSW: 9584.6810 MB
[M::memoryAllocLearned::MEME] Reading Learned-index models into memory
[Learned-Config] MODE:3 SEARCH_METHOD: 1 MEM_TRADEOFF:1 EXPONENTIAL_SMEMSEARCH: 1 DEBUG_MODE:0 Num 2nd Models:268435456 PWL Bits Used:28
[M::memoryAllocLearned::MEME] Loading RMI model and Pac reference file took 10.728 sec
[M::memoryAllocLearned::MEME] Reading suffix array into memory
[M::memoryAllocLearned::MEME] Loading pos_packed file took 16.045 sec
[M::memoryAllocLearned::MEME] Generating SA, 64-bit Suffix and ISA in memory
[M::memoryAllocLearned::MEME] Runtime-build-index took 13.141 sec
3. Memory pre-allocation for BWT: 7540.2955 MB
------------------------------------------
* Threads used (compute): 40
* No. of pipeline threads: 2

[0000] read_chunk: 400000000, work_chunk_size: 400000020, nseq: 3206238
	[0000][ M::kt_pipeline] read 3206238 sequences (400000020 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 400000092, nseq: 3201404
	[0000][ M::kt_pipeline] read 3201404 sequences (400000092 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3206238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (68, 1190561, 75, 82)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (89, 155, 268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 626)
[0000][PE] mean and std.dev: (153.15, 98.55)
[0000][PE] low and high boundaries for proper pairs: (1, 805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (105, 147, 200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 390)
[0000][PE] mean and std.dev: (157.14, 69.88)
[0000][PE] low and high boundaries for proper pairs: (1, 485)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (57, 182, 561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1569)
[0000][PE] mean and std.dev: (279.94, 378.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2073)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (88, 128, 214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 466)
[0000][PE] mean and std.dev: (135.71, 86.01)
[0000][PE] low and high boundaries for proper pairs: (1, 592)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3206238 reads in 721.620 CPU sec, 18.796 real sec
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3201404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (80, 1183625, 85, 82)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (133, 277, 479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1171)
[0000][PE] mean and std.dev: (307.19, 215.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (105, 147, 200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 390)
[0000][PE] mean and std.dev: (157.46, 69.89)
[0000][PE] low and high boundaries for proper pairs: (1, 485)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (62, 284, 1337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3887)
[0000][PE] mean and std.dev: (587.04, 827.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5162)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (84, 157, 469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1239)
[0000][PE] mean and std.dev: (207.03, 191.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1624)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000238, nseq: 3203576
	[0000][ M::kt_pipeline] read 3203576 sequences (400000238 bp)...
	[0000][ M::mem_process_seqs] Processed 3201404 reads in 745.035 CPU sec, 19.768 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3203576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (69, 1181515, 66, 93)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (95, 134, 425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1085)
[0000][PE] mean and std.dev: (187.11, 173.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1415)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (105, 147, 200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 390)
[0000][PE] mean and std.dev: (157.30, 69.88)
[0000][PE] low and high boundaries for proper pairs: (1, 485)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (51, 139, 491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1371)
[0000][PE] mean and std.dev: (227.59, 296.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1811)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (92, 145, 266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 614)
[0000][PE] mean and std.dev: (145.79, 93.75)
[0000][PE] low and high boundaries for proper pairs: (1, 788)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000086, nseq: 3205870
	[0000][ M::kt_pipeline] read 3205870 sequences (400000086 bp)...
	[0000][ M::mem_process_seqs] Processed 3203576 reads in 750.076 CPU sec, 19.528 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (70, 1186955, 75, 85)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (108, 159, 528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1368)
[0000][PE] mean and std.dev: (253.83, 250.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (105, 147, 200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 390)
[0000][PE] mean and std.dev: (157.25, 69.94)
[0000][PE] low and high boundaries for proper pairs: (1, 485)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (83, 348, 1118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3188)
[0000][PE] mean and std.dev: (594.07, 749.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4223)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (104, 156, 458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1166)
[0000][PE] mean and std.dev: (243.32, 256.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1520)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000120, nseq: 3204886
	[0000][ M::kt_pipeline] read 3204886 sequences (400000120 bp)...
	[0000][ M::mem_process_seqs] Processed 3205870 reads in 741.758 CPU sec, 19.393 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3204886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (58, 1186300, 106, 73)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (100, 138, 269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 607)
[0000][PE] mean and std.dev: (163.18, 115.59)
[0000][PE] low and high boundaries for proper pairs: (1, 776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (105, 147, 200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 390)
[0000][PE] mean and std.dev: (157.27, 69.91)
[0000][PE] low and high boundaries for proper pairs: (1, 485)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (102, 376, 1112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3132)
[0000][PE] mean and std.dev: (517.38, 555.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4142)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (91, 131, 244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 550)
[0000][PE] mean and std.dev: (166.37, 121.53)
[0000][PE] low and high boundaries for proper pairs: (1, 703)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000012, nseq: 3198086
	[0000][ M::kt_pipeline] read 3198086 sequences (400000012 bp)...
	[0000][ M::mem_process_seqs] Processed 3204886 reads in 736.927 CPU sec, 19.230 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3198086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (71, 1156166, 72, 57)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (83, 133, 213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 473)
[0000][PE] mean and std.dev: (129.80, 84.95)
[0000][PE] low and high boundaries for proper pairs: (1, 603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (105, 147, 200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 390)
[0000][PE] mean and std.dev: (157.16, 69.79)
[0000][PE] low and high boundaries for proper pairs: (1, 485)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (86, 359, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3281)
[0000][PE] mean and std.dev: (647.10, 795.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4346)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (101, 145, 217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 449)
[0000][PE] mean and std.dev: (139.08, 70.21)
[0000][PE] low and high boundaries for proper pairs: (1, 565)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 293715929, nseq: 2353816
	[0000][ M::kt_pipeline] read 2353816 sequences (293715929 bp)...
	[0000][ M::mem_process_seqs] Processed 3198086 reads in 772.475 CPU sec, 20.328 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 2353816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (78, 867528, 60, 46)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (99, 140, 222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 468)
[0000][PE] mean and std.dev: (135.68, 63.85)
[0000][PE] low and high boundaries for proper pairs: (1, 591)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (105, 147, 200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 390)
[0000][PE] mean and std.dev: (157.26, 69.91)
[0000][PE] low and high boundaries for proper pairs: (1, 485)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (80, 268, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1604)
[0000][PE] mean and std.dev: (295.08, 313.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2112)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (89, 171, 439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1139)
[0000][PE] mean and std.dev: (227.60, 248.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1489)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2353816 reads in 544.063 CPU sec, 14.370 real sec
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 40
Processor is running @2394.719386 MHz
Runtime profile:

	Time taken for main_mem function: 183.95 sec

	IO times (sec) :
	Reading IO time (reads) avg: 79.30, (79.30, 79.30)
	Writing IO time (SAM) avg: 32.12, (32.12, 32.12)
	Reading IO time (Reference Genome) avg: 0.95, (0.95, 0.95)
	Index read time avg: 0.25, (0.25, 0.25)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 182.70
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 131.40, (131.40, 131.40)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 63.06, (63.06, 63.06)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 66.14, (66.14, 66.14)
		MEM_ALN_CHAIN_FLT avg: 0.00, (0.00, 0.00)
		MEM_ALN_CHAIN_SEED avg: 0.00, (0.00, 0.00)
		ERT_SEED_CHAIN avg: 0.00, (0.00, 0.00)
	LEARNED_SEED_CHAIN avg: 30.57, (30.66, 30.53)
		SMEM compute avg: 0.00, (0.00, 0.00)
		SAL compute avg: 0.00, (0.00, 0.00)
				MEM_SA avg: 0.00, (0.00, 0.00)

		BSW time, avg: 34.18, (34.31, 34.01)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
