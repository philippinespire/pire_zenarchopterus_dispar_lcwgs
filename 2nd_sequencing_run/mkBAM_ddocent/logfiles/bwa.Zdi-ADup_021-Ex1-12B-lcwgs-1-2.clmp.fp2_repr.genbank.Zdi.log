Looking to launch executable "/opt/conda/bin/bwa-meme_mode3.avx512bw", simd = _mode3.avx512bw
Launching executable "/opt/conda/bin/bwa-meme_mode3.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: reference.genbank.Zdi.fasta
* Entering FMI_search
Reading other elements of the index from files reference.genbank.Zdi.fasta
* Index prefix: reference.genbank.Zdi.fasta
* Read 0 ALT contigs
* Reading reference genome..
* Binary seq file = reference.genbank.Zdi.fasta.0123
* Reference genome size: 1379380954 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 5679.4903 MB
2. Memory pre-allocation for BSW: 9584.6810 MB
[M::memoryAllocLearned::MEME] Reading Learned-index models into memory
[Learned-Config] MODE:3 SEARCH_METHOD: 1 MEM_TRADEOFF:1 EXPONENTIAL_SMEMSEARCH: 1 DEBUG_MODE:0 Num 2nd Models:268435456 PWL Bits Used:28
[M::memoryAllocLearned::MEME] Loading RMI model and Pac reference file took 10.478 sec
[M::memoryAllocLearned::MEME] Reading suffix array into memory
[M::memoryAllocLearned::MEME] Loading pos_packed file took 15.406 sec
[M::memoryAllocLearned::MEME] Generating SA, 64-bit Suffix and ISA in memory
[M::memoryAllocLearned::MEME] Runtime-build-index took 13.143 sec
3. Memory pre-allocation for BWT: 7540.2955 MB
------------------------------------------
* Threads used (compute): 40
* No. of pipeline threads: 2

[0000] read_chunk: 400000000, work_chunk_size: 400000048, nseq: 4152196
	[0000][ M::kt_pipeline] read 4152196 sequences (400000048 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4152196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (186, 1874429, 17, 173)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 43, 63)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 135)
[0000][PE] mean and std.dev: (47.25, 27.32)
[0000][PE] low and high boundaries for proper pairs: (1, 171)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.42, 40.05)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (42, 122, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3909)
[0000][PE] mean and std.dev: (590.76, 745.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5198)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (29, 41, 68)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 146)
[0000][PE] mean and std.dev: (47.61, 26.70)
[0000][PE] low and high boundaries for proper pairs: (1, 185)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4152196 reads in 249.837 CPU sec, 6.912 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000042, nseq: 4153568
	[0000][ M::kt_pipeline] read 4153568 sequences (400000042 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4153568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (189, 1863574, 27, 189)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (30, 45, 68)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 144)
[0000][PE] mean and std.dev: (49.46, 26.13)
[0000][PE] low and high boundaries for proper pairs: (1, 182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.55, 39.96)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (24, 100, 834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2454)
[0000][PE] mean and std.dev: (282.65, 550.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3264)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (28, 45, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 136)
[0000][PE] mean and std.dev: (45.93, 25.83)
[0000][PE] low and high boundaries for proper pairs: (1, 172)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4153568 reads in 253.983 CPU sec, 6.894 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000032, nseq: 4105314
	[0000][ M::kt_pipeline] read 4105314 sequences (400000032 bp)...
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4105314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (173, 1722407, 12, 172)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 43, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 147)
[0000][PE] mean and std.dev: (46.86, 26.93)
[0000][PE] low and high boundaries for proper pairs: (1, 187)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.58, 39.89)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (56, 101, 249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 635)
[0000][PE] mean and std.dev: (94.00, 74.48)
[0000][PE] low and high boundaries for proper pairs: (1, 828)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (30, 44, 70)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 150)
[0000][PE] mean and std.dev: (51.35, 28.42)
[0000][PE] low and high boundaries for proper pairs: (1, 190)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4105314 reads in 328.698 CPU sec, 8.794 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000112, nseq: 4160502
	[0000][ M::kt_pipeline] read 4160502 sequences (400000112 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4160502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (182, 1862845, 20, 165)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (30, 44, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 141)
[0000][PE] mean and std.dev: (49.91, 27.07)
[0000][PE] low and high boundaries for proper pairs: (1, 178)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.50, 39.91)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (39, 101, 260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 702)
[0000][PE] mean and std.dev: (133.42, 138.22)
[0000][PE] low and high boundaries for proper pairs: (1, 923)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (31, 44, 70)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 148)
[0000][PE] mean and std.dev: (50.64, 27.84)
[0000][PE] low and high boundaries for proper pairs: (1, 187)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4160502 reads in 255.793 CPU sec, 6.869 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000140, nseq: 4106864
	[0000][ M::kt_pipeline] read 4106864 sequences (400000140 bp)...
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4106864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (173, 1744656, 14, 143)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (30, 43, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 135)
[0000][PE] mean and std.dev: (48.75, 26.49)
[0000][PE] low and high boundaries for proper pairs: (1, 170)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.17, 39.72)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 100, 286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 832)
[0000][PE] mean and std.dev: (145.15, 202.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (34, 44, 71)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 145)
[0000][PE] mean and std.dev: (49.92, 25.90)
[0000][PE] low and high boundaries for proper pairs: (1, 182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4106864 reads in 331.295 CPU sec, 8.926 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000195, nseq: 4161266
	[0000][ M::kt_pipeline] read 4161266 sequences (400000195 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4161266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (199, 1876828, 15, 179)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 46, 66)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 140)
[0000][PE] mean and std.dev: (48.30, 25.85)
[0000][PE] low and high boundaries for proper pairs: (1, 177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.44, 39.97)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (101, 125, 421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1061)
[0000][PE] mean and std.dev: (175.31, 173.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1381)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (29, 47, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 143)
[0000][PE] mean and std.dev: (49.28, 28.59)
[0000][PE] low and high boundaries for proper pairs: (1, 181)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000019, nseq: 4153368
	[0000][ M::kt_pipeline] read 4153368 sequences (400000019 bp)...
	[0000][ M::mem_process_seqs] Processed 4161266 reads in 247.534 CPU sec, 6.957 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4153368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (162, 1854300, 8, 174)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (32, 47, 66)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 134)
[0000][PE] mean and std.dev: (48.67, 24.37)
[0000][PE] low and high boundaries for proper pairs: (1, 168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.42, 39.86)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (33, 48, 73)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 153)
[0000][PE] mean and std.dev: (53.76, 28.61)
[0000][PE] low and high boundaries for proper pairs: (1, 193)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4153368 reads in 264.958 CPU sec, 7.463 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000174, nseq: 4161702
	[0000][ M::kt_pipeline] read 4161702 sequences (400000174 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 400000125, nseq: 4163648
	[0000][ M::kt_pipeline] read 4163648 sequences (400000125 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4161702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (203, 1866068, 13, 157)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (30, 42, 69)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 147)
[0000][PE] mean and std.dev: (48.47, 29.07)
[0000][PE] low and high boundaries for proper pairs: (1, 186)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.41, 39.88)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 38, 170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 484)
[0000][PE] mean and std.dev: (92.00, 127.49)
[0000][PE] low and high boundaries for proper pairs: (1, 641)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (28, 40, 63)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 133)
[0000][PE] mean and std.dev: (47.01, 26.96)
[0000][PE] low and high boundaries for proper pairs: (1, 168)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4161702 reads in 251.728 CPU sec, 6.993 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4163648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (197, 1883141, 15, 167)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 44, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 137)
[0000][PE] mean and std.dev: (46.58, 24.73)
[0000][PE] low and high boundaries for proper pairs: (1, 173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.41, 39.90)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (32, 114, 685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1991)
[0000][PE] mean and std.dev: (235.86, 263.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2644)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (33, 44, 70)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 144)
[0000][PE] mean and std.dev: (48.78, 27.31)
[0000][PE] low and high boundaries for proper pairs: (1, 181)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4163648 reads in 249.537 CPU sec, 6.905 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000097, nseq: 4160336
	[0000][ M::kt_pipeline] read 4160336 sequences (400000097 bp)...
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4160336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (180, 1873323, 12, 177)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 41, 59)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 123)
[0000][PE] mean and std.dev: (45.63, 26.31)
[0000][PE] low and high boundaries for proper pairs: (1, 155)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.26, 39.80)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (29, 150, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1097)
[0000][PE] mean and std.dev: (169.36, 174.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1453)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (29, 44, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 143)
[0000][PE] mean and std.dev: (49.80, 26.88)
[0000][PE] low and high boundaries for proper pairs: (1, 181)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4160336 reads in 251.677 CPU sec, 6.914 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000207, nseq: 4162586
	[0000][ M::kt_pipeline] read 4162586 sequences (400000207 bp)...
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4162586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (182, 1879790, 11, 186)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 38, 59)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 123)
[0000][PE] mean and std.dev: (42.33, 22.21)
[0000][PE] low and high boundaries for proper pairs: (1, 155)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.47, 39.97)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (139, 166, 521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1285)
[0000][PE] mean and std.dev: (246.90, 183.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1667)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (27, 40, 69)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 153)
[0000][PE] mean and std.dev: (47.77, 27.09)
[0000][PE] low and high boundaries for proper pairs: (1, 195)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4162586 reads in 245.447 CPU sec, 6.673 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000104, nseq: 4156988
	[0000][ M::kt_pipeline] read 4156988 sequences (400000104 bp)...
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4156988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (177, 1863832, 18, 201)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (26, 42, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 140)
[0000][PE] mean and std.dev: (46.08, 25.59)
[0000][PE] low and high boundaries for proper pairs: (1, 178)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.24, 39.72)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (57, 340, 824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2358)
[0000][PE] mean and std.dev: (400.35, 369.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3125)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (30, 46, 74)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 162)
[0000][PE] mean and std.dev: (53.06, 31.40)
[0000][PE] low and high boundaries for proper pairs: (1, 206)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4156988 reads in 253.304 CPU sec, 7.028 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000116, nseq: 4156586
	[0000][ M::kt_pipeline] read 4156586 sequences (400000116 bp)...
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4156586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (201, 1864358, 21, 150)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 41, 60)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 124)
[0000][PE] mean and std.dev: (42.43, 22.32)
[0000][PE] low and high boundaries for proper pairs: (1, 156)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.26, 39.70)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 40, 279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 797)
[0000][PE] mean and std.dev: (103.65, 115.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (31, 48, 72)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 154)
[0000][PE] mean and std.dev: (55.88, 32.99)
[0000][PE] low and high boundaries for proper pairs: (1, 195)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4156586 reads in 250.217 CPU sec, 6.756 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000121, nseq: 4163468
	[0000][ M::kt_pipeline] read 4163468 sequences (400000121 bp)...
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4163468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (164, 1871144, 18, 155)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (31, 47, 74)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 160)
[0000][PE] mean and std.dev: (51.94, 27.60)
[0000][PE] low and high boundaries for proper pairs: (1, 203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.39, 39.90)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (55, 69, 285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 745)
[0000][PE] mean and std.dev: (150.88, 176.01)
[0000][PE] low and high boundaries for proper pairs: (1, 975)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (33, 46, 69)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 141)
[0000][PE] mean and std.dev: (50.15, 26.85)
[0000][PE] low and high boundaries for proper pairs: (1, 177)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4163468 reads in 248.481 CPU sec, 6.687 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000032, nseq: 4158650
	[0000][ M::kt_pipeline] read 4158650 sequences (400000032 bp)...
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4158650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (164, 1864832, 11, 176)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 44, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 139)
[0000][PE] mean and std.dev: (48.68, 28.60)
[0000][PE] low and high boundaries for proper pairs: (1, 176)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.45, 39.88)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 35, 148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 404)
[0000][PE] mean and std.dev: (87.73, 84.16)
[0000][PE] low and high boundaries for proper pairs: (1, 532)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (28, 43, 72)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 160)
[0000][PE] mean and std.dev: (50.36, 31.12)
[0000][PE] low and high boundaries for proper pairs: (1, 204)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4158650 reads in 248.436 CPU sec, 6.685 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000037, nseq: 4164062
	[0000][ M::kt_pipeline] read 4164062 sequences (400000037 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 400000270, nseq: 4165996
	[0000][ M::kt_pipeline] read 4165996 sequences (400000270 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4164062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (203, 1880467, 11, 171)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 40, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 137)
[0000][PE] mean and std.dev: (47.63, 27.60)
[0000][PE] low and high boundaries for proper pairs: (1, 173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.22, 39.75)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (30, 165, 308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 864)
[0000][PE] mean and std.dev: (149.40, 130.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1142)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (25, 49, 68)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 154)
[0000][PE] mean and std.dev: (51.12, 31.14)
[0000][PE] low and high boundaries for proper pairs: (1, 197)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4164062 reads in 247.884 CPU sec, 6.672 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4165996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (182, 1857778, 11, 182)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 41, 59)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 123)
[0000][PE] mean and std.dev: (43.35, 22.66)
[0000][PE] low and high boundaries for proper pairs: (1, 155)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.51, 39.93)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (24, 58, 3722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11118)
[0000][PE] mean and std.dev: (1508.64, 2479.90)
[0000][PE] low and high boundaries for proper pairs: (1, 14816)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (33, 47, 73)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 153)
[0000][PE] mean and std.dev: (54.32, 30.76)
[0000][PE] low and high boundaries for proper pairs: (1, 193)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4165996 reads in 255.558 CPU sec, 7.047 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000161, nseq: 4160088
	[0000][ M::kt_pipeline] read 4160088 sequences (400000161 bp)...
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4160088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (186, 1870735, 11, 176)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 44, 61)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 125)
[0000][PE] mean and std.dev: (46.11, 24.56)
[0000][PE] low and high boundaries for proper pairs: (1, 157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.23, 39.74)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (36, 125, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1176)
[0000][PE] mean and std.dev: (282.55, 359.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1722)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (33, 47, 73)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 153)
[0000][PE] mean and std.dev: (52.30, 27.94)
[0000][PE] low and high boundaries for proper pairs: (1, 193)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4160088 reads in 257.332 CPU sec, 7.155 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000096, nseq: 4164240
	[0000][ M::kt_pipeline] read 4164240 sequences (400000096 bp)...
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4164240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (188, 1855729, 23, 162)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 45, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 141)
[0000][PE] mean and std.dev: (48.79, 28.49)
[0000][PE] low and high boundaries for proper pairs: (1, 179)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.43, 39.86)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (118, 336, 423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1033)
[0000][PE] mean and std.dev: (272.10, 217.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1338)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (28, 44, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 145)
[0000][PE] mean and std.dev: (48.21, 27.64)
[0000][PE] low and high boundaries for proper pairs: (1, 184)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4164240 reads in 255.336 CPU sec, 6.934 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000273, nseq: 4164636
	[0000][ M::kt_pipeline] read 4164636 sequences (400000273 bp)...
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4164636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (189, 1861411, 14, 183)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (25, 37, 60)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 130)
[0000][PE] mean and std.dev: (43.39, 24.15)
[0000][PE] low and high boundaries for proper pairs: (1, 165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.26, 39.75)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (66, 255, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 843)
[0000][PE] mean and std.dev: (154.73, 115.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1102)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (33, 43, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 129)
[0000][PE] mean and std.dev: (49.42, 25.79)
[0000][PE] low and high boundaries for proper pairs: (1, 161)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4164636 reads in 252.126 CPU sec, 6.816 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000248, nseq: 4151626
	[0000][ M::kt_pipeline] read 4151626 sequences (400000248 bp)...
[0000] Calling mem_process_seqs.., task: 20
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4151626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (169, 1856239, 61, 172)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (32, 47, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 131)
[0000][PE] mean and std.dev: (48.52, 23.82)
[0000][PE] low and high boundaries for proper pairs: (1, 164)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.47, 39.92)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (79, 119, 407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1063)
[0000][PE] mean and std.dev: (215.13, 188.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1391)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (34, 47, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 127)
[0000][PE] mean and std.dev: (49.92, 24.92)
[0000][PE] low and high boundaries for proper pairs: (1, 158)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4151626 reads in 259.665 CPU sec, 7.033 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000014, nseq: 4150312
	[0000][ M::kt_pipeline] read 4150312 sequences (400000014 bp)...
[0000] Calling mem_process_seqs.., task: 21
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4150312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (172, 1843774, 11, 194)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (26, 45, 61)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 131)
[0000][PE] mean and std.dev: (45.65, 24.17)
[0000][PE] low and high boundaries for proper pairs: (1, 166)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.40, 39.94)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (46, 99, 253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 667)
[0000][PE] mean and std.dev: (192.27, 215.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1054)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (29, 44, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 137)
[0000][PE] mean and std.dev: (46.57, 24.57)
[0000][PE] low and high boundaries for proper pairs: (1, 173)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4150312 reads in 264.284 CPU sec, 10.230 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000174, nseq: 4163672
	[0000][ M::kt_pipeline] read 4163672 sequences (400000174 bp)...
[0000] Calling mem_process_seqs.., task: 22
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4163672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (176, 1862912, 13, 169)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 41, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 138)
[0000][PE] mean and std.dev: (47.44, 27.92)
[0000][PE] low and high boundaries for proper pairs: (1, 175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.19, 39.72)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (108, 236, 563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1473)
[0000][PE] mean and std.dev: (317.62, 276.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1928)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (31, 45, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 139)
[0000][PE] mean and std.dev: (49.12, 25.14)
[0000][PE] low and high boundaries for proper pairs: (1, 175)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4163672 reads in 260.141 CPU sec, 7.124 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000099, nseq: 4163102
	[0000][ M::kt_pipeline] read 4163102 sequences (400000099 bp)...
[0000] Calling mem_process_seqs.., task: 23
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4163102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (190, 1872968, 17, 171)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (26, 42, 60)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 128)
[0000][PE] mean and std.dev: (44.56, 23.58)
[0000][PE] low and high boundaries for proper pairs: (1, 162)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.26, 39.74)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (29, 61, 259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 719)
[0000][PE] mean and std.dev: (87.33, 93.49)
[0000][PE] low and high boundaries for proper pairs: (1, 949)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (31, 47, 71)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 151)
[0000][PE] mean and std.dev: (52.12, 27.92)
[0000][PE] low and high boundaries for proper pairs: (1, 191)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4163102 reads in 246.990 CPU sec, 6.719 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000071, nseq: 4150958
	[0000][ M::kt_pipeline] read 4150958 sequences (400000071 bp)...
[0000] Calling mem_process_seqs.., task: 24
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4150958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (183, 1809510, 11, 156)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 41, 57)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 115)
[0000][PE] mean and std.dev: (43.72, 24.18)
[0000][PE] low and high boundaries for proper pairs: (1, 144)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 92, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.22, 39.80)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (63, 183, 751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2127)
[0000][PE] mean and std.dev: (458.27, 565.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2815)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (32, 44, 62)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 122)
[0000][PE] mean and std.dev: (46.68, 22.75)
[0000][PE] low and high boundaries for proper pairs: (1, 152)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4150958 reads in 297.951 CPU sec, 8.033 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000074, nseq: 4124788
	[0000][ M::kt_pipeline] read 4124788 sequences (400000074 bp)...
[0000] Calling mem_process_seqs.., task: 25
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4124788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (178, 1797780, 13, 142)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (31, 46, 75)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 163)
[0000][PE] mean and std.dev: (52.76, 30.12)
[0000][PE] low and high boundaries for proper pairs: (1, 207)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.24, 39.70)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (25, 368, 1198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3544)
[0000][PE] mean and std.dev: (498.54, 544.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4717)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (24, 40, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 144)
[0000][PE] mean and std.dev: (45.25, 28.85)
[0000][PE] low and high boundaries for proper pairs: (1, 184)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4124788 reads in 293.180 CPU sec, 8.063 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000111, nseq: 4157830
	[0000][ M::kt_pipeline] read 4157830 sequences (400000111 bp)...
[0000] Calling mem_process_seqs.., task: 26
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4157830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (176, 1866302, 16, 161)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (26, 42, 62)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 134)
[0000][PE] mean and std.dev: (45.19, 24.85)
[0000][PE] low and high boundaries for proper pairs: (1, 170)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.47, 39.95)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (54, 173, 642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1818)
[0000][PE] mean and std.dev: (343.33, 442.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2406)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (30, 46, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 141)
[0000][PE] mean and std.dev: (48.44, 25.58)
[0000][PE] low and high boundaries for proper pairs: (1, 178)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4157830 reads in 257.096 CPU sec, 7.043 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000184, nseq: 4156448
	[0000][ M::kt_pipeline] read 4156448 sequences (400000184 bp)...
[0000] Calling mem_process_seqs.., task: 27
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4156448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (202, 1872736, 9, 206)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (25, 41, 66)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 148)
[0000][PE] mean and std.dev: (45.52, 27.03)
[0000][PE] low and high boundaries for proper pairs: (1, 189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 92, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.19, 39.78)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (27, 45, 70)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 156)
[0000][PE] mean and std.dev: (51.06, 28.68)
[0000][PE] low and high boundaries for proper pairs: (1, 199)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4156448 reads in 252.608 CPU sec, 6.941 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000008, nseq: 4161932
	[0000][ M::kt_pipeline] read 4161932 sequences (400000008 bp)...
[0000] Calling mem_process_seqs.., task: 28
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4161932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (167, 1861422, 28, 208)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 45, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 134)
[0000][PE] mean and std.dev: (47.61, 25.02)
[0000][PE] low and high boundaries for proper pairs: (1, 169)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.46, 39.92)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (25, 26, 100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 250)
[0000][PE] mean and std.dev: (46.16, 43.38)
[0000][PE] low and high boundaries for proper pairs: (1, 325)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (32, 44, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 131)
[0000][PE] mean and std.dev: (50.16, 25.58)
[0000][PE] low and high boundaries for proper pairs: (1, 164)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4161932 reads in 256.184 CPU sec, 7.140 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000117, nseq: 4164394
	[0000][ M::kt_pipeline] read 4164394 sequences (400000117 bp)...
[0000] Calling mem_process_seqs.., task: 29
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4164394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (164, 1844164, 12, 166)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 39, 58)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 116)
[0000][PE] mean and std.dev: (44.30, 21.83)
[0000][PE] low and high boundaries for proper pairs: (1, 145)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.23, 39.71)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (10, 52, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 964)
[0000][PE] mean and std.dev: (147.36, 230.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1282)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (27, 39, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 141)
[0000][PE] mean and std.dev: (47.22, 29.79)
[0000][PE] low and high boundaries for proper pairs: (1, 179)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4164394 reads in 255.739 CPU sec, 7.010 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000004, nseq: 3822534
	[0000][ M::kt_pipeline] read 3822534 sequences (400000004 bp)...
[0000] Calling mem_process_seqs.., task: 30
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3822534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (121, 1199392, 14, 117)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 44, 74)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 166)
[0000][PE] mean and std.dev: (50.62, 29.77)
[0000][PE] low and high boundaries for proper pairs: (1, 212)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (68, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 239)
[0000][PE] mean and std.dev: (98.59, 39.67)
[0000][PE] low and high boundaries for proper pairs: (1, 296)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (43, 174, 278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 748)
[0000][PE] mean and std.dev: (163.14, 106.68)
[0000][PE] low and high boundaries for proper pairs: (1, 983)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (32, 42, 74)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 158)
[0000][PE] mean and std.dev: (52.24, 31.39)
[0000][PE] low and high boundaries for proper pairs: (1, 200)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000016, nseq: 4162128
	[0000][ M::kt_pipeline] read 4162128 sequences (400000016 bp)...
	[0000][ M::mem_process_seqs] Processed 3822534 reads in 546.788 CPU sec, 14.251 real sec
[0000] Calling mem_process_seqs.., task: 31
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4162128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (193, 1866073, 14, 169)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 42, 59)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 121)
[0000][PE] mean and std.dev: (44.31, 21.34)
[0000][PE] low and high boundaries for proper pairs: (1, 152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.22, 39.76)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (39, 182, 597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1713)
[0000][PE] mean and std.dev: (340.38, 385.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2271)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (29, 47, 70)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 152)
[0000][PE] mean and std.dev: (51.68, 28.69)
[0000][PE] low and high boundaries for proper pairs: (1, 193)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4162128 reads in 258.029 CPU sec, 7.433 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000021, nseq: 4162016
	[0000][ M::kt_pipeline] read 4162016 sequences (400000021 bp)...
[0000] Calling mem_process_seqs.., task: 32
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4162016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (175, 1868375, 11, 184)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 42, 69)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 149)
[0000][PE] mean and std.dev: (50.10, 27.38)
[0000][PE] low and high boundaries for proper pairs: (1, 189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.31, 39.74)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (26, 124, 175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 473)
[0000][PE] mean and std.dev: (99.64, 80.67)
[0000][PE] low and high boundaries for proper pairs: (1, 622)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (32, 47, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 131)
[0000][PE] mean and std.dev: (49.82, 24.78)
[0000][PE] low and high boundaries for proper pairs: (1, 164)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4162016 reads in 259.203 CPU sec, 7.250 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000182, nseq: 4130096
	[0000][ M::kt_pipeline] read 4130096 sequences (400000182 bp)...
[0000] Calling mem_process_seqs.., task: 33
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4130096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (180, 1824375, 9, 175)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 44, 62)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 130)
[0000][PE] mean and std.dev: (46.69, 24.66)
[0000][PE] low and high boundaries for proper pairs: (1, 164)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.53, 39.96)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (34, 47, 68)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 136)
[0000][PE] mean and std.dev: (50.73, 24.78)
[0000][PE] low and high boundaries for proper pairs: (1, 170)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4130096 reads in 280.130 CPU sec, 7.655 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000045, nseq: 4145350
	[0000][ M::kt_pipeline] read 4145350 sequences (400000045 bp)...
[0000] Calling mem_process_seqs.., task: 34
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4145350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (172, 1848961, 17, 177)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (25, 40, 63)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 139)
[0000][PE] mean and std.dev: (45.53, 28.00)
[0000][PE] low and high boundaries for proper pairs: (1, 177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.25, 39.78)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (130, 299, 935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2545)
[0000][PE] mean and std.dev: (382.60, 441.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3350)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (33, 46, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 126)
[0000][PE] mean and std.dev: (49.49, 25.58)
[0000][PE] low and high boundaries for proper pairs: (1, 157)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4145350 reads in 267.380 CPU sec, 7.287 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000038, nseq: 4150490
	[0000][ M::kt_pipeline] read 4150490 sequences (400000038 bp)...
[0000] Calling mem_process_seqs.., task: 35
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4150490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (201, 1859978, 12, 160)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 40, 60)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 126)
[0000][PE] mean and std.dev: (44.62, 24.50)
[0000][PE] low and high boundaries for proper pairs: (1, 159)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.43, 39.90)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (58, 220, 290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 754)
[0000][PE] mean and std.dev: (161.55, 120.63)
[0000][PE] low and high boundaries for proper pairs: (1, 986)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (29, 48, 69)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 149)
[0000][PE] mean and std.dev: (49.89, 29.01)
[0000][PE] low and high boundaries for proper pairs: (1, 189)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4150490 reads in 264.962 CPU sec, 7.296 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000034, nseq: 4148792
	[0000][ M::kt_pipeline] read 4148792 sequences (400000034 bp)...
[0000] Calling mem_process_seqs.., task: 36
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4148792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (203, 1863929, 13, 176)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 43, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 137)
[0000][PE] mean and std.dev: (48.66, 28.26)
[0000][PE] low and high boundaries for proper pairs: (1, 173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.51, 39.96)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (31, 76, 211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 571)
[0000][PE] mean and std.dev: (118.38, 101.26)
[0000][PE] low and high boundaries for proper pairs: (1, 751)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (31, 43, 58)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 112)
[0000][PE] mean and std.dev: (44.16, 21.93)
[0000][PE] low and high boundaries for proper pairs: (1, 139)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4148792 reads in 254.849 CPU sec, 7.033 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000027, nseq: 4149746
	[0000][ M::kt_pipeline] read 4149746 sequences (400000027 bp)...
[0000] Calling mem_process_seqs.., task: 37
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4149746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (196, 1840523, 15, 149)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (31, 45, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 139)
[0000][PE] mean and std.dev: (49.49, 26.82)
[0000][PE] low and high boundaries for proper pairs: (1, 175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 92, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.18, 39.73)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (72, 115, 357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 927)
[0000][PE] mean and std.dev: (177.00, 187.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1212)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (28, 43, 71)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 157)
[0000][PE] mean and std.dev: (52.32, 32.34)
[0000][PE] low and high boundaries for proper pairs: (1, 200)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4149746 reads in 275.982 CPU sec, 7.661 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000114, nseq: 4160802
	[0000][ M::kt_pipeline] read 4160802 sequences (400000114 bp)...
[0000] Calling mem_process_seqs.., task: 38
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4160802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (165, 1863828, 8, 193)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (30, 43, 63)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 129)
[0000][PE] mean and std.dev: (48.85, 26.26)
[0000][PE] low and high boundaries for proper pairs: (1, 162)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.21, 39.74)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (32, 47, 63)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 125)
[0000][PE] mean and std.dev: (49.39, 24.97)
[0000][PE] low and high boundaries for proper pairs: (1, 156)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4160802 reads in 255.852 CPU sec, 7.026 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000146, nseq: 4171558
	[0000][ M::kt_pipeline] read 4171558 sequences (400000146 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 39
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4171558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (205, 1847014, 20, 206)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 40, 60)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 124)
[0000][PE] mean and std.dev: (44.18, 22.85)
[0000][PE] low and high boundaries for proper pairs: (1, 156)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.23, 39.73)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (47, 125, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1154)
[0000][PE] mean and std.dev: (212.89, 255.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1523)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (28, 44, 71)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 157)
[0000][PE] mean and std.dev: (50.20, 28.65)
[0000][PE] low and high boundaries for proper pairs: (1, 200)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4171558 reads in 263.986 CPU sec, 7.247 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000170, nseq: 4160318
	[0000][ M::kt_pipeline] read 4160318 sequences (400000170 bp)...
[0000] Calling mem_process_seqs.., task: 40
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4160318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (192, 1870390, 10, 182)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 38, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 145)
[0000][PE] mean and std.dev: (47.37, 27.13)
[0000][PE] low and high boundaries for proper pairs: (1, 184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.45, 39.90)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (27, 130, 152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 402)
[0000][PE] mean and std.dev: (109.00, 82.37)
[0000][PE] low and high boundaries for proper pairs: (1, 527)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (29, 45, 63)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 131)
[0000][PE] mean and std.dev: (48.17, 26.43)
[0000][PE] low and high boundaries for proper pairs: (1, 165)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4160318 reads in 250.986 CPU sec, 6.774 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000031, nseq: 4164106
	[0000][ M::kt_pipeline] read 4164106 sequences (400000031 bp)...
[0000] Calling mem_process_seqs.., task: 41
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4164106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (174, 1883166, 10, 184)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (26, 42, 68)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 152)
[0000][PE] mean and std.dev: (48.43, 29.56)
[0000][PE] low and high boundaries for proper pairs: (1, 194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.37, 39.88)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (100, 270, 526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1378)
[0000][PE] mean and std.dev: (324.60, 281.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1804)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (29, 45, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 143)
[0000][PE] mean and std.dev: (49.24, 27.37)
[0000][PE] low and high boundaries for proper pairs: (1, 181)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4164106 reads in 247.540 CPU sec, 10.583 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000182, nseq: 4152048
	[0000][ M::kt_pipeline] read 4152048 sequences (400000182 bp)...
[0000] Calling mem_process_seqs.., task: 42
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4152048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (184, 1871499, 11, 197)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 44, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 141)
[0000][PE] mean and std.dev: (46.72, 26.66)
[0000][PE] low and high boundaries for proper pairs: (1, 179)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.61, 39.94)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (74, 154, 392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1028)
[0000][PE] mean and std.dev: (272.73, 282.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1403)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (31, 50, 68)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 142)
[0000][PE] mean and std.dev: (51.16, 27.29)
[0000][PE] low and high boundaries for proper pairs: (1, 179)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4152048 reads in 249.324 CPU sec, 6.754 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000100, nseq: 4165714
	[0000][ M::kt_pipeline] read 4165714 sequences (400000100 bp)...
[0000] Calling mem_process_seqs.., task: 43
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4165714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (192, 1880284, 12, 181)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 44, 72)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 160)
[0000][PE] mean and std.dev: (51.67, 30.29)
[0000][PE] low and high boundaries for proper pairs: (1, 204)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.21, 39.70)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (43, 73, 110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 244)
[0000][PE] mean and std.dev: (64.00, 39.28)
[0000][PE] low and high boundaries for proper pairs: (1, 311)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (32, 44, 68)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 140)
[0000][PE] mean and std.dev: (49.69, 28.07)
[0000][PE] low and high boundaries for proper pairs: (1, 176)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4165714 reads in 247.675 CPU sec, 6.795 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000034, nseq: 4160822
	[0000][ M::kt_pipeline] read 4160822 sequences (400000034 bp)...
[0000] Calling mem_process_seqs.., task: 44
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4160822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (148, 1874302, 18, 172)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 47, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 134)
[0000][PE] mean and std.dev: (48.05, 24.39)
[0000][PE] low and high boundaries for proper pairs: (1, 169)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.42, 39.95)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 116, 1041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3087)
[0000][PE] mean and std.dev: (475.28, 620.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4110)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (31, 53, 73)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 157)
[0000][PE] mean and std.dev: (55.28, 30.50)
[0000][PE] low and high boundaries for proper pairs: (1, 199)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4160822 reads in 253.354 CPU sec, 7.020 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000118, nseq: 4152582
	[0000][ M::kt_pipeline] read 4152582 sequences (400000118 bp)...
[0000] Calling mem_process_seqs.., task: 45
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4152582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (183, 1859083, 17, 168)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 42, 61)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 125)
[0000][PE] mean and std.dev: (47.31, 26.42)
[0000][PE] low and high boundaries for proper pairs: (1, 157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.31, 39.77)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (51, 118, 511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1431)
[0000][PE] mean and std.dev: (142.57, 136.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1891)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (32, 47, 70)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 146)
[0000][PE] mean and std.dev: (51.58, 26.34)
[0000][PE] low and high boundaries for proper pairs: (1, 184)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4152582 reads in 259.526 CPU sec, 7.019 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000208, nseq: 4155342
	[0000][ M::kt_pipeline] read 4155342 sequences (400000208 bp)...
[0000] Calling mem_process_seqs.., task: 46
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4155342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (174, 1870335, 17, 182)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 44, 68)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 150)
[0000][PE] mean and std.dev: (48.51, 28.63)
[0000][PE] low and high boundaries for proper pairs: (1, 191)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.41, 39.88)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (71, 159, 497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1349)
[0000][PE] mean and std.dev: (198.27, 179.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1775)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (33, 47, 71)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 147)
[0000][PE] mean and std.dev: (52.64, 28.68)
[0000][PE] low and high boundaries for proper pairs: (1, 185)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4155342 reads in 252.673 CPU sec, 6.963 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000154, nseq: 4142300
	[0000][ M::kt_pipeline] read 4142300 sequences (400000154 bp)...
[0000] Calling mem_process_seqs.., task: 47
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4142300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (193, 1836857, 13, 146)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 43, 66)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 142)
[0000][PE] mean and std.dev: (48.83, 28.65)
[0000][PE] low and high boundaries for proper pairs: (1, 180)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.39, 39.86)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (59, 113, 557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1553)
[0000][PE] mean and std.dev: (249.75, 349.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2051)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (31, 47, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 139)
[0000][PE] mean and std.dev: (50.41, 25.84)
[0000][PE] low and high boundaries for proper pairs: (1, 175)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4142300 reads in 277.282 CPU sec, 7.457 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000253, nseq: 4157060
	[0000][ M::kt_pipeline] read 4157060 sequences (400000253 bp)...
[0000] Calling mem_process_seqs.., task: 48
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4157060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (194, 1876775, 13, 163)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (23, 40, 59)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 131)
[0000][PE] mean and std.dev: (45.23, 27.18)
[0000][PE] low and high boundaries for proper pairs: (1, 167)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.54, 39.97)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (80, 91, 511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1373)
[0000][PE] mean and std.dev: (157.64, 162.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1804)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (29, 41, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 143)
[0000][PE] mean and std.dev: (48.04, 28.88)
[0000][PE] low and high boundaries for proper pairs: (1, 181)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4157060 reads in 248.776 CPU sec, 6.832 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000022, nseq: 4166248
	[0000][ M::kt_pipeline] read 4166248 sequences (400000022 bp)...
[0000] Calling mem_process_seqs.., task: 49
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4166248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (160, 1866534, 17, 160)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (31, 41, 57)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 109)
[0000][PE] mean and std.dev: (45.25, 21.29)
[0000][PE] low and high boundaries for proper pairs: (1, 135)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.39, 39.92)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 40, 1072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3176)
[0000][PE] mean and std.dev: (324.62, 456.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4228)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (28, 43, 63)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 133)
[0000][PE] mean and std.dev: (47.87, 27.60)
[0000][PE] low and high boundaries for proper pairs: (1, 168)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4166248 reads in 252.011 CPU sec, 7.038 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000247, nseq: 4163482
	[0000][ M::kt_pipeline] read 4163482 sequences (400000247 bp)...
[0000] Calling mem_process_seqs.., task: 50
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4163482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (167, 1860210, 12, 186)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (31, 42, 63)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 127)
[0000][PE] mean and std.dev: (47.09, 23.61)
[0000][PE] low and high boundaries for proper pairs: (1, 159)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.36, 39.91)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (22, 148, 348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1000)
[0000][PE] mean and std.dev: (209.17, 253.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1326)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (30, 45, 73)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 159)
[0000][PE] mean and std.dev: (51.35, 28.63)
[0000][PE] low and high boundaries for proper pairs: (1, 202)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4163482 reads in 250.855 CPU sec, 6.927 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000167, nseq: 4152534
	[0000][ M::kt_pipeline] read 4152534 sequences (400000167 bp)...
[0000] Calling mem_process_seqs.., task: 51
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4152534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (189, 1852173, 18, 200)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (25, 38, 58)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 124)
[0000][PE] mean and std.dev: (42.69, 23.98)
[0000][PE] low and high boundaries for proper pairs: (1, 157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.32, 39.72)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (8, 57, 139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 401)
[0000][PE] mean and std.dev: (48.14, 49.87)
[0000][PE] low and high boundaries for proper pairs: (1, 532)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (33, 45, 68)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 138)
[0000][PE] mean and std.dev: (49.89, 24.80)
[0000][PE] low and high boundaries for proper pairs: (1, 173)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4152534 reads in 263.733 CPU sec, 7.270 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000144, nseq: 4160510
	[0000][ M::kt_pipeline] read 4160510 sequences (400000144 bp)...
[0000] Calling mem_process_seqs.., task: 52
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4160510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (174, 1879505, 12, 160)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 44, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 136)
[0000][PE] mean and std.dev: (48.16, 25.42)
[0000][PE] low and high boundaries for proper pairs: (1, 172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.47, 39.95)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (24, 40, 224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 624)
[0000][PE] mean and std.dev: (90.36, 141.92)
[0000][PE] low and high boundaries for proper pairs: (1, 824)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (37, 50, 78)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 160)
[0000][PE] mean and std.dev: (54.73, 30.81)
[0000][PE] low and high boundaries for proper pairs: (1, 201)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4160510 reads in 251.719 CPU sec, 6.912 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000057, nseq: 4146380
	[0000][ M::kt_pipeline] read 4146380 sequences (400000057 bp)...
[0000] Calling mem_process_seqs.., task: 53
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4146380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (194, 1850276, 11, 160)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 41, 63)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 131)
[0000][PE] mean and std.dev: (45.23, 24.63)
[0000][PE] low and high boundaries for proper pairs: (1, 165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.44, 39.92)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 50, 136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 378)
[0000][PE] mean and std.dev: (61.10, 59.00)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (28, 41, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 139)
[0000][PE] mean and std.dev: (46.41, 26.01)
[0000][PE] low and high boundaries for proper pairs: (1, 176)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4146380 reads in 263.955 CPU sec, 7.283 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000120, nseq: 4038366
	[0000][ M::kt_pipeline] read 4038366 sequences (400000120 bp)...
[0000] Calling mem_process_seqs.., task: 54
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4038366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (140, 1580916, 11, 142)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (25, 41, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 142)
[0000][PE] mean and std.dev: (45.15, 25.29)
[0000][PE] low and high boundaries for proper pairs: (1, 181)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.44, 39.81)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (39, 58, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1137)
[0000][PE] mean and std.dev: (223.27, 253.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1503)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (30, 45, 63)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 129)
[0000][PE] mean and std.dev: (49.18, 26.57)
[0000][PE] low and high boundaries for proper pairs: (1, 162)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4038366 reads in 415.720 CPU sec, 11.079 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000060, nseq: 4090458
	[0000][ M::kt_pipeline] read 4090458 sequences (400000060 bp)...
[0000] Calling mem_process_seqs.., task: 55
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4090458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (171, 1686849, 12, 165)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (32, 45, 73)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 155)
[0000][PE] mean and std.dev: (53.08, 31.09)
[0000][PE] low and high boundaries for proper pairs: (1, 196)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.45, 39.91)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 287, 1030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3062)
[0000][PE] mean and std.dev: (402.33, 469.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4078)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (32, 47, 70)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 146)
[0000][PE] mean and std.dev: (51.77, 27.84)
[0000][PE] low and high boundaries for proper pairs: (1, 184)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4090458 reads in 353.930 CPU sec, 9.689 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000084, nseq: 3971682
	[0000][ M::kt_pipeline] read 3971682 sequences (400000084 bp)...
[0000] Calling mem_process_seqs.., task: 56
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3971682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (150, 1515239, 10, 129)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (30, 45, 66)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 138)
[0000][PE] mean and std.dev: (49.14, 25.85)
[0000][PE] low and high boundaries for proper pairs: (1, 174)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.16, 39.61)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (28, 129, 354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1006)
[0000][PE] mean and std.dev: (182.60, 181.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1332)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (31, 46, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 139)
[0000][PE] mean and std.dev: (51.32, 28.30)
[0000][PE] low and high boundaries for proper pairs: (1, 175)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3971682 reads in 451.284 CPU sec, 12.102 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000049, nseq: 4104664
	[0000][ M::kt_pipeline] read 4104664 sequences (400000049 bp)...
[0000] Calling mem_process_seqs.., task: 57
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4104664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (156, 1724095, 8, 152)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (26, 43, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 143)
[0000][PE] mean and std.dev: (47.94, 28.41)
[0000][PE] low and high boundaries for proper pairs: (1, 182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.31, 39.72)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (29, 44, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 143)
[0000][PE] mean and std.dev: (49.01, 25.85)
[0000][PE] low and high boundaries for proper pairs: (1, 181)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4104664 reads in 334.614 CPU sec, 9.229 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000122, nseq: 4169660
	[0000][ M::kt_pipeline] read 4169660 sequences (400000122 bp)...
[0000] Calling mem_process_seqs.., task: 58
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4169660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (169, 1888296, 12, 179)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 46, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 137)
[0000][PE] mean and std.dev: (49.30, 24.90)
[0000][PE] low and high boundaries for proper pairs: (1, 173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.23, 39.75)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (45, 229, 1659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4887)
[0000][PE] mean and std.dev: (792.83, 1123.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6501)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (30, 39, 59)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 117)
[0000][PE] mean and std.dev: (43.25, 21.53)
[0000][PE] low and high boundaries for proper pairs: (1, 146)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4169660 reads in 247.329 CPU sec, 7.006 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000140, nseq: 4146914
	[0000][ M::kt_pipeline] read 4146914 sequences (400000140 bp)...
[0000] Calling mem_process_seqs.., task: 59
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4146914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (183, 1844795, 12, 182)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 42, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 138)
[0000][PE] mean and std.dev: (46.62, 25.71)
[0000][PE] low and high boundaries for proper pairs: (1, 175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.45, 39.91)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (34, 107, 606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1750)
[0000][PE] mean and std.dev: (307.00, 424.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2322)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (28, 43, 70)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 154)
[0000][PE] mean and std.dev: (49.15, 28.74)
[0000][PE] low and high boundaries for proper pairs: (1, 196)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4146914 reads in 261.763 CPU sec, 7.189 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000083, nseq: 4144060
	[0000][ M::kt_pipeline] read 4144060 sequences (400000083 bp)...
[0000] Calling mem_process_seqs.., task: 60
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4144060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (204, 1838351, 16, 158)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 42, 70)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 154)
[0000][PE] mean and std.dev: (49.54, 29.01)
[0000][PE] low and high boundaries for proper pairs: (1, 196)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.49, 39.94)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (35, 51, 207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 551)
[0000][PE] mean and std.dev: (104.40, 138.82)
[0000][PE] low and high boundaries for proper pairs: (1, 723)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (28, 41, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 136)
[0000][PE] mean and std.dev: (47.11, 26.01)
[0000][PE] low and high boundaries for proper pairs: (1, 172)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4144060 reads in 265.796 CPU sec, 7.252 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000050, nseq: 4159946
	[0000][ M::kt_pipeline] read 4159946 sequences (400000050 bp)...
[0000] Calling mem_process_seqs.., task: 61
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4159946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (167, 1873190, 14, 181)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (31, 47, 72)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 154)
[0000][PE] mean and std.dev: (50.32, 28.86)
[0000][PE] low and high boundaries for proper pairs: (1, 195)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.40, 39.94)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 81, 194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 546)
[0000][PE] mean and std.dev: (101.85, 105.68)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (32, 47, 68)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 140)
[0000][PE] mean and std.dev: (49.34, 25.26)
[0000][PE] low and high boundaries for proper pairs: (1, 176)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4159946 reads in 249.312 CPU sec, 6.795 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000147, nseq: 4146850
	[0000][ M::kt_pipeline] read 4146850 sequences (400000147 bp)...
[0000] Calling mem_process_seqs.., task: 62
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4146850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (174, 1844578, 16, 166)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (26, 39, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 140)
[0000][PE] mean and std.dev: (45.62, 26.57)
[0000][PE] low and high boundaries for proper pairs: (1, 178)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.53, 39.93)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (48, 100, 386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1062)
[0000][PE] mean and std.dev: (131.79, 133.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1400)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (27, 48, 70)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 156)
[0000][PE] mean and std.dev: (50.16, 30.43)
[0000][PE] low and high boundaries for proper pairs: (1, 199)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4146850 reads in 268.968 CPU sec, 9.461 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000026, nseq: 4150438
	[0000][ M::kt_pipeline] read 4150438 sequences (400000026 bp)...
[0000] Calling mem_process_seqs.., task: 63
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4150438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (191, 1825711, 13, 193)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 41, 60)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 124)
[0000][PE] mean and std.dev: (44.41, 23.18)
[0000][PE] low and high boundaries for proper pairs: (1, 156)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.48, 39.90)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (28, 116, 2279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6781)
[0000][PE] mean and std.dev: (669.25, 1421.04)
[0000][PE] low and high boundaries for proper pairs: (1, 9032)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (28, 41, 62)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 130)
[0000][PE] mean and std.dev: (46.27, 25.59)
[0000][PE] low and high boundaries for proper pairs: (1, 164)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4150438 reads in 264.868 CPU sec, 7.289 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000126, nseq: 4162806
	[0000][ M::kt_pipeline] read 4162806 sequences (400000126 bp)...
[0000] Calling mem_process_seqs.., task: 64
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4162806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (182, 1881635, 8, 176)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (30, 46, 71)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 153)
[0000][PE] mean and std.dev: (51.35, 28.80)
[0000][PE] low and high boundaries for proper pairs: (1, 194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.25, 39.75)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (33, 48, 78)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 168)
[0000][PE] mean and std.dev: (53.26, 30.25)
[0000][PE] low and high boundaries for proper pairs: (1, 213)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4162806 reads in 249.105 CPU sec, 6.824 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000110, nseq: 4161380
	[0000][ M::kt_pipeline] read 4161380 sequences (400000110 bp)...
[0000] Calling mem_process_seqs.., task: 65
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4161380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (168, 1871843, 18, 169)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (32, 47, 72)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 152)
[0000][PE] mean and std.dev: (51.07, 28.48)
[0000][PE] low and high boundaries for proper pairs: (1, 192)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 92, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.19, 39.73)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (25, 61, 407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1171)
[0000][PE] mean and std.dev: (155.27, 282.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1553)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (32, 48, 71)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 149)
[0000][PE] mean and std.dev: (52.98, 28.31)
[0000][PE] low and high boundaries for proper pairs: (1, 188)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4161380 reads in 251.209 CPU sec, 6.873 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000241, nseq: 4144574
	[0000][ M::kt_pipeline] read 4144574 sequences (400000241 bp)...
[0000] Calling mem_process_seqs.., task: 66
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4144574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (171, 1812204, 7, 173)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 42, 63)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 135)
[0000][PE] mean and std.dev: (46.01, 27.48)
[0000][PE] low and high boundaries for proper pairs: (1, 171)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.20, 39.69)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (28, 44, 70)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 154)
[0000][PE] mean and std.dev: (48.22, 28.79)
[0000][PE] low and high boundaries for proper pairs: (1, 196)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4144574 reads in 285.785 CPU sec, 7.781 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000163, nseq: 4147220
	[0000][ M::kt_pipeline] read 4147220 sequences (400000163 bp)...
[0000] Calling mem_process_seqs.., task: 67
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4147220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (187, 1827990, 10, 201)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (23, 40, 61)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 137)
[0000][PE] mean and std.dev: (44.78, 25.70)
[0000][PE] low and high boundaries for proper pairs: (1, 175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.27, 39.74)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 139, 237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 689)
[0000][PE] mean and std.dev: (124.33, 153.21)
[0000][PE] low and high boundaries for proper pairs: (1, 915)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (32, 45, 68)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 140)
[0000][PE] mean and std.dev: (49.94, 26.88)
[0000][PE] low and high boundaries for proper pairs: (1, 176)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4147220 reads in 288.351 CPU sec, 7.903 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000116, nseq: 4157554
	[0000][ M::kt_pipeline] read 4157554 sequences (400000116 bp)...
[0000] Calling mem_process_seqs.., task: 68
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4157554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (169, 1862156, 17, 179)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 44, 72)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 158)
[0000][PE] mean and std.dev: (51.84, 31.71)
[0000][PE] low and high boundaries for proper pairs: (1, 201)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.45, 39.96)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (33, 165, 1062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3120)
[0000][PE] mean and std.dev: (348.12, 424.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4149)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (32, 45, 75)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 161)
[0000][PE] mean and std.dev: (53.94, 32.27)
[0000][PE] low and high boundaries for proper pairs: (1, 204)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4157554 reads in 255.186 CPU sec, 6.842 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000088, nseq: 4160938
	[0000][ M::kt_pipeline] read 4160938 sequences (400000088 bp)...
[0000] Calling mem_process_seqs.., task: 69
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4160938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (195, 1880364, 10, 177)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 42, 71)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 155)
[0000][PE] mean and std.dev: (48.61, 28.10)
[0000][PE] low and high boundaries for proper pairs: (1, 197)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.35, 39.91)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (98, 139, 211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 437)
[0000][PE] mean and std.dev: (133.56, 86.12)
[0000][PE] low and high boundaries for proper pairs: (1, 550)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (31, 44, 62)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 124)
[0000][PE] mean and std.dev: (46.80, 24.50)
[0000][PE] low and high boundaries for proper pairs: (1, 155)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4160938 reads in 247.424 CPU sec, 6.929 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000161, nseq: 4163860
	[0000][ M::kt_pipeline] read 4163860 sequences (400000161 bp)...
[0000] Calling mem_process_seqs.., task: 70
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4163860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (188, 1867962, 36, 174)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 43, 69)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 153)
[0000][PE] mean and std.dev: (48.37, 27.71)
[0000][PE] low and high boundaries for proper pairs: (1, 195)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.44, 39.93)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (124, 1034, 1078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2986)
[0000][PE] mean and std.dev: (704.70, 465.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3940)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (34, 49, 75)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 157)
[0000][PE] mean and std.dev: (55.04, 29.68)
[0000][PE] low and high boundaries for proper pairs: (1, 198)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4163860 reads in 251.203 CPU sec, 6.817 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000129, nseq: 4152692
	[0000][ M::kt_pipeline] read 4152692 sequences (400000129 bp)...
[0000] Calling mem_process_seqs.., task: 71
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4152692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (174, 1869084, 7, 163)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (32, 50, 70)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 146)
[0000][PE] mean and std.dev: (51.55, 26.88)
[0000][PE] low and high boundaries for proper pairs: (1, 184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.47, 39.96)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (29, 44, 62)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 128)
[0000][PE] mean and std.dev: (47.16, 24.44)
[0000][PE] low and high boundaries for proper pairs: (1, 161)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4152692 reads in 253.341 CPU sec, 6.991 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000175, nseq: 4184382
	[0000][ M::kt_pipeline] read 4184382 sequences (400000175 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 72
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4184382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (164, 1726575, 11, 197)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 44, 63)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 135)
[0000][PE] mean and std.dev: (44.46, 21.38)
[0000][PE] low and high boundaries for proper pairs: (1, 171)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.42, 39.93)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (41, 109, 353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 977)
[0000][PE] mean and std.dev: (190.27, 191.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1289)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (30, 45, 77)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 171)
[0000][PE] mean and std.dev: (51.91, 29.43)
[0000][PE] low and high boundaries for proper pairs: (1, 218)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4184382 reads in 298.626 CPU sec, 7.976 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000152, nseq: 4154764
	[0000][ M::kt_pipeline] read 4154764 sequences (400000152 bp)...
[0000] Calling mem_process_seqs.., task: 73
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4154764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (180, 1864338, 8, 193)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (30, 44, 69)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 147)
[0000][PE] mean and std.dev: (49.27, 27.07)
[0000][PE] low and high boundaries for proper pairs: (1, 186)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.47, 39.93)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (34, 47, 80)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 172)
[0000][PE] mean and std.dev: (55.18, 30.89)
[0000][PE] low and high boundaries for proper pairs: (1, 218)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4154764 reads in 256.001 CPU sec, 7.101 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000083, nseq: 4210914
	[0000][ M::kt_pipeline] read 4210914 sequences (400000083 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 74
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 400000239, nseq: 4152154
	[0000][ M::kt_pipeline] read 4152154 sequences (400000239 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4210914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (169, 1674538, 11, 145)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 43, 70)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 152)
[0000][PE] mean and std.dev: (50.40, 28.98)
[0000][PE] low and high boundaries for proper pairs: (1, 193)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.52, 39.89)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (9, 25, 230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 672)
[0000][PE] mean and std.dev: (112.50, 193.30)
[0000][PE] low and high boundaries for proper pairs: (1, 893)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (27, 50, 72)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 162)
[0000][PE] mean and std.dev: (52.97, 30.95)
[0000][PE] low and high boundaries for proper pairs: (1, 207)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4210914 reads in 261.699 CPU sec, 7.185 real sec
[0000] Calling mem_process_seqs.., task: 75
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4152154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (190, 1849063, 29, 148)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (26, 44, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 143)
[0000][PE] mean and std.dev: (48.36, 28.78)
[0000][PE] low and high boundaries for proper pairs: (1, 182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.36, 39.88)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 14, 234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 680)
[0000][PE] mean and std.dev: (77.85, 113.85)
[0000][PE] low and high boundaries for proper pairs: (1, 903)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (32, 47, 68)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 140)
[0000][PE] mean and std.dev: (52.48, 27.94)
[0000][PE] low and high boundaries for proper pairs: (1, 176)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4152154 reads in 259.890 CPU sec, 7.240 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000140, nseq: 4159780
	[0000][ M::kt_pipeline] read 4159780 sequences (400000140 bp)...
[0000] Calling mem_process_seqs.., task: 76
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4159780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (178, 1778628, 9, 169)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 45, 72)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 158)
[0000][PE] mean and std.dev: (50.95, 29.93)
[0000][PE] low and high boundaries for proper pairs: (1, 201)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.21, 39.72)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (31, 44, 68)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 142)
[0000][PE] mean and std.dev: (50.45, 26.29)
[0000][PE] low and high boundaries for proper pairs: (1, 179)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4159780 reads in 280.223 CPU sec, 7.543 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000087, nseq: 4163538
	[0000][ M::kt_pipeline] read 4163538 sequences (400000087 bp)...
[0000] Calling mem_process_seqs.., task: 77
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4163538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (227, 1875903, 6, 198)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 42, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 138)
[0000][PE] mean and std.dev: (45.76, 24.80)
[0000][PE] low and high boundaries for proper pairs: (1, 175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.21, 39.73)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (27, 45, 70)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 156)
[0000][PE] mean and std.dev: (50.34, 30.67)
[0000][PE] low and high boundaries for proper pairs: (1, 199)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4163538 reads in 247.061 CPU sec, 6.666 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000069, nseq: 4122048
	[0000][ M::kt_pipeline] read 4122048 sequences (400000069 bp)...
[0000] Calling mem_process_seqs.., task: 78
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4122048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (190, 1755134, 22, 178)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 44, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 143)
[0000][PE] mean and std.dev: (49.09, 26.55)
[0000][PE] low and high boundaries for proper pairs: (1, 181)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.28, 39.80)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (56, 165, 329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 875)
[0000][PE] mean and std.dev: (222.77, 223.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1148)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (32, 50, 76)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 164)
[0000][PE] mean and std.dev: (53.45, 28.95)
[0000][PE] low and high boundaries for proper pairs: (1, 208)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4122048 reads in 312.237 CPU sec, 8.274 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000055, nseq: 4143938
	[0000][ M::kt_pipeline] read 4143938 sequences (400000055 bp)...
[0000] Calling mem_process_seqs.., task: 79
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4143938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (187, 1849091, 12, 188)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (31, 45, 71)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 151)
[0000][PE] mean and std.dev: (49.57, 27.59)
[0000][PE] low and high boundaries for proper pairs: (1, 191)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.42, 39.93)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (37, 55, 386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1084)
[0000][PE] mean and std.dev: (165.45, 188.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1433)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (30, 44, 73)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 159)
[0000][PE] mean and std.dev: (51.15, 28.98)
[0000][PE] low and high boundaries for proper pairs: (1, 202)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4143938 reads in 264.002 CPU sec, 7.337 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000126, nseq: 4148566
	[0000][ M::kt_pipeline] read 4148566 sequences (400000126 bp)...
[0000] Calling mem_process_seqs.., task: 80
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4148566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (159, 1844362, 16, 181)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (32, 41, 61)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 119)
[0000][PE] mean and std.dev: (45.63, 22.40)
[0000][PE] low and high boundaries for proper pairs: (1, 148)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.28, 39.73)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (61, 167, 331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 871)
[0000][PE] mean and std.dev: (165.00, 145.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1141)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (28, 46, 71)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 157)
[0000][PE] mean and std.dev: (50.87, 29.28)
[0000][PE] low and high boundaries for proper pairs: (1, 200)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4148566 reads in 267.077 CPU sec, 7.499 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000108, nseq: 4146542
	[0000][ M::kt_pipeline] read 4146542 sequences (400000108 bp)...
[0000] Calling mem_process_seqs.., task: 81
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4146542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (180, 1816904, 11, 159)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 41, 62)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 132)
[0000][PE] mean and std.dev: (46.17, 26.94)
[0000][PE] low and high boundaries for proper pairs: (1, 167)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.40, 39.89)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (38, 102, 237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 635)
[0000][PE] mean and std.dev: (99.50, 90.03)
[0000][PE] low and high boundaries for proper pairs: (1, 834)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (29, 43, 63)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 131)
[0000][PE] mean and std.dev: (48.21, 25.64)
[0000][PE] low and high boundaries for proper pairs: (1, 165)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4146542 reads in 278.455 CPU sec, 7.616 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000204, nseq: 4157992
	[0000][ M::kt_pipeline] read 4157992 sequences (400000204 bp)...
[0000] Calling mem_process_seqs.., task: 82
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4157992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (173, 1854465, 16, 159)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 45, 70)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 154)
[0000][PE] mean and std.dev: (49.04, 29.00)
[0000][PE] low and high boundaries for proper pairs: (1, 196)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.25, 39.71)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (41, 117, 833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2417)
[0000][PE] mean and std.dev: (287.64, 471.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3209)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (30, 48, 73)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 159)
[0000][PE] mean and std.dev: (52.66, 29.42)
[0000][PE] low and high boundaries for proper pairs: (1, 202)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4157992 reads in 258.486 CPU sec, 8.949 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000037, nseq: 4163858
	[0000][ M::kt_pipeline] read 4163858 sequences (400000037 bp)...
[0000] Calling mem_process_seqs.., task: 83
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4163858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (171, 1885390, 18, 189)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (32, 46, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 131)
[0000][PE] mean and std.dev: (51.19, 28.60)
[0000][PE] low and high boundaries for proper pairs: (1, 166)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.30, 39.76)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (34, 578, 961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2815)
[0000][PE] mean and std.dev: (322.00, 330.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3742)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (29, 44, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 134)
[0000][PE] mean and std.dev: (49.74, 26.28)
[0000][PE] low and high boundaries for proper pairs: (1, 169)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4163858 reads in 248.376 CPU sec, 6.987 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000070, nseq: 4146294
	[0000][ M::kt_pipeline] read 4146294 sequences (400000070 bp)...
[0000] Calling mem_process_seqs.., task: 84
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4146294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (206, 1810652, 16, 194)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 48, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 143)
[0000][PE] mean and std.dev: (49.75, 26.01)
[0000][PE] low and high boundaries for proper pairs: (1, 181)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.45, 39.88)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 50, 75)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 197)
[0000][PE] mean and std.dev: (43.50, 34.58)
[0000][PE] low and high boundaries for proper pairs: (1, 258)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (31, 47, 72)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 154)
[0000][PE] mean and std.dev: (50.84, 26.88)
[0000][PE] low and high boundaries for proper pairs: (1, 195)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4146294 reads in 284.548 CPU sec, 7.932 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000029, nseq: 4157690
	[0000][ M::kt_pipeline] read 4157690 sequences (400000029 bp)...
[0000] Calling mem_process_seqs.., task: 85
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4157690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (186, 1862087, 12, 189)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 44, 63)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 131)
[0000][PE] mean and std.dev: (48.56, 26.26)
[0000][PE] low and high boundaries for proper pairs: (1, 165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.30, 39.77)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (72, 99, 1022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2922)
[0000][PE] mean and std.dev: (347.45, 574.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3872)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (29, 46, 68)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 146)
[0000][PE] mean and std.dev: (49.75, 26.22)
[0000][PE] low and high boundaries for proper pairs: (1, 185)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4157690 reads in 255.520 CPU sec, 7.141 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000090, nseq: 4151106
	[0000][ M::kt_pipeline] read 4151106 sequences (400000090 bp)...
[0000] Calling mem_process_seqs.., task: 86
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4151106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (167, 1860089, 12, 174)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 42, 71)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 159)
[0000][PE] mean and std.dev: (46.67, 28.63)
[0000][PE] low and high boundaries for proper pairs: (1, 203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.26, 39.76)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (111, 279, 408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1002)
[0000][PE] mean and std.dev: (189.80, 130.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1299)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (33, 48, 69)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 141)
[0000][PE] mean and std.dev: (52.08, 28.47)
[0000][PE] low and high boundaries for proper pairs: (1, 177)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4151106 reads in 270.237 CPU sec, 7.274 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000101, nseq: 4165086
	[0000][ M::kt_pipeline] read 4165086 sequences (400000101 bp)...
[0000] Calling mem_process_seqs.., task: 87
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4165086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (199, 1883350, 20, 176)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 40, 59)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 123)
[0000][PE] mean and std.dev: (44.72, 23.29)
[0000][PE] low and high boundaries for proper pairs: (1, 155)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.27, 39.74)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (90, 154, 1256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3588)
[0000][PE] mean and std.dev: (576.32, 683.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4754)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (32, 52, 73)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 155)
[0000][PE] mean and std.dev: (54.71, 30.19)
[0000][PE] low and high boundaries for proper pairs: (1, 196)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4165086 reads in 249.198 CPU sec, 6.858 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000103, nseq: 4154064
	[0000][ M::kt_pipeline] read 4154064 sequences (400000103 bp)...
[0000] Calling mem_process_seqs.., task: 88
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4154064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (169, 1859930, 10, 178)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 47, 70)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 152)
[0000][PE] mean and std.dev: (49.42, 27.55)
[0000][PE] low and high boundaries for proper pairs: (1, 193)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.44, 39.95)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 93, 288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 832)
[0000][PE] mean and std.dev: (135.00, 163.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1104)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (29, 45, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 143)
[0000][PE] mean and std.dev: (49.20, 25.76)
[0000][PE] low and high boundaries for proper pairs: (1, 181)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4154064 reads in 261.366 CPU sec, 7.292 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000186, nseq: 4166418
	[0000][ M::kt_pipeline] read 4166418 sequences (400000186 bp)...
[0000] Calling mem_process_seqs.., task: 89
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4166418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (180, 1871859, 9, 173)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (30, 46, 74)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 162)
[0000][PE] mean and std.dev: (51.51, 28.88)
[0000][PE] low and high boundaries for proper pairs: (1, 206)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.24, 39.77)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (28, 48, 77)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 175)
[0000][PE] mean and std.dev: (54.10, 30.48)
[0000][PE] low and high boundaries for proper pairs: (1, 224)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4166418 reads in 251.638 CPU sec, 7.116 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000205, nseq: 4154560
	[0000][ M::kt_pipeline] read 4154560 sequences (400000205 bp)...
[0000] Calling mem_process_seqs.., task: 90
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4154560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (205, 1860294, 15, 192)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 40, 57)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 117)
[0000][PE] mean and std.dev: (43.05, 22.15)
[0000][PE] low and high boundaries for proper pairs: (1, 147)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.22, 39.69)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (50, 158, 730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2090)
[0000][PE] mean and std.dev: (385.43, 463.51)
[0000][PE] low and high boundaries for proper pairs: (1, 2770)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (31, 46, 70)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 148)
[0000][PE] mean and std.dev: (50.91, 26.92)
[0000][PE] low and high boundaries for proper pairs: (1, 187)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4154560 reads in 261.971 CPU sec, 7.184 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000084, nseq: 4175194
	[0000][ M::kt_pipeline] read 4175194 sequences (400000084 bp)...
[0000] Calling mem_process_seqs.., task: 91
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4175194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (194, 1870772, 12, 186)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 44, 71)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 157)
[0000][PE] mean and std.dev: (50.01, 28.54)
[0000][PE] low and high boundaries for proper pairs: (1, 200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.27, 39.72)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (93, 100, 317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 765)
[0000][PE] mean and std.dev: (170.00, 154.87)
[0000][PE] low and high boundaries for proper pairs: (1, 989)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (33, 48, 66)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 132)
[0000][PE] mean and std.dev: (50.93, 26.47)
[0000][PE] low and high boundaries for proper pairs: (1, 165)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4175194 reads in 248.142 CPU sec, 6.813 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000061, nseq: 4159960
	[0000][ M::kt_pipeline] read 4159960 sequences (400000061 bp)...
[0000] Calling mem_process_seqs.., task: 92
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4159960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (190, 1873929, 16, 206)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 40, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 139)
[0000][PE] mean and std.dev: (46.28, 27.13)
[0000][PE] low and high boundaries for proper pairs: (1, 176)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.39, 39.91)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (122, 225, 386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 914)
[0000][PE] mean and std.dev: (176.77, 113.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1178)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (28, 42, 62)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 130)
[0000][PE] mean and std.dev: (46.98, 26.47)
[0000][PE] low and high boundaries for proper pairs: (1, 164)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4159960 reads in 250.957 CPU sec, 7.014 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000013, nseq: 4151718
	[0000][ M::kt_pipeline] read 4151718 sequences (400000013 bp)...
[0000] Calling mem_process_seqs.., task: 93
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4151718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (187, 1847625, 10, 173)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 45, 75)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 171)
[0000][PE] mean and std.dev: (51.79, 32.74)
[0000][PE] low and high boundaries for proper pairs: (1, 219)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.40, 39.90)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (87, 132, 223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 495)
[0000][PE] mean and std.dev: (108.00, 78.16)
[0000][PE] low and high boundaries for proper pairs: (1, 631)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (28, 41, 63)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 133)
[0000][PE] mean and std.dev: (46.12, 25.58)
[0000][PE] low and high boundaries for proper pairs: (1, 168)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4151718 reads in 261.834 CPU sec, 7.012 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000066, nseq: 4162698
	[0000][ M::kt_pipeline] read 4162698 sequences (400000066 bp)...
[0000] Calling mem_process_seqs.., task: 94
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4162698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (162, 1872512, 12, 157)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (33, 44, 62)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 120)
[0000][PE] mean and std.dev: (46.71, 22.56)
[0000][PE] low and high boundaries for proper pairs: (1, 149)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.39, 39.90)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (37, 147, 2300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6826)
[0000][PE] mean and std.dev: (905.50, 1551.30)
[0000][PE] low and high boundaries for proper pairs: (1, 9089)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (33, 51, 70)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 144)
[0000][PE] mean and std.dev: (50.99, 26.79)
[0000][PE] low and high boundaries for proper pairs: (1, 181)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4162698 reads in 248.574 CPU sec, 6.889 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000063, nseq: 4154072
	[0000][ M::kt_pipeline] read 4154072 sequences (400000063 bp)...
[0000] Calling mem_process_seqs.., task: 95
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4154072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (214, 1863116, 22, 174)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 41, 63)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 133)
[0000][PE] mean and std.dev: (46.58, 25.87)
[0000][PE] low and high boundaries for proper pairs: (1, 168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.38, 39.91)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (45, 107, 218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 564)
[0000][PE] mean and std.dev: (119.33, 84.74)
[0000][PE] low and high boundaries for proper pairs: (1, 737)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (31, 48, 69)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 145)
[0000][PE] mean and std.dev: (50.76, 25.94)
[0000][PE] low and high boundaries for proper pairs: (1, 183)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4154072 reads in 265.593 CPU sec, 7.390 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000018, nseq: 4168168
	[0000][ M::kt_pipeline] read 4168168 sequences (400000018 bp)...
[0000] Calling mem_process_seqs.., task: 96
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4168168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (182, 1884766, 12, 158)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (26, 37, 57)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 119)
[0000][PE] mean and std.dev: (40.91, 21.33)
[0000][PE] low and high boundaries for proper pairs: (1, 150)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.24, 39.69)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (82, 112, 642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1762)
[0000][PE] mean and std.dev: (317.25, 346.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2322)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (30, 46, 73)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 159)
[0000][PE] mean and std.dev: (52.42, 30.21)
[0000][PE] low and high boundaries for proper pairs: (1, 202)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4168168 reads in 247.233 CPU sec, 6.881 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000058, nseq: 4168220
	[0000][ M::kt_pipeline] read 4168220 sequences (400000058 bp)...
[0000] Calling mem_process_seqs.., task: 97
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4168220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (193, 1837256, 13, 169)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 42, 62)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 128)
[0000][PE] mean and std.dev: (46.87, 23.40)
[0000][PE] low and high boundaries for proper pairs: (1, 161)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.43, 39.95)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (35, 141, 817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2381)
[0000][PE] mean and std.dev: (221.27, 290.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3163)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (28, 47, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 145)
[0000][PE] mean and std.dev: (50.75, 29.63)
[0000][PE] low and high boundaries for proper pairs: (1, 184)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4168220 reads in 258.248 CPU sec, 7.194 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000009, nseq: 4163820
	[0000][ M::kt_pipeline] read 4163820 sequences (400000009 bp)...
[0000] Calling mem_process_seqs.., task: 98
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4163820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (197, 1876944, 16, 187)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 44, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 143)
[0000][PE] mean and std.dev: (49.88, 29.19)
[0000][PE] low and high boundaries for proper pairs: (1, 181)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 92, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.20, 39.79)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (36, 101, 183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 477)
[0000][PE] mean and std.dev: (83.62, 63.16)
[0000][PE] low and high boundaries for proper pairs: (1, 624)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (34, 45, 69)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 139)
[0000][PE] mean and std.dev: (50.16, 24.96)
[0000][PE] low and high boundaries for proper pairs: (1, 174)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4163820 reads in 247.434 CPU sec, 6.715 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000137, nseq: 4165328
	[0000][ M::kt_pipeline] read 4165328 sequences (400000137 bp)...
[0000] Calling mem_process_seqs.., task: 99
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4165328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (184, 1862350, 8, 198)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 42, 63)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 131)
[0000][PE] mean and std.dev: (47.16, 25.32)
[0000][PE] low and high boundaries for proper pairs: (1, 165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.23, 39.73)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (30, 45, 66)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 138)
[0000][PE] mean and std.dev: (49.39, 26.69)
[0000][PE] low and high boundaries for proper pairs: (1, 174)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4165328 reads in 256.125 CPU sec, 6.925 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000238, nseq: 4157260
	[0000][ M::kt_pipeline] read 4157260 sequences (400000238 bp)...
[0000] Calling mem_process_seqs.., task: 100
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4157260
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (179, 1860491, 12, 159)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 45, 68)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 146)
[0000][PE] mean and std.dev: (48.94, 26.39)
[0000][PE] low and high boundaries for proper pairs: (1, 185)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.25, 39.74)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (9, 154, 279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 819)
[0000][PE] mean and std.dev: (159.73, 189.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1089)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (30, 42, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 135)
[0000][PE] mean and std.dev: (47.45, 27.21)
[0000][PE] low and high boundaries for proper pairs: (1, 170)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4157260 reads in 256.253 CPU sec, 6.872 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000021, nseq: 4163888
	[0000][ M::kt_pipeline] read 4163888 sequences (400000021 bp)...
[0000] Calling mem_process_seqs.., task: 101
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4163888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (167, 1877189, 7, 183)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (32, 45, 68)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 140)
[0000][PE] mean and std.dev: (51.14, 27.37)
[0000][PE] low and high boundaries for proper pairs: (1, 176)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.22, 39.78)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (29, 47, 71)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 155)
[0000][PE] mean and std.dev: (52.23, 28.73)
[0000][PE] low and high boundaries for proper pairs: (1, 197)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4163888 reads in 250.965 CPU sec, 6.973 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000145, nseq: 4144530
	[0000][ M::kt_pipeline] read 4144530 sequences (400000145 bp)...
[0000] Calling mem_process_seqs.., task: 102
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4144530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (195, 1853144, 10, 166)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (32, 47, 68)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 140)
[0000][PE] mean and std.dev: (49.22, 24.08)
[0000][PE] low and high boundaries for proper pairs: (1, 176)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.44, 39.89)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 76, 122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 340)
[0000][PE] mean and std.dev: (74.22, 84.34)
[0000][PE] low and high boundaries for proper pairs: (1, 449)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (28, 48, 73)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 163)
[0000][PE] mean and std.dev: (53.24, 33.00)
[0000][PE] low and high boundaries for proper pairs: (1, 208)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4144530 reads in 267.554 CPU sec, 10.851 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000185, nseq: 4133926
	[0000][ M::kt_pipeline] read 4133926 sequences (400000185 bp)...
[0000] Calling mem_process_seqs.., task: 103
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4133926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (193, 1822356, 11, 189)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (31, 44, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 139)
[0000][PE] mean and std.dev: (50.38, 27.48)
[0000][PE] low and high boundaries for proper pairs: (1, 175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.52, 39.91)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (12, 16, 332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 972)
[0000][PE] mean and std.dev: (117.70, 211.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1292)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (31, 49, 72)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 154)
[0000][PE] mean and std.dev: (55.40, 32.92)
[0000][PE] low and high boundaries for proper pairs: (1, 195)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4133926 reads in 285.805 CPU sec, 7.847 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000092, nseq: 4237760
	[0000][ M::kt_pipeline] read 4237760 sequences (400000092 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 104
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4237760
[0000] read_chunk: 400000000, work_chunk_size: 400000104, nseq: 4156558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (179, 1598529, 9, 146)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 42, 63)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 135)
[0000][PE] mean and std.dev: (45.39, 25.07)
[0000][PE] low and high boundaries for proper pairs: (1, 171)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
	[0000][ M::kt_pipeline] read 4156558 sequences (400000104 bp)...
[0000][PE] mean and std.dev: (98.58, 39.88)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (28, 40, 61)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 127)
[0000][PE] mean and std.dev: (46.31, 26.48)
[0000][PE] low and high boundaries for proper pairs: (1, 160)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4237760 reads in 256.948 CPU sec, 7.021 real sec
[0000] Calling mem_process_seqs.., task: 105
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4156558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (189, 1868846, 18, 155)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 44, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 145)
[0000][PE] mean and std.dev: (49.94, 29.80)
[0000][PE] low and high boundaries for proper pairs: (1, 184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.44, 39.91)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (105, 1166, 1226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3468)
[0000][PE] mean and std.dev: (725.12, 564.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4589)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (32, 48, 71)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 149)
[0000][PE] mean and std.dev: (54.19, 29.84)
[0000][PE] low and high boundaries for proper pairs: (1, 188)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4156558 reads in 258.548 CPU sec, 7.325 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000013, nseq: 4182306
	[0000][ M::kt_pipeline] read 4182306 sequences (400000013 bp)...
[0000] Calling mem_process_seqs.., task: 106
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4182306
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (172, 1875260, 11, 187)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (26, 40, 66)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 146)
[0000][PE] mean and std.dev: (46.54, 27.21)
[0000][PE] low and high boundaries for proper pairs: (1, 186)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.24, 39.78)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (61, 88, 157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 349)
[0000][PE] mean and std.dev: (80.89, 53.70)
[0000][PE] low and high boundaries for proper pairs: (1, 445)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (29, 43, 71)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 155)
[0000][PE] mean and std.dev: (49.62, 28.10)
[0000][PE] low and high boundaries for proper pairs: (1, 197)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4182306 reads in 248.269 CPU sec, 7.298 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000125, nseq: 4153240
	[0000][ M::kt_pipeline] read 4153240 sequences (400000125 bp)...
[0000] Calling mem_process_seqs.., task: 107
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4153240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (192, 1854106, 7, 182)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 42, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 147)
[0000][PE] mean and std.dev: (48.25, 27.94)
[0000][PE] low and high boundaries for proper pairs: (1, 187)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.38, 39.94)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (30, 45, 66)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 138)
[0000][PE] mean and std.dev: (49.28, 25.04)
[0000][PE] low and high boundaries for proper pairs: (1, 174)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4153240 reads in 264.411 CPU sec, 7.261 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000076, nseq: 4135244
	[0000][ M::kt_pipeline] read 4135244 sequences (400000076 bp)...
[0000] Calling mem_process_seqs.., task: 108
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4135244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (166, 1809101, 16, 151)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (26, 39, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 140)
[0000][PE] mean and std.dev: (46.38, 28.30)
[0000][PE] low and high boundaries for proper pairs: (1, 178)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.40, 39.91)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 104, 194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 544)
[0000][PE] mean and std.dev: (89.20, 78.94)
[0000][PE] low and high boundaries for proper pairs: (1, 719)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (29, 43, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 137)
[0000][PE] mean and std.dev: (47.07, 25.38)
[0000][PE] low and high boundaries for proper pairs: (1, 173)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4135244 reads in 283.379 CPU sec, 7.970 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000007, nseq: 4146192
	[0000][ M::kt_pipeline] read 4146192 sequences (400000007 bp)...
[0000] Calling mem_process_seqs.., task: 109
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4146192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (166, 1848593, 8, 177)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (30, 44, 68)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 144)
[0000][PE] mean and std.dev: (47.86, 26.84)
[0000][PE] low and high boundaries for proper pairs: (1, 182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.41, 39.92)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (35, 51, 77)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 161)
[0000][PE] mean and std.dev: (55.35, 27.66)
[0000][PE] low and high boundaries for proper pairs: (1, 203)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4146192 reads in 270.935 CPU sec, 7.537 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000084, nseq: 4165908
	[0000][ M::kt_pipeline] read 4165908 sequences (400000084 bp)...
[0000] Calling mem_process_seqs.., task: 110
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4165908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (197, 1879528, 11, 169)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (31, 44, 62)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 124)
[0000][PE] mean and std.dev: (47.45, 23.99)
[0000][PE] low and high boundaries for proper pairs: (1, 155)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.26, 39.74)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (57, 144, 304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 798)
[0000][PE] mean and std.dev: (140.20, 100.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (30, 46, 69)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 147)
[0000][PE] mean and std.dev: (49.21, 26.16)
[0000][PE] low and high boundaries for proper pairs: (1, 186)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4165908 reads in 248.060 CPU sec, 6.882 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000041, nseq: 4159070
	[0000][ M::kt_pipeline] read 4159070 sequences (400000041 bp)...
[0000] Calling mem_process_seqs.., task: 111
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4159070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (195, 1860835, 12, 180)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (26, 42, 58)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 122)
[0000][PE] mean and std.dev: (44.00, 24.04)
[0000][PE] low and high boundaries for proper pairs: (1, 154)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.24, 39.73)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (86, 106, 167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 329)
[0000][PE] mean and std.dev: (123.58, 83.32)
[0000][PE] low and high boundaries for proper pairs: (1, 457)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (31, 44, 66)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 136)
[0000][PE] mean and std.dev: (48.15, 23.76)
[0000][PE] low and high boundaries for proper pairs: (1, 171)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4159070 reads in 255.081 CPU sec, 6.854 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000220, nseq: 4158906
	[0000][ M::kt_pipeline] read 4158906 sequences (400000220 bp)...
[0000] Calling mem_process_seqs.., task: 112
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4158906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (176, 1864521, 17, 189)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (30, 45, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 141)
[0000][PE] mean and std.dev: (49.27, 27.37)
[0000][PE] low and high boundaries for proper pairs: (1, 178)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.26, 39.77)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (10, 74, 210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 610)
[0000][PE] mean and std.dev: (89.53, 86.06)
[0000][PE] low and high boundaries for proper pairs: (1, 810)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (34, 48, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 127)
[0000][PE] mean and std.dev: (49.54, 25.14)
[0000][PE] low and high boundaries for proper pairs: (1, 158)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4158906 reads in 256.654 CPU sec, 7.117 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000219, nseq: 4155020
	[0000][ M::kt_pipeline] read 4155020 sequences (400000219 bp)...
[0000] Calling mem_process_seqs.., task: 113
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4155020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (206, 1862100, 10, 190)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (25, 41, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 151)
[0000][PE] mean and std.dev: (46.41, 27.13)
[0000][PE] low and high boundaries for proper pairs: (1, 193)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.28, 39.72)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 59, 260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 752)
[0000][PE] mean and std.dev: (95.44, 104.19)
[0000][PE] low and high boundaries for proper pairs: (1, 998)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (27, 40, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 138)
[0000][PE] mean and std.dev: (46.12, 25.42)
[0000][PE] low and high boundaries for proper pairs: (1, 175)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4155020 reads in 254.910 CPU sec, 6.966 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000144, nseq: 4161546
	[0000][ M::kt_pipeline] read 4161546 sequences (400000144 bp)...
[0000] Calling mem_process_seqs.., task: 114
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4161546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (196, 1868975, 16, 174)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (32, 46, 69)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 143)
[0000][PE] mean and std.dev: (50.55, 26.73)
[0000][PE] low and high boundaries for proper pairs: (1, 180)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.39, 39.90)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (66, 162, 256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 636)
[0000][PE] mean and std.dev: (152.20, 110.18)
[0000][PE] low and high boundaries for proper pairs: (1, 826)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (32, 47, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 128)
[0000][PE] mean and std.dev: (48.63, 24.95)
[0000][PE] low and high boundaries for proper pairs: (1, 160)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4161546 reads in 254.879 CPU sec, 6.903 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000194, nseq: 4163446
	[0000][ M::kt_pipeline] read 4163446 sequences (400000194 bp)...
[0000] Calling mem_process_seqs.., task: 115
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4163446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (183, 1878204, 13, 183)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (26, 39, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 140)
[0000][PE] mean and std.dev: (44.36, 27.82)
[0000][PE] low and high boundaries for proper pairs: (1, 178)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.23, 39.75)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 41, 129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 355)
[0000][PE] mean and std.dev: (51.55, 46.94)
[0000][PE] low and high boundaries for proper pairs: (1, 468)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (32, 49, 72)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 152)
[0000][PE] mean and std.dev: (53.39, 27.74)
[0000][PE] low and high boundaries for proper pairs: (1, 192)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4163446 reads in 248.893 CPU sec, 6.873 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000125, nseq: 4161506
	[0000][ M::kt_pipeline] read 4161506 sequences (400000125 bp)...
[0000] Calling mem_process_seqs.., task: 116
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4161506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (189, 1878903, 11, 161)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 45, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 136)
[0000][PE] mean and std.dev: (47.38, 24.79)
[0000][PE] low and high boundaries for proper pairs: (1, 172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.44, 39.95)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (35, 101, 206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 548)
[0000][PE] mean and std.dev: (107.30, 88.79)
[0000][PE] low and high boundaries for proper pairs: (1, 719)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (28, 40, 61)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 127)
[0000][PE] mean and std.dev: (46.22, 25.94)
[0000][PE] low and high boundaries for proper pairs: (1, 160)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4161506 reads in 248.198 CPU sec, 6.685 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000099, nseq: 4159808
	[0000][ M::kt_pipeline] read 4159808 sequences (400000099 bp)...
[0000] Calling mem_process_seqs.., task: 117
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4159808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (187, 1877341, 9, 175)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (31, 47, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 130)
[0000][PE] mean and std.dev: (48.17, 24.57)
[0000][PE] low and high boundaries for proper pairs: (1, 163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.46, 39.89)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (31, 45, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 130)
[0000][PE] mean and std.dev: (48.75, 25.34)
[0000][PE] low and high boundaries for proper pairs: (1, 163)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4159808 reads in 246.776 CPU sec, 6.744 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000053, nseq: 4165662
	[0000][ M::kt_pipeline] read 4165662 sequences (400000053 bp)...
[0000] Calling mem_process_seqs.., task: 118
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4165662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (149, 1703568, 15, 152)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (31, 46, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 139)
[0000][PE] mean and std.dev: (48.44, 26.19)
[0000][PE] low and high boundaries for proper pairs: (1, 175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.52, 39.86)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (5, 24, 58)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 164)
[0000][PE] mean and std.dev: (23.21, 22.99)
[0000][PE] low and high boundaries for proper pairs: (1, 217)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (30, 45, 69)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 147)
[0000][PE] mean and std.dev: (48.75, 26.55)
[0000][PE] low and high boundaries for proper pairs: (1, 186)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4165662 reads in 261.164 CPU sec, 7.052 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000095, nseq: 4160976
	[0000][ M::kt_pipeline] read 4160976 sequences (400000095 bp)...
[0000] Calling mem_process_seqs.., task: 119
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4160976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (171, 1855667, 9, 186)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 42, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 141)
[0000][PE] mean and std.dev: (47.27, 26.65)
[0000][PE] low and high boundaries for proper pairs: (1, 179)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (98.47, 39.91)
[0000][PE] low and high boundaries for proper pairs: (1, 299)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (31, 43, 62)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 124)
[0000][PE] mean and std.dev: (46.29, 21.70)
[0000][PE] low and high boundaries for proper pairs: (1, 155)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4160976 reads in 257.505 CPU sec, 7.014 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000209, nseq: 4170078
	[0000][ M::kt_pipeline] read 4170078 sequences (400000209 bp)...
[0000] Calling mem_process_seqs.., task: 120
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4170078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (192, 1883970, 21, 183)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 38, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 138)
[0000][PE] mean and std.dev: (45.64, 25.95)
[0000][PE] low and high boundaries for proper pairs: (1, 175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.29, 39.74)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 258, 357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1045)
[0000][PE] mean and std.dev: (184.05, 167.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1389)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (29, 48, 69)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 149)
[0000][PE] mean and std.dev: (51.65, 29.05)
[0000][PE] low and high boundaries for proper pairs: (1, 189)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 190888580, nseq: 1983998
	[0000][ M::kt_pipeline] read 1983998 sequences (190888580 bp)...
	[0000][ M::mem_process_seqs] Processed 4170078 reads in 247.953 CPU sec, 6.904 real sec
[0000] Calling mem_process_seqs.., task: 121
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 1983998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (95, 884743, 10, 88)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 41, 54)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 104)
[0000][PE] mean and std.dev: (42.47, 20.59)
[0000][PE] low and high boundaries for proper pairs: (1, 129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (67, 93, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (98.24, 39.69)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (137, 446, 846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2264)
[0000][PE] mean and std.dev: (472.60, 422.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2973)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (27, 48, 76)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 174)
[0000][PE] mean and std.dev: (54.64, 33.34)
[0000][PE] low and high boundaries for proper pairs: (1, 223)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1983998 reads in 124.931 CPU sec, 3.634 real sec
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 40
Processor is running @2394.713638 MHz
Runtime profile:

	Time taken for main_mem function: 1569.88 sec

	IO times (sec) :
	Reading IO time (reads) avg: 1429.81, (1429.81, 1429.81)
	Writing IO time (SAM) avg: 304.71, (304.71, 304.71)
	Reading IO time (Reference Genome) avg: 1.00, (1.00, 1.00)
	Index read time avg: 0.25, (0.25, 0.25)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 1568.58
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 903.70, (903.70, 903.70)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 278.52, (278.52, 278.52)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 577.60, (577.60, 577.60)
		MEM_ALN_CHAIN_FLT avg: 0.00, (0.00, 0.00)
		MEM_ALN_CHAIN_SEED avg: 0.00, (0.00, 0.00)
		ERT_SEED_CHAIN avg: 0.00, (0.00, 0.00)
	LEARNED_SEED_CHAIN avg: 278.48, (278.84, 277.33)
		SMEM compute avg: 0.00, (0.00, 0.00)
		SAL compute avg: 0.00, (0.00, 0.00)
				MEM_SA avg: 0.00, (0.00, 0.00)

		BSW time, avg: 278.38, (278.77, 277.89)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
