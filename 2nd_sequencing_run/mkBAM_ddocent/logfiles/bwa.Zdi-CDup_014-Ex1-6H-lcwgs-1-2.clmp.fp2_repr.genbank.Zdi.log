Looking to launch executable "/opt/conda/bin/bwa-meme_mode3.avx512bw", simd = _mode3.avx512bw
Launching executable "/opt/conda/bin/bwa-meme_mode3.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: reference.genbank.Zdi.fasta
* Entering FMI_search
Reading other elements of the index from files reference.genbank.Zdi.fasta
* Index prefix: reference.genbank.Zdi.fasta
* Read 0 ALT contigs
* Reading reference genome..
* Binary seq file = reference.genbank.Zdi.fasta.0123
* Reference genome size: 1379380954 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 5679.4903 MB
2. Memory pre-allocation for BSW: 9584.6810 MB
[M::memoryAllocLearned::MEME] Reading Learned-index models into memory
[Learned-Config] MODE:3 SEARCH_METHOD: 1 MEM_TRADEOFF:1 EXPONENTIAL_SMEMSEARCH: 1 DEBUG_MODE:0 Num 2nd Models:268435456 PWL Bits Used:28
[M::memoryAllocLearned::MEME] Loading RMI model and Pac reference file took 10.536 sec
[M::memoryAllocLearned::MEME] Reading suffix array into memory
[M::memoryAllocLearned::MEME] Loading pos_packed file took 15.559 sec
[M::memoryAllocLearned::MEME] Generating SA, 64-bit Suffix and ISA in memory
[M::memoryAllocLearned::MEME] Runtime-build-index took 13.201 sec
3. Memory pre-allocation for BWT: 7540.2955 MB
------------------------------------------
* Threads used (compute): 40
* No. of pipeline threads: 2

[0000] read_chunk: 400000000, work_chunk_size: 400000160, nseq: 3742572
	[0000][ M::kt_pipeline] read 3742572 sequences (400000160 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3742572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (66, 1359968, 50, 68)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (84, 123, 215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 477)
[0000][PE] mean and std.dev: (144.41, 105.17)
[0000][PE] low and high boundaries for proper pairs: (1, 608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (74, 109, 155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 317)
[0000][PE] mean and std.dev: (118.80, 58.75)
[0000][PE] low and high boundaries for proper pairs: (1, 398)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (149, 438, 1859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5279)
[0000][PE] mean and std.dev: (824.30, 1019.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6989)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (44, 92, 128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 296)
[0000][PE] mean and std.dev: (86.03, 51.89)
[0000][PE] low and high boundaries for proper pairs: (1, 380)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000039, nseq: 3741810
	[0000][ M::kt_pipeline] read 3741810 sequences (400000039 bp)...
	[0000][ M::mem_process_seqs] Processed 3742572 reads in 631.929 CPU sec, 16.583 real sec
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3741810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (69, 1356931, 48, 63)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (69, 133, 241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 585)
[0000][PE] mean and std.dev: (124.53, 101.39)
[0000][PE] low and high boundaries for proper pairs: (1, 757)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (74, 109, 155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 317)
[0000][PE] mean and std.dev: (118.86, 58.78)
[0000][PE] low and high boundaries for proper pairs: (1, 398)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (43, 153, 538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1528)
[0000][PE] mean and std.dev: (245.26, 320.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2023)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (83, 110, 178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 368)
[0000][PE] mean and std.dev: (123.65, 74.69)
[0000][PE] low and high boundaries for proper pairs: (1, 463)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000232, nseq: 3733852
	[0000][ M::mem_process_seqs] Processed 3741810 reads in 647.988 CPU sec, 17.039 real sec
	[0000][ M::kt_pipeline] read 3733852 sequences (400000232 bp)...
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3733852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (65, 1346708, 48, 67)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (52, 94, 149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 343)
[0000][PE] mean and std.dev: (90.02, 50.49)
[0000][PE] low and high boundaries for proper pairs: (1, 440)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (74, 109, 155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 317)
[0000][PE] mean and std.dev: (118.88, 58.72)
[0000][PE] low and high boundaries for proper pairs: (1, 398)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (86, 569, 1168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3332)
[0000][PE] mean and std.dev: (690.89, 789.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4414)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (76, 97, 193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 427)
[0000][PE] mean and std.dev: (113.05, 86.02)
[0000][PE] low and high boundaries for proper pairs: (1, 544)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 235592284, nseq: 2201446
	[0000][ M::kt_pipeline] read 2201446 sequences (235592284 bp)...
	[0000][ M::mem_process_seqs] Processed 3733852 reads in 648.123 CPU sec, 17.383 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 2201446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 791718, 26, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (111, 156, 219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 435)
[0000][PE] mean and std.dev: (148.68, 90.84)
[0000][PE] low and high boundaries for proper pairs: (1, 543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (74, 109, 155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 317)
[0000][PE] mean and std.dev: (118.76, 58.69)
[0000][PE] low and high boundaries for proper pairs: (1, 398)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (41, 217, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1133)
[0000][PE] mean and std.dev: (194.86, 243.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1497)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (78, 93, 225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 519)
[0000][PE] mean and std.dev: (102.15, 57.30)
[0000][PE] low and high boundaries for proper pairs: (1, 666)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2201446 reads in 388.097 CPU sec, 10.432 real sec
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 40
Processor is running @2394.721882 MHz
Runtime profile:

	Time taken for main_mem function: 109.04 sec

	IO times (sec) :
	Reading IO time (reads) avg: 38.86, (38.86, 38.86)
	Writing IO time (SAM) avg: 16.09, (16.09, 16.09)
	Reading IO time (Reference Genome) avg: 1.01, (1.01, 1.01)
	Index read time avg: 0.24, (0.24, 0.24)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 107.75
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 61.43, (61.43, 61.43)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 27.06, (27.06, 27.06)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 33.14, (33.14, 33.14)
		MEM_ALN_CHAIN_FLT avg: 0.00, (0.00, 0.00)
		MEM_ALN_CHAIN_SEED avg: 0.00, (0.00, 0.00)
		ERT_SEED_CHAIN avg: 0.00, (0.00, 0.00)
	LEARNED_SEED_CHAIN avg: 16.69, (16.74, 16.65)
		SMEM compute avg: 0.00, (0.00, 0.00)
		SAL compute avg: 0.00, (0.00, 0.00)
				MEM_SA avg: 0.00, (0.00, 0.00)

		BSW time, avg: 15.64, (15.78, 15.52)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
