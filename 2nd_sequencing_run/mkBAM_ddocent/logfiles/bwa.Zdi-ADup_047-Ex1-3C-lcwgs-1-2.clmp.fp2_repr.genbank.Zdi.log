Looking to launch executable "/opt/conda/bin/bwa-meme_mode3.avx512bw", simd = _mode3.avx512bw
Launching executable "/opt/conda/bin/bwa-meme_mode3.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: reference.genbank.Zdi.fasta
* Entering FMI_search
Reading other elements of the index from files reference.genbank.Zdi.fasta
* Index prefix: reference.genbank.Zdi.fasta
* Read 0 ALT contigs
* Reading reference genome..
* Binary seq file = reference.genbank.Zdi.fasta.0123
* Reference genome size: 1379380954 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 5679.4903 MB
2. Memory pre-allocation for BSW: 9584.6810 MB
[M::memoryAllocLearned::MEME] Reading Learned-index models into memory
[Learned-Config] MODE:3 SEARCH_METHOD: 1 MEM_TRADEOFF:1 EXPONENTIAL_SMEMSEARCH: 1 DEBUG_MODE:0 Num 2nd Models:268435456 PWL Bits Used:28
[M::memoryAllocLearned::MEME] Loading RMI model and Pac reference file took 10.623 sec
[M::memoryAllocLearned::MEME] Reading suffix array into memory
[M::memoryAllocLearned::MEME] Loading pos_packed file took 15.946 sec
[M::memoryAllocLearned::MEME] Generating SA, 64-bit Suffix and ISA in memory
[M::memoryAllocLearned::MEME] Runtime-build-index took 13.129 sec
3. Memory pre-allocation for BWT: 7540.2955 MB
------------------------------------------
* Threads used (compute): 40
* No. of pipeline threads: 2

[0000] read_chunk: 400000000, work_chunk_size: 400000039, nseq: 4990160
	[0000][ M::kt_pipeline] read 4990160 sequences (400000039 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 400000154, nseq: 4988318
	[0000][ M::kt_pipeline] read 4988318 sequences (400000154 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4990160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (1540, 2029757, 9, 1571)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (26, 36, 54)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 110)
[0000][PE] mean and std.dev: (41.57, 21.24)
[0000][PE] low and high boundaries for proper pairs: (1, 138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (56, 72, 92)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 164)
[0000][PE] mean and std.dev: (75.67, 26.06)
[0000][PE] low and high boundaries for proper pairs: (1, 200)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (27, 38, 56)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 114)
[0000][PE] mean and std.dev: (42.70, 21.28)
[0000][PE] low and high boundaries for proper pairs: (1, 143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4990160 reads in 337.570 CPU sec, 9.168 real sec
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4988318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (1587, 2021438, 13, 1610)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 36, 54)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 108)
[0000][PE] mean and std.dev: (41.25, 20.20)
[0000][PE] low and high boundaries for proper pairs: (1, 135)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (56, 72, 92)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 164)
[0000][PE] mean and std.dev: (75.62, 26.01)
[0000][PE] low and high boundaries for proper pairs: (1, 200)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (74, 171, 450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1202)
[0000][PE] mean and std.dev: (241.67, 313.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1578)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (27, 38, 56)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 114)
[0000][PE] mean and std.dev: (43.25, 21.68)
[0000][PE] low and high boundaries for proper pairs: (1, 143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4988318 reads in 345.551 CPU sec, 9.517 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000073, nseq: 5023940
	[0000][ M::kt_pipeline] read 5023940 sequences (400000073 bp)...
[0000] Reallocating initial memory allocations!!
[0000] read_chunk: 400000000, work_chunk_size: 164638118, nseq: 2069376
	[0000][ M::kt_pipeline] read 2069376 sequences (164638118 bp)...
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 5023940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (1617, 2027142, 11, 1485)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (26, 36, 54)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 110)
[0000][PE] mean and std.dev: (41.63, 21.29)
[0000][PE] low and high boundaries for proper pairs: (1, 138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (56, 72, 92)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 164)
[0000][PE] mean and std.dev: (75.59, 26.03)
[0000][PE] low and high boundaries for proper pairs: (1, 200)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (10, 11, 30)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 70)
[0000][PE] mean and std.dev: (11.33, 7.38)
[0000][PE] low and high boundaries for proper pairs: (1, 90)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (27, 38, 57)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 117)
[0000][PE] mean and std.dev: (43.24, 21.65)
[0000][PE] low and high boundaries for proper pairs: (1, 147)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 5023940 reads in 322.767 CPU sec, 8.829 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 2069376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (593, 851563, 5, 634)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 36, 55)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 111)
[0000][PE] mean and std.dev: (41.90, 20.39)
[0000][PE] low and high boundaries for proper pairs: (1, 139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (56, 72, 92)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 164)
[0000][PE] mean and std.dev: (75.61, 26.01)
[0000][PE] low and high boundaries for proper pairs: (1, 200)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (26, 37, 53)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 107)
[0000][PE] mean and std.dev: (41.39, 20.39)
[0000][PE] low and high boundaries for proper pairs: (1, 134)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2069376 reads in 130.678 CPU sec, 3.806 real sec
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 40
Processor is running @2394.740484 MHz
Runtime profile:

	Time taken for main_mem function: 103.48 sec

	IO times (sec) :
	Reading IO time (reads) avg: 38.00, (38.00, 38.00)
	Writing IO time (SAM) avg: 14.05, (14.05, 14.05)
	Reading IO time (Reference Genome) avg: 0.98, (0.98, 0.98)
	Index read time avg: 0.25, (0.25, 0.25)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 102.22
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 31.32, (31.32, 31.32)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 9.26, (9.26, 9.26)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 20.49, (20.49, 20.49)
		MEM_ALN_CHAIN_FLT avg: 0.00, (0.00, 0.00)
		MEM_ALN_CHAIN_SEED avg: 0.00, (0.00, 0.00)
		ERT_SEED_CHAIN avg: 0.00, (0.00, 0.00)
	LEARNED_SEED_CHAIN avg: 10.19, (10.24, 10.17)
		SMEM compute avg: 0.00, (0.00, 0.00)
		SAL compute avg: 0.00, (0.00, 0.00)
				MEM_SA avg: 0.00, (0.00, 0.00)

		BSW time, avg: 9.67, (9.74, 9.60)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
