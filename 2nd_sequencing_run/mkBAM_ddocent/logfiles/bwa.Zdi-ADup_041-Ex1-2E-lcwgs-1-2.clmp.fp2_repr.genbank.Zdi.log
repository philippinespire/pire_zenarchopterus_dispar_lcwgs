Looking to launch executable "/opt/conda/bin/bwa-meme_mode3.avx512bw", simd = _mode3.avx512bw
Launching executable "/opt/conda/bin/bwa-meme_mode3.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: reference.genbank.Zdi.fasta
* Entering FMI_search
Reading other elements of the index from files reference.genbank.Zdi.fasta
* Index prefix: reference.genbank.Zdi.fasta
* Read 0 ALT contigs
* Reading reference genome..
* Binary seq file = reference.genbank.Zdi.fasta.0123
* Reference genome size: 1379380954 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 5679.4903 MB
2. Memory pre-allocation for BSW: 9584.6810 MB
[M::memoryAllocLearned::MEME] Reading Learned-index models into memory
[Learned-Config] MODE:3 SEARCH_METHOD: 1 MEM_TRADEOFF:1 EXPONENTIAL_SMEMSEARCH: 1 DEBUG_MODE:0 Num 2nd Models:268435456 PWL Bits Used:28
[M::memoryAllocLearned::MEME] Loading RMI model and Pac reference file took 10.817 sec
[M::memoryAllocLearned::MEME] Reading suffix array into memory
[M::memoryAllocLearned::MEME] Loading pos_packed file took 16.192 sec
[M::memoryAllocLearned::MEME] Generating SA, 64-bit Suffix and ISA in memory
[M::memoryAllocLearned::MEME] Runtime-build-index took 13.238 sec
3. Memory pre-allocation for BWT: 7540.2955 MB
------------------------------------------
* Threads used (compute): 40
* No. of pipeline threads: 2

[0000] read_chunk: 400000000, work_chunk_size: 400000074, nseq: 4945186
	[0000][ M::kt_pipeline] read 4945186 sequences (400000074 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 400000140, nseq: 4928180
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4945186
	[0000][ M::kt_pipeline] read 4928180 sequences (400000140 bp)...
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (425, 2229096, 7, 465)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (26, 37, 55)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 113)
[0000][PE] mean and std.dev: (41.48, 20.41)
[0000][PE] low and high boundaries for proper pairs: (1, 142)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (59, 75, 96)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 170)
[0000][PE] mean and std.dev: (78.87, 26.88)
[0000][PE] low and high boundaries for proper pairs: (1, 207)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (27, 38, 57)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 117)
[0000][PE] mean and std.dev: (43.45, 21.97)
[0000][PE] low and high boundaries for proper pairs: (1, 147)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4945186 reads in 251.671 CPU sec, 7.056 real sec
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4928180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (453, 2203676, 7, 429)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (26, 36, 53)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 107)
[0000][PE] mean and std.dev: (41.06, 20.35)
[0000][PE] low and high boundaries for proper pairs: (1, 134)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (59, 75, 96)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 170)
[0000][PE] mean and std.dev: (78.89, 26.90)
[0000][PE] low and high boundaries for proper pairs: (1, 207)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (28, 38, 56)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 112)
[0000][PE] mean and std.dev: (42.84, 21.40)
[0000][PE] low and high boundaries for proper pairs: (1, 140)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4928180 reads in 263.773 CPU sec, 7.460 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000043, nseq: 4953136
	[0000][ M::kt_pipeline] read 4953136 sequences (400000043 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4953136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (423, 2240954, 7, 431)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 38, 53)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 105)
[0000][PE] mean and std.dev: (41.62, 19.86)
[0000][PE] low and high boundaries for proper pairs: (1, 131)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (59, 75, 96)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 170)
[0000][PE] mean and std.dev: (78.83, 26.86)
[0000][PE] low and high boundaries for proper pairs: (1, 207)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (26, 37, 57)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 119)
[0000][PE] mean and std.dev: (42.90, 23.05)
[0000][PE] low and high boundaries for proper pairs: (1, 150)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4953136 reads in 250.220 CPU sec, 6.835 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000064, nseq: 4915976
	[0000][ M::kt_pipeline] read 4915976 sequences (400000064 bp)...
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4915976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (445, 2186330, 3, 424)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (26, 36, 55)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 113)
[0000][PE] mean and std.dev: (41.55, 21.25)
[0000][PE] low and high boundaries for proper pairs: (1, 142)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (59, 75, 96)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 170)
[0000][PE] mean and std.dev: (78.92, 26.90)
[0000][PE] low and high boundaries for proper pairs: (1, 207)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (26, 38, 60)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 128)
[0000][PE] mean and std.dev: (43.70, 23.25)
[0000][PE] low and high boundaries for proper pairs: (1, 162)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4915976 reads in 272.191 CPU sec, 7.496 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000237, nseq: 4945150
	[0000][ M::kt_pipeline] read 4945150 sequences (400000237 bp)...
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4945150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (434, 2219902, 10, 464)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 37, 55)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 111)
[0000][PE] mean and std.dev: (41.48, 20.81)
[0000][PE] low and high boundaries for proper pairs: (1, 139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (59, 75, 96)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 170)
[0000][PE] mean and std.dev: (78.87, 26.89)
[0000][PE] low and high boundaries for proper pairs: (1, 207)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (10, 30, 63)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 169)
[0000][PE] mean and std.dev: (23.62, 19.82)
[0000][PE] low and high boundaries for proper pairs: (1, 222)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (27, 37, 55)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 111)
[0000][PE] mean and std.dev: (41.84, 19.97)
[0000][PE] low and high boundaries for proper pairs: (1, 139)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4945150 reads in 254.974 CPU sec, 6.968 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000075, nseq: 4948832
	[0000][ M::kt_pipeline] read 4948832 sequences (400000075 bp)...
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4948832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (467, 2230977, 3, 455)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 36, 55)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 111)
[0000][PE] mean and std.dev: (41.15, 20.20)
[0000][PE] low and high boundaries for proper pairs: (1, 139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (59, 75, 96)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 170)
[0000][PE] mean and std.dev: (78.88, 26.88)
[0000][PE] low and high boundaries for proper pairs: (1, 207)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (27, 37, 57)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 117)
[0000][PE] mean and std.dev: (42.90, 22.30)
[0000][PE] low and high boundaries for proper pairs: (1, 147)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4948832 reads in 252.295 CPU sec, 6.976 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000119, nseq: 4950648
	[0000][ M::kt_pipeline] read 4950648 sequences (400000119 bp)...
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4950648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (480, 2236333, 1, 448)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (26, 36, 53)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 107)
[0000][PE] mean and std.dev: (40.70, 20.21)
[0000][PE] low and high boundaries for proper pairs: (1, 134)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (59, 75, 96)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 170)
[0000][PE] mean and std.dev: (78.90, 26.88)
[0000][PE] low and high boundaries for proper pairs: (1, 207)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (28, 38, 56)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 112)
[0000][PE] mean and std.dev: (42.34, 21.47)
[0000][PE] low and high boundaries for proper pairs: (1, 140)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4950648 reads in 250.463 CPU sec, 6.930 real sec
[0000] read_chunk: 400000000, work_chunk_size: 327690596, nseq: 4059660
	[0000][ M::kt_pipeline] read 4059660 sequences (327690596 bp)...
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4059660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (382, 1837424, 6, 387)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (26, 37, 54)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 110)
[0000][PE] mean and std.dev: (40.74, 19.63)
[0000][PE] low and high boundaries for proper pairs: (1, 138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (59, 75, 96)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 170)
[0000][PE] mean and std.dev: (78.87, 26.86)
[0000][PE] low and high boundaries for proper pairs: (1, 207)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (28, 39, 56)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 112)
[0000][PE] mean and std.dev: (42.62, 20.58)
[0000][PE] low and high boundaries for proper pairs: (1, 140)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4059660 reads in 199.679 CPU sec, 5.675 real sec
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 40
Processor is running @2394.713554 MHz
Runtime profile:

	Time taken for main_mem function: 150.16 sec

	IO times (sec) :
	Reading IO time (reads) avg: 95.06, (95.06, 95.06)
	Writing IO time (SAM) avg: 20.28, (20.28, 20.28)
	Reading IO time (Reference Genome) avg: 1.05, (1.05, 1.05)
	Index read time avg: 0.27, (0.27, 0.27)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 148.79
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 55.39, (55.39, 55.39)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 14.43, (14.43, 14.43)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 37.41, (37.41, 37.41)
		MEM_ALN_CHAIN_FLT avg: 0.00, (0.00, 0.00)
		MEM_ALN_CHAIN_SEED avg: 0.00, (0.00, 0.00)
		ERT_SEED_CHAIN avg: 0.00, (0.00, 0.00)
	LEARNED_SEED_CHAIN avg: 20.30, (20.36, 20.26)
		SMEM compute avg: 0.00, (0.00, 0.00)
		SAL compute avg: 0.00, (0.00, 0.00)
				MEM_SA avg: 0.00, (0.00, 0.00)

		BSW time, avg: 15.97, (16.09, 15.87)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
