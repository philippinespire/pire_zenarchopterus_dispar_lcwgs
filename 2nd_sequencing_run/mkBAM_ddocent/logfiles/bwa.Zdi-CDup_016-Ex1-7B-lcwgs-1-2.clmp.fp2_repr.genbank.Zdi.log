Looking to launch executable "/opt/conda/bin/bwa-meme_mode3.avx512bw", simd = _mode3.avx512bw
Launching executable "/opt/conda/bin/bwa-meme_mode3.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: reference.genbank.Zdi.fasta
* Entering FMI_search
Reading other elements of the index from files reference.genbank.Zdi.fasta
* Index prefix: reference.genbank.Zdi.fasta
* Read 0 ALT contigs
* Reading reference genome..
* Binary seq file = reference.genbank.Zdi.fasta.0123
* Reference genome size: 1379380954 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 5679.4903 MB
2. Memory pre-allocation for BSW: 9584.6810 MB
[M::memoryAllocLearned::MEME] Reading Learned-index models into memory
[Learned-Config] MODE:3 SEARCH_METHOD: 1 MEM_TRADEOFF:1 EXPONENTIAL_SMEMSEARCH: 1 DEBUG_MODE:0 Num 2nd Models:268435456 PWL Bits Used:28
[M::memoryAllocLearned::MEME] Loading RMI model and Pac reference file took 10.773 sec
[M::memoryAllocLearned::MEME] Reading suffix array into memory
[M::memoryAllocLearned::MEME] Loading pos_packed file took 13.994 sec
[M::memoryAllocLearned::MEME] Generating SA, 64-bit Suffix and ISA in memory
[M::memoryAllocLearned::MEME] Runtime-build-index took 11.287 sec
3. Memory pre-allocation for BWT: 7540.2955 MB
------------------------------------------
* Threads used (compute): 40
* No. of pipeline threads: 2

[0000] read_chunk: 400000000, work_chunk_size: 400000145, nseq: 3535058
	[0000][ M::kt_pipeline] read 3535058 sequences (400000145 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 400000026, nseq: 3529530
	[0000][ M::kt_pipeline] read 3529530 sequences (400000026 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3535058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (59, 1421222, 56, 54)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (75, 116, 193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 429)
[0000][PE] mean and std.dev: (117.13, 67.25)
[0000][PE] low and high boundaries for proper pairs: (1, 547)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (83, 119, 163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 323)
[0000][PE] mean and std.dev: (127.11, 58.91)
[0000][PE] low and high boundaries for proper pairs: (1, 403)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (89, 185, 1027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2903)
[0000][PE] mean and std.dev: (457.22, 646.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3841)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (73, 112, 191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 427)
[0000][PE] mean and std.dev: (132.26, 100.36)
[0000][PE] low and high boundaries for proper pairs: (1, 545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3535058 reads in 645.866 CPU sec, 16.754 real sec
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3529530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (67, 1415789, 69, 59)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (69, 112, 259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 639)
[0000][PE] mean and std.dev: (162.00, 157.14)
[0000][PE] low and high boundaries for proper pairs: (1, 829)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (83, 119, 163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 323)
[0000][PE] mean and std.dev: (127.14, 58.88)
[0000][PE] low and high boundaries for proper pairs: (1, 403)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (43, 129, 375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1039)
[0000][PE] mean and std.dev: (163.10, 211.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1371)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (79, 106, 249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 589)
[0000][PE] mean and std.dev: (127.35, 96.11)
[0000][PE] low and high boundaries for proper pairs: (1, 759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000236, nseq: 3525574
	[0000][ M::kt_pipeline] read 3525574 sequences (400000236 bp)...
	[0000][ M::mem_process_seqs] Processed 3529530 reads in 665.364 CPU sec, 17.627 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3525574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (68, 1403625, 63, 98)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (74, 111, 356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 920)
[0000][PE] mean and std.dev: (178.63, 176.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (83, 119, 163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 323)
[0000][PE] mean and std.dev: (127.12, 58.81)
[0000][PE] low and high boundaries for proper pairs: (1, 403)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (79, 260, 941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2665)
[0000][PE] mean and std.dev: (391.07, 453.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3527)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (70, 132, 232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 556)
[0000][PE] mean and std.dev: (152.45, 136.83)
[0000][PE] low and high boundaries for proper pairs: (1, 718)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000263, nseq: 3530972
	[0000][ M::kt_pipeline] read 3530972 sequences (400000263 bp)...
	[0000][ M::mem_process_seqs] Processed 3525574 reads in 681.416 CPU sec, 17.943 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3530972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (60, 1417438, 66, 64)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (56, 101, 303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 797)
[0000][PE] mean and std.dev: (132.71, 144.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1044)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (83, 119, 163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 323)
[0000][PE] mean and std.dev: (127.17, 58.88)
[0000][PE] low and high boundaries for proper pairs: (1, 403)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (52, 305, 935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2701)
[0000][PE] mean and std.dev: (494.95, 598.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3584)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (77, 112, 357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 917)
[0000][PE] mean and std.dev: (161.09, 159.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1197)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3530972 reads in 670.382 CPU sec, 17.835 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000002, nseq: 3531506
	[0000][ M::kt_pipeline] read 3531506 sequences (400000002 bp)...
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3531506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (62, 1417825, 75, 65)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (62, 113, 229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 563)
[0000][PE] mean and std.dev: (128.31, 103.07)
[0000][PE] low and high boundaries for proper pairs: (1, 730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (83, 119, 163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 323)
[0000][PE] mean and std.dev: (127.06, 58.86)
[0000][PE] low and high boundaries for proper pairs: (1, 403)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (78, 376, 1570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4554)
[0000][PE] mean and std.dev: (847.97, 992.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6046)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (62, 113, 199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 473)
[0000][PE] mean and std.dev: (128.26, 103.04)
[0000][PE] low and high boundaries for proper pairs: (1, 610)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000162, nseq: 3523652
	[0000][ M::kt_pipeline] read 3523652 sequences (400000162 bp)...
	[0000][ M::mem_process_seqs] Processed 3531506 reads in 660.409 CPU sec, 17.431 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3523652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (72, 1403470, 68, 50)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (57, 95, 163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 375)
[0000][PE] mean and std.dev: (91.08, 51.43)
[0000][PE] low and high boundaries for proper pairs: (1, 481)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (83, 119, 163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 323)
[0000][PE] mean and std.dev: (127.16, 58.86)
[0000][PE] low and high boundaries for proper pairs: (1, 403)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (77, 283, 1350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3896)
[0000][PE] mean and std.dev: (672.71, 879.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5169)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (78, 131, 199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 441)
[0000][PE] mean and std.dev: (114.95, 60.87)
[0000][PE] low and high boundaries for proper pairs: (1, 562)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3523652 reads in 671.324 CPU sec, 17.650 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000006, nseq: 3524998
	[0000][ M::kt_pipeline] read 3524998 sequences (400000006 bp)...
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 88662048, nseq: 784360
	[0000][ M::kt_pipeline] read 784360 sequences (88662048 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3524998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (77, 1396147, 63, 64)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (69, 122, 201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 465)
[0000][PE] mean and std.dev: (120.21, 83.39)
[0000][PE] low and high boundaries for proper pairs: (1, 597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (83, 119, 163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 323)
[0000][PE] mean and std.dev: (127.15, 58.85)
[0000][PE] low and high boundaries for proper pairs: (1, 403)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (66, 197, 929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2655)
[0000][PE] mean and std.dev: (460.81, 584.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3518)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (53, 112, 197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 485)
[0000][PE] mean and std.dev: (104.70, 82.46)
[0000][PE] low and high boundaries for proper pairs: (1, 629)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3524998 reads in 681.816 CPU sec, 17.935 real sec
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 784360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 317310, 9, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (64, 114, 166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 370)
[0000][PE] mean and std.dev: (110.89, 58.64)
[0000][PE] low and high boundaries for proper pairs: (1, 472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (83, 119, 163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 323)
[0000][PE] mean and std.dev: (127.27, 59.11)
[0000][PE] low and high boundaries for proper pairs: (1, 403)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (88, 123, 199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 421)
[0000][PE] mean and std.dev: (106.00, 43.49)
[0000][PE] low and high boundaries for proper pairs: (1, 532)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
	[0000][ M::mem_process_seqs] Processed 784360 reads in 146.365 CPU sec, 4.233 real sec
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 40
Processor is running @2394.723336 MHz
Runtime profile:

	Time taken for main_mem function: 172.06 sec

	IO times (sec) :
	Reading IO time (reads) avg: 83.00, (83.00, 83.00)
	Writing IO time (SAM) avg: 36.66, (36.66, 36.66)
	Reading IO time (Reference Genome) avg: 0.97, (0.97, 0.97)
	Index read time avg: 0.24, (0.24, 0.24)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 170.80
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 127.39, (127.39, 127.39)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 61.45, (61.45, 61.45)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 63.26, (63.26, 63.26)
		MEM_ALN_CHAIN_FLT avg: 0.00, (0.00, 0.00)
		MEM_ALN_CHAIN_SEED avg: 0.00, (0.00, 0.00)
		ERT_SEED_CHAIN avg: 0.00, (0.00, 0.00)
	LEARNED_SEED_CHAIN avg: 26.90, (26.99, 26.82)
		SMEM compute avg: 0.00, (0.00, 0.00)
		SAL compute avg: 0.00, (0.00, 0.00)
				MEM_SA avg: 0.00, (0.00, 0.00)

		BSW time, avg: 34.72, (34.84, 34.52)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
