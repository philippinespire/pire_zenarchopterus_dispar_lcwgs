Looking to launch executable "/opt/conda/bin/bwa-meme_mode3.avx512bw", simd = _mode3.avx512bw
Launching executable "/opt/conda/bin/bwa-meme_mode3.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: reference.genbank.Zdi.fasta
* Entering FMI_search
Reading other elements of the index from files reference.genbank.Zdi.fasta
* Index prefix: reference.genbank.Zdi.fasta
* Read 0 ALT contigs
* Reading reference genome..
* Binary seq file = reference.genbank.Zdi.fasta.0123
* Reference genome size: 1379380954 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 5679.4903 MB
2. Memory pre-allocation for BSW: 9584.6810 MB
[M::memoryAllocLearned::MEME] Reading Learned-index models into memory
[Learned-Config] MODE:3 SEARCH_METHOD: 1 MEM_TRADEOFF:1 EXPONENTIAL_SMEMSEARCH: 1 DEBUG_MODE:0 Num 2nd Models:268435456 PWL Bits Used:28
[M::memoryAllocLearned::MEME] Loading RMI model and Pac reference file took 10.778 sec
[M::memoryAllocLearned::MEME] Reading suffix array into memory
[M::memoryAllocLearned::MEME] Loading pos_packed file took 16.120 sec
[M::memoryAllocLearned::MEME] Generating SA, 64-bit Suffix and ISA in memory
[M::memoryAllocLearned::MEME] Runtime-build-index took 13.145 sec
3. Memory pre-allocation for BWT: 7540.2955 MB
------------------------------------------
* Threads used (compute): 40
* No. of pipeline threads: 2

[0000] read_chunk: 400000000, work_chunk_size: 400000159, nseq: 3548578
	[0000][ M::kt_pipeline] read 3548578 sequences (400000159 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 400000064, nseq: 3543776
	[0000][ M::kt_pipeline] read 3543776 sequences (400000064 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3548578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (61, 1437104, 60, 67)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (54, 126, 232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 588)
[0000][PE] mean and std.dev: (132.53, 104.06)
[0000][PE] low and high boundaries for proper pairs: (1, 766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (80, 123, 176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 368)
[0000][PE] mean and std.dev: (134.10, 69.25)
[0000][PE] low and high boundaries for proper pairs: (1, 464)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (52, 208, 835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2401)
[0000][PE] mean and std.dev: (438.26, 578.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3184)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (61, 111, 253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 637)
[0000][PE] mean and std.dev: (167.37, 141.10)
[0000][PE] low and high boundaries for proper pairs: (1, 829)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3548578 reads in 676.267 CPU sec, 17.549 real sec
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3543776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (68, 1430668, 72, 55)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (96, 184, 419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1065)
[0000][PE] mean and std.dev: (217.08, 198.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1388)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (80, 123, 176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 368)
[0000][PE] mean and std.dev: (134.08, 69.17)
[0000][PE] low and high boundaries for proper pairs: (1, 464)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (124, 439, 1457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4123)
[0000][PE] mean and std.dev: (742.65, 870.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5456)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (101, 151, 237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 509)
[0000][PE] mean and std.dev: (147.00, 72.05)
[0000][PE] low and high boundaries for proper pairs: (1, 645)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000165, nseq: 3545066
	[0000][ M::kt_pipeline] read 3545066 sequences (400000165 bp)...
	[0000][ M::mem_process_seqs] Processed 3543776 reads in 697.577 CPU sec, 18.281 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3545066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (52, 1431440, 71, 65)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (60, 115, 189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 447)
[0000][PE] mean and std.dev: (110.16, 70.96)
[0000][PE] low and high boundaries for proper pairs: (1, 576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (80, 123, 176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 368)
[0000][PE] mean and std.dev: (134.08, 69.24)
[0000][PE] low and high boundaries for proper pairs: (1, 464)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (52, 232, 943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2725)
[0000][PE] mean and std.dev: (391.30, 582.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3616)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (99, 171, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1020)
[0000][PE] mean and std.dev: (211.98, 201.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1327)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000063, nseq: 3544024
	[0000][ M::kt_pipeline] read 3544024 sequences (400000063 bp)...
	[0000][ M::mem_process_seqs] Processed 3545066 reads in 698.996 CPU sec, 18.327 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3544024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (53, 1427748, 57, 49)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (91, 138, 503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1327)
[0000][PE] mean and std.dev: (171.43, 174.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1739)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (80, 123, 176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 368)
[0000][PE] mean and std.dev: (134.09, 69.25)
[0000][PE] low and high boundaries for proper pairs: (1, 464)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (99, 467, 1110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3132)
[0000][PE] mean and std.dev: (704.78, 715.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4143)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (80, 137, 630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1730)
[0000][PE] mean and std.dev: (321.65, 426.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2280)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000284, nseq: 3537778
	[0000][ M::kt_pipeline] read 3537778 sequences (400000284 bp)...
	[0000][ M::mem_process_seqs] Processed 3544024 reads in 699.889 CPU sec, 18.398 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3537778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 1416413, 58, 49)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (70, 132, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 805)
[0000][PE] mean and std.dev: (183.00, 180.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1050)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (80, 123, 176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 368)
[0000][PE] mean and std.dev: (134.09, 69.22)
[0000][PE] low and high boundaries for proper pairs: (1, 464)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (78, 238, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1845)
[0000][PE] mean and std.dev: (306.12, 337.62)
[0000][PE] low and high boundaries for proper pairs: (1, 2434)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (93, 126, 279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 651)
[0000][PE] mean and std.dev: (143.29, 85.69)
[0000][PE] low and high boundaries for proper pairs: (1, 837)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 369245610, nseq: 3274434
	[0000][ M::kt_pipeline] read 3274434 sequences (369245610 bp)...
	[0000][ M::mem_process_seqs] Processed 3537778 reads in 706.515 CPU sec, 18.702 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3274434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (74, 1320168, 63, 44)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (94, 134, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 400)
[0000][PE] mean and std.dev: (132.23, 73.50)
[0000][PE] low and high boundaries for proper pairs: (1, 502)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (80, 123, 176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 368)
[0000][PE] mean and std.dev: (133.96, 69.15)
[0000][PE] low and high boundaries for proper pairs: (1, 464)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (51, 209, 777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2229)
[0000][PE] mean and std.dev: (398.78, 536.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2955)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (100, 167, 281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 643)
[0000][PE] mean and std.dev: (164.62, 115.61)
[0000][PE] low and high boundaries for proper pairs: (1, 824)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3274434 reads in 639.674 CPU sec, 16.942 real sec
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 40
Processor is running @2394.714922 MHz
Runtime profile:

	Time taken for main_mem function: 162.36 sec

	IO times (sec) :
	Reading IO time (reads) avg: 67.46, (67.46, 67.46)
	Writing IO time (SAM) avg: 27.87, (27.87, 27.87)
	Reading IO time (Reference Genome) avg: 0.96, (0.96, 0.96)
	Index read time avg: 0.25, (0.25, 0.25)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 161.11
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 108.18, (108.18, 108.18)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 51.06, (51.06, 51.06)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 54.96, (54.96, 54.96)
		MEM_ALN_CHAIN_FLT avg: 0.00, (0.00, 0.00)
		MEM_ALN_CHAIN_SEED avg: 0.00, (0.00, 0.00)
		ERT_SEED_CHAIN avg: 0.00, (0.00, 0.00)
	LEARNED_SEED_CHAIN avg: 26.19, (26.25, 26.15)
		SMEM compute avg: 0.00, (0.00, 0.00)
		SAL compute avg: 0.00, (0.00, 0.00)
				MEM_SA avg: 0.00, (0.00, 0.00)

		BSW time, avg: 27.59, (27.70, 27.43)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
