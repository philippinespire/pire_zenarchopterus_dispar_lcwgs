Looking to launch executable "/opt/conda/bin/bwa-meme_mode3.avx512bw", simd = _mode3.avx512bw
Launching executable "/opt/conda/bin/bwa-meme_mode3.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: reference.genbank.Zdi.fasta
* Entering FMI_search
Reading other elements of the index from files reference.genbank.Zdi.fasta
* Index prefix: reference.genbank.Zdi.fasta
* Read 0 ALT contigs
* Reading reference genome..
* Binary seq file = reference.genbank.Zdi.fasta.0123
* Reference genome size: 1379380954 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 5679.4903 MB
2. Memory pre-allocation for BSW: 9584.6810 MB
[M::memoryAllocLearned::MEME] Reading Learned-index models into memory
[Learned-Config] MODE:3 SEARCH_METHOD: 1 MEM_TRADEOFF:1 EXPONENTIAL_SMEMSEARCH: 1 DEBUG_MODE:0 Num 2nd Models:268435456 PWL Bits Used:28
[M::memoryAllocLearned::MEME] Loading RMI model and Pac reference file took 15.087 sec
[M::memoryAllocLearned::MEME] Reading suffix array into memory
[M::memoryAllocLearned::MEME] Loading pos_packed file took 20.531 sec
[M::memoryAllocLearned::MEME] Generating SA, 64-bit Suffix and ISA in memory
[M::memoryAllocLearned::MEME] Runtime-build-index took 13.534 sec
3. Memory pre-allocation for BWT: 7540.2955 MB
------------------------------------------
* Threads used (compute): 40
* No. of pipeline threads: 2

[0000] read_chunk: 400000000, work_chunk_size: 400000238, nseq: 4693132
	[0000][ M::kt_pipeline] read 4693132 sequences (400000238 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4693132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (560, 2097732, 10, 580)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 40, 58)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 118)
[0000][PE] mean and std.dev: (44.21, 22.05)
[0000][PE] low and high boundaries for proper pairs: (1, 148)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000] read_chunk: 400000000, work_chunk_size: 400000036, nseq: 4714566
[0000][PE] (25, 50, 75) percentile: (61, 79, 102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 184)
[0000][PE] mean and std.dev: (83.29, 29.72)
[0000][PE] low and high boundaries for proper pairs: (1, 225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (48, 191, 339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 921)
[0000][PE] mean and std.dev: (183.70, 140.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1212)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (30, 43, 62)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 126)
[0000][PE] mean and std.dev: (47.50, 22.89)
[0000][PE] low and high boundaries for proper pairs: (1, 158)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::kt_pipeline] read 4714566 sequences (400000036 bp)...
	[0000][ M::mem_process_seqs] Processed 4693132 reads in 262.166 CPU sec, 7.207 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4714566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (564, 2136726, 11, 589)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (30, 44, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 135)
[0000][PE] mean and std.dev: (48.10, 23.52)
[0000][PE] low and high boundaries for proper pairs: (1, 170)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 79, 102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 184)
[0000][PE] mean and std.dev: (83.25, 29.69)
[0000][PE] low and high boundaries for proper pairs: (1, 225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (68, 122, 607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1685)
[0000][PE] mean and std.dev: (142.67, 169.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2224)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (29, 41, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 137)
[0000][PE] mean and std.dev: (48.21, 25.42)
[0000][PE] low and high boundaries for proper pairs: (1, 173)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4714566 reads in 245.698 CPU sec, 6.821 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000199, nseq: 4714110
	[0000][ M::kt_pipeline] read 4714110 sequences (400000199 bp)...
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4714110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (617, 2137262, 11, 615)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 39, 60)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 122)
[0000][PE] mean and std.dev: (45.54, 22.97)
[0000][PE] low and high boundaries for proper pairs: (1, 153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 79, 102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 184)
[0000][PE] mean and std.dev: (83.27, 29.67)
[0000][PE] low and high boundaries for proper pairs: (1, 225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (25, 85, 229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 637)
[0000][PE] mean and std.dev: (82.67, 73.09)
[0000][PE] low and high boundaries for proper pairs: (1, 841)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (30, 42, 63)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 129)
[0000][PE] mean and std.dev: (47.37, 23.71)
[0000][PE] low and high boundaries for proper pairs: (1, 162)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4714110 reads in 246.349 CPU sec, 6.689 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000142, nseq: 4702678
	[0000][ M::kt_pipeline] read 4702678 sequences (400000142 bp)...
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4702678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (583, 2115273, 11, 578)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 40, 60)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 124)
[0000][PE] mean and std.dev: (45.23, 22.75)
[0000][PE] low and high boundaries for proper pairs: (1, 156)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 79, 102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 184)
[0000][PE] mean and std.dev: (83.30, 29.70)
[0000][PE] low and high boundaries for proper pairs: (1, 225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (25, 151, 265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 745)
[0000][PE] mean and std.dev: (149.09, 128.90)
[0000][PE] low and high boundaries for proper pairs: (1, 985)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (30, 41, 60)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 120)
[0000][PE] mean and std.dev: (45.94, 21.87)
[0000][PE] low and high boundaries for proper pairs: (1, 150)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4702678 reads in 257.191 CPU sec, 7.195 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000118, nseq: 4655544
	[0000][ M::kt_pipeline] read 4655544 sequences (400000118 bp)...
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4655544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (567, 2045482, 16, 522)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 41, 61)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 125)
[0000][PE] mean and std.dev: (47.01, 24.21)
[0000][PE] low and high boundaries for proper pairs: (1, 157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 79, 102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 184)
[0000][PE] mean and std.dev: (83.31, 29.69)
[0000][PE] low and high boundaries for proper pairs: (1, 225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (23, 40, 75)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 179)
[0000][PE] mean and std.dev: (43.86, 35.85)
[0000][PE] low and high boundaries for proper pairs: (1, 231)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (31, 40, 62)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 124)
[0000][PE] mean and std.dev: (46.49, 22.67)
[0000][PE] low and high boundaries for proper pairs: (1, 155)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4655544 reads in 285.011 CPU sec, 7.813 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000094, nseq: 4705582
	[0000][ M::kt_pipeline] read 4705582 sequences (400000094 bp)...
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4705582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (574, 2127303, 13, 557)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (30, 42, 63)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 129)
[0000][PE] mean and std.dev: (47.79, 23.64)
[0000][PE] low and high boundaries for proper pairs: (1, 162)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 79, 102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 184)
[0000][PE] mean and std.dev: (83.29, 29.68)
[0000][PE] low and high boundaries for proper pairs: (1, 225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (91, 229, 759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2095)
[0000][PE] mean and std.dev: (304.83, 315.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2763)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (31, 44, 62)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 124)
[0000][PE] mean and std.dev: (48.74, 24.56)
[0000][PE] low and high boundaries for proper pairs: (1, 155)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4705582 reads in 251.358 CPU sec, 6.883 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000056, nseq: 4712730
	[0000][ M::kt_pipeline] read 4712730 sequences (400000056 bp)...
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4712730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (561, 2127901, 7, 565)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 40, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 136)
[0000][PE] mean and std.dev: (47.23, 25.16)
[0000][PE] low and high boundaries for proper pairs: (1, 172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 79, 102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 184)
[0000][PE] mean and std.dev: (83.25, 29.66)
[0000][PE] low and high boundaries for proper pairs: (1, 225)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (29, 41, 62)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 128)
[0000][PE] mean and std.dev: (47.22, 24.18)
[0000][PE] low and high boundaries for proper pairs: (1, 161)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4712730 reads in 249.378 CPU sec, 6.745 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000159, nseq: 4710602
	[0000][ M::kt_pipeline] read 4710602 sequences (400000159 bp)...
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4710602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (598, 2129602, 3, 623)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (31, 41, 61)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 121)
[0000][PE] mean and std.dev: (46.60, 22.30)
[0000][PE] low and high boundaries for proper pairs: (1, 151)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 79, 102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 184)
[0000][PE] mean and std.dev: (83.23, 29.68)
[0000][PE] low and high boundaries for proper pairs: (1, 225)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (31, 43, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 133)
[0000][PE] mean and std.dev: (48.45, 24.54)
[0000][PE] low and high boundaries for proper pairs: (1, 167)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4710602 reads in 250.925 CPU sec, 6.861 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000148, nseq: 4676810
	[0000][ M::kt_pipeline] read 4676810 sequences (400000148 bp)...
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4676810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (607, 2067727, 14, 518)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 41, 66)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 140)
[0000][PE] mean and std.dev: (48.52, 25.62)
[0000][PE] low and high boundaries for proper pairs: (1, 177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 79, 102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 184)
[0000][PE] mean and std.dev: (83.28, 29.69)
[0000][PE] low and high boundaries for proper pairs: (1, 225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 271, 444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1310)
[0000][PE] mean and std.dev: (310.00, 336.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1743)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (31, 45, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 139)
[0000][PE] mean and std.dev: (49.71, 24.89)
[0000][PE] low and high boundaries for proper pairs: (1, 175)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4676810 reads in 280.828 CPU sec, 7.669 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000002, nseq: 4673184
	[0000][ M::kt_pipeline] read 4673184 sequences (400000002 bp)...
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4673184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (560, 2071623, 9, 564)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 41, 62)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 128)
[0000][PE] mean and std.dev: (46.63, 23.60)
[0000][PE] low and high boundaries for proper pairs: (1, 161)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 79, 102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 184)
[0000][PE] mean and std.dev: (83.24, 29.68)
[0000][PE] low and high boundaries for proper pairs: (1, 225)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (32, 44, 63)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 125)
[0000][PE] mean and std.dev: (48.12, 22.67)
[0000][PE] low and high boundaries for proper pairs: (1, 156)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4673184 reads in 276.732 CPU sec, 7.552 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000037, nseq: 4701762
	[0000][ M::kt_pipeline] read 4701762 sequences (400000037 bp)...
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4701762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (568, 2112901, 15, 535)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 40, 59)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 121)
[0000][PE] mean and std.dev: (44.81, 22.27)
[0000][PE] low and high boundaries for proper pairs: (1, 152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 79, 102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 184)
[0000][PE] mean and std.dev: (83.28, 29.68)
[0000][PE] low and high boundaries for proper pairs: (1, 225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 68, 175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 495)
[0000][PE] mean and std.dev: (78.21, 78.87)
[0000][PE] low and high boundaries for proper pairs: (1, 655)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (30, 40, 63)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 129)
[0000][PE] mean and std.dev: (46.75, 23.70)
[0000][PE] low and high boundaries for proper pairs: (1, 162)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4701762 reads in 258.514 CPU sec, 7.380 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000133, nseq: 4710218
	[0000][ M::kt_pipeline] read 4710218 sequences (400000133 bp)...
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4710218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (555, 2112439, 9, 574)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (30, 40, 62)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 126)
[0000][PE] mean and std.dev: (46.34, 23.97)
[0000][PE] low and high boundaries for proper pairs: (1, 158)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 79, 102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 184)
[0000][PE] mean and std.dev: (83.27, 29.65)
[0000][PE] low and high boundaries for proper pairs: (1, 225)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (31, 43, 63)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 127)
[0000][PE] mean and std.dev: (48.63, 23.53)
[0000][PE] low and high boundaries for proper pairs: (1, 159)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4710218 reads in 250.569 CPU sec, 6.794 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000163, nseq: 4705454
	[0000][ M::kt_pipeline] read 4705454 sequences (400000163 bp)...
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4705454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (570, 2095971, 7, 517)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 41, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 134)
[0000][PE] mean and std.dev: (47.77, 24.58)
[0000][PE] low and high boundaries for proper pairs: (1, 169)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 79, 102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 184)
[0000][PE] mean and std.dev: (83.23, 29.65)
[0000][PE] low and high boundaries for proper pairs: (1, 225)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (30, 42, 61)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 123)
[0000][PE] mean and std.dev: (46.98, 23.12)
[0000][PE] low and high boundaries for proper pairs: (1, 154)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4705454 reads in 257.648 CPU sec, 7.275 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000227, nseq: 4703114
	[0000][ M::kt_pipeline] read 4703114 sequences (400000227 bp)...
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4703114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (574, 2117601, 8, 551)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 41, 60)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 122)
[0000][PE] mean and std.dev: (46.01, 22.40)
[0000][PE] low and high boundaries for proper pairs: (1, 153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 79, 102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 184)
[0000][PE] mean and std.dev: (83.31, 29.70)
[0000][PE] low and high boundaries for proper pairs: (1, 225)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (30, 42, 62)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 126)
[0000][PE] mean and std.dev: (47.21, 22.56)
[0000][PE] low and high boundaries for proper pairs: (1, 158)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4703114 reads in 252.059 CPU sec, 6.860 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000081, nseq: 4715454
	[0000][ M::kt_pipeline] read 4715454 sequences (400000081 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4715454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (570, 2134565, 11, 564)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 41, 61)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 125)
[0000][PE] mean and std.dev: (46.16, 23.05)
[0000][PE] low and high boundaries for proper pairs: (1, 157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 79, 102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 184)
[0000][PE] mean and std.dev: (83.26, 29.67)
[0000][PE] low and high boundaries for proper pairs: (1, 225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (54, 117, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1074)
[0000][PE] mean and std.dev: (190.36, 165.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1414)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (31, 44, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 133)
[0000][PE] mean and std.dev: (48.83, 23.56)
[0000][PE] low and high boundaries for proper pairs: (1, 167)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000152, nseq: 4714128
	[0000][ M::kt_pipeline] read 4714128 sequences (400000152 bp)...
	[0000][ M::mem_process_seqs] Processed 4715454 reads in 247.120 CPU sec, 6.779 real sec
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4714128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (589, 2133133, 8, 561)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (30, 42, 60)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 120)
[0000][PE] mean and std.dev: (46.45, 22.36)
[0000][PE] low and high boundaries for proper pairs: (1, 150)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 79, 102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 184)
[0000][PE] mean and std.dev: (83.27, 29.67)
[0000][PE] low and high boundaries for proper pairs: (1, 225)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (30, 43, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 132)
[0000][PE] mean and std.dev: (48.42, 23.88)
[0000][PE] low and high boundaries for proper pairs: (1, 166)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4714128 reads in 247.983 CPU sec, 6.967 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000097, nseq: 4713314
	[0000][ M::kt_pipeline] read 4713314 sequences (400000097 bp)...
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4713314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (568, 2113243, 10, 538)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 42, 61)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 125)
[0000][PE] mean and std.dev: (46.28, 23.44)
[0000][PE] low and high boundaries for proper pairs: (1, 157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 79, 102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 184)
[0000][PE] mean and std.dev: (83.26, 29.68)
[0000][PE] low and high boundaries for proper pairs: (1, 225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (83, 127, 631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1727)
[0000][PE] mean and std.dev: (289.30, 318.04)
[0000][PE] low and high boundaries for proper pairs: (1, 2275)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (30, 42, 66)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 138)
[0000][PE] mean and std.dev: (49.63, 26.93)
[0000][PE] low and high boundaries for proper pairs: (1, 174)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4713314 reads in 249.237 CPU sec, 6.814 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000153, nseq: 4710006
	[0000][ M::kt_pipeline] read 4710006 sequences (400000153 bp)...
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4710006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (581, 2128386, 13, 589)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 41, 57)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 113)
[0000][PE] mean and std.dev: (43.85, 20.61)
[0000][PE] low and high boundaries for proper pairs: (1, 141)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 79, 102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 184)
[0000][PE] mean and std.dev: (83.26, 29.69)
[0000][PE] low and high boundaries for proper pairs: (1, 225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (4, 50, 301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 895)
[0000][PE] mean and std.dev: (123.50, 215.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1192)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (30, 43, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 135)
[0000][PE] mean and std.dev: (48.19, 24.24)
[0000][PE] low and high boundaries for proper pairs: (1, 170)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4710006 reads in 248.861 CPU sec, 6.804 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000062, nseq: 4714776
	[0000][ M::kt_pipeline] read 4714776 sequences (400000062 bp)...
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4714776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (581, 2132577, 6, 606)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (30, 41, 62)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 126)
[0000][PE] mean and std.dev: (46.87, 23.24)
[0000][PE] low and high boundaries for proper pairs: (1, 158)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 79, 102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 184)
[0000][PE] mean and std.dev: (83.21, 29.68)
[0000][PE] low and high boundaries for proper pairs: (1, 225)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (31, 42, 66)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 136)
[0000][PE] mean and std.dev: (48.94, 25.51)
[0000][PE] low and high boundaries for proper pairs: (1, 171)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4714776 reads in 251.361 CPU sec, 7.032 real sec
[0000] read_chunk: 400000000, work_chunk_size: 321598309, nseq: 3791060
	[0000][ M::kt_pipeline] read 3791060 sequences (321598309 bp)...
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3791060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (457, 1706120, 6, 480)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 41, 60)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 124)
[0000][PE] mean and std.dev: (45.99, 23.16)
[0000][PE] low and high boundaries for proper pairs: (1, 156)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 79, 102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 184)
[0000][PE] mean and std.dev: (83.25, 29.67)
[0000][PE] low and high boundaries for proper pairs: (1, 225)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (31, 45, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 130)
[0000][PE] mean and std.dev: (49.27, 24.22)
[0000][PE] low and high boundaries for proper pairs: (1, 163)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3791060 reads in 199.385 CPU sec, 10.407 real sec
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 40
Processor is running @2394.714618 MHz
Runtime profile:

	Time taken for main_mem function: 313.23 sec

	IO times (sec) :
	Reading IO time (reads) avg: 245.41, (245.41, 245.41)
	Writing IO time (SAM) avg: 57.74, (57.74, 57.74)
	Reading IO time (Reference Genome) avg: 1.04, (1.04, 1.04)
	Index read time avg: 0.26, (0.26, 0.26)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 311.89
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 144.53, (144.53, 144.53)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 38.82, (38.82, 38.82)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 97.09, (97.09, 97.09)
		MEM_ALN_CHAIN_FLT avg: 0.00, (0.00, 0.00)
		MEM_ALN_CHAIN_SEED avg: 0.00, (0.00, 0.00)
		ERT_SEED_CHAIN avg: 0.00, (0.00, 0.00)
	LEARNED_SEED_CHAIN avg: 50.60, (50.68, 50.41)
		SMEM compute avg: 0.00, (0.00, 0.00)
		SAL compute avg: 0.00, (0.00, 0.00)
				MEM_SA avg: 0.00, (0.00, 0.00)

		BSW time, avg: 43.69, (43.80, 43.47)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
