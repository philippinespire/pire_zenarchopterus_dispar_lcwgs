Looking to launch executable "/opt/conda/bin/bwa-meme_mode3.avx512bw", simd = _mode3.avx512bw
Launching executable "/opt/conda/bin/bwa-meme_mode3.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: reference.genbank.Zdi.fasta
* Entering FMI_search
Reading other elements of the index from files reference.genbank.Zdi.fasta
* Index prefix: reference.genbank.Zdi.fasta
* Read 0 ALT contigs
* Reading reference genome..
* Binary seq file = reference.genbank.Zdi.fasta.0123
* Reference genome size: 1379380954 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 5679.4903 MB
2. Memory pre-allocation for BSW: 9584.6810 MB
[M::memoryAllocLearned::MEME] Reading Learned-index models into memory
[Learned-Config] MODE:3 SEARCH_METHOD: 1 MEM_TRADEOFF:1 EXPONENTIAL_SMEMSEARCH: 1 DEBUG_MODE:0 Num 2nd Models:268435456 PWL Bits Used:28
[M::memoryAllocLearned::MEME] Loading RMI model and Pac reference file took 10.899 sec
[M::memoryAllocLearned::MEME] Reading suffix array into memory
[M::memoryAllocLearned::MEME] Loading pos_packed file took 14.176 sec
[M::memoryAllocLearned::MEME] Generating SA, 64-bit Suffix and ISA in memory
[M::memoryAllocLearned::MEME] Runtime-build-index took 10.946 sec
3. Memory pre-allocation for BWT: 7540.2955 MB
------------------------------------------
* Threads used (compute): 40
* No. of pipeline threads: 2

[0000] read_chunk: 400000000, work_chunk_size: 400000188, nseq: 3270330
	[0000][ M::kt_pipeline] read 3270330 sequences (400000188 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 400000086, nseq: 3267320
	[0000][ M::kt_pipeline] read 3267320 sequences (400000086 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3270330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (73, 1329565, 70, 92)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (98, 148, 260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 584)
[0000][PE] mean and std.dev: (148.75, 96.16)
[0000][PE] low and high boundaries for proper pairs: (1, 746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (98, 140, 192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 380)
[0000][PE] mean and std.dev: (149.98, 69.51)
[0000][PE] low and high boundaries for proper pairs: (1, 474)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (100, 268, 929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2587)
[0000][PE] mean and std.dev: (527.42, 632.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3416)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (90, 153, 305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 735)
[0000][PE] mean and std.dev: (172.74, 134.64)
[0000][PE] low and high boundaries for proper pairs: (1, 950)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3270330 reads in 683.860 CPU sec, 17.868 real sec
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3267320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (71, 1330907, 67, 86)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (96, 158, 446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1146)
[0000][PE] mean and std.dev: (221.66, 224.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1496)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (98, 140, 192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 380)
[0000][PE] mean and std.dev: (150.03, 69.53)
[0000][PE] low and high boundaries for proper pairs: (1, 474)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (53, 146, 927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2675)
[0000][PE] mean and std.dev: (348.02, 482.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3549)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (79, 133, 218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 496)
[0000][PE] mean and std.dev: (140.00, 84.43)
[0000][PE] low and high boundaries for proper pairs: (1, 635)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000209, nseq: 3264990
	[0000][ M::kt_pipeline] read 3264990 sequences (400000209 bp)...
	[0000][ M::mem_process_seqs] Processed 3267320 reads in 699.343 CPU sec, 18.435 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3264990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (71, 1326490, 71, 113)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (87, 155, 244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 558)
[0000][PE] mean and std.dev: (163.54, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (98, 140, 192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 380)
[0000][PE] mean and std.dev: (150.11, 69.62)
[0000][PE] low and high boundaries for proper pairs: (1, 474)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (69, 240, 1257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3633)
[0000][PE] mean and std.dev: (617.43, 849.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4821)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (91, 136, 213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 457)
[0000][PE] mean and std.dev: (142.02, 84.91)
[0000][PE] low and high boundaries for proper pairs: (1, 579)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000140, nseq: 3266004
	[0000][ M::kt_pipeline] read 3266004 sequences (400000140 bp)...
	[0000][ M::mem_process_seqs] Processed 3264990 reads in 701.343 CPU sec, 18.454 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3266004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (67, 1321889, 56, 72)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (53, 96, 165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 389)
[0000][PE] mean and std.dev: (91.46, 59.65)
[0000][PE] low and high boundaries for proper pairs: (1, 501)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (98, 140, 192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 380)
[0000][PE] mean and std.dev: (150.11, 69.58)
[0000][PE] low and high boundaries for proper pairs: (1, 474)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (107, 303, 1112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3122)
[0000][PE] mean and std.dev: (473.68, 625.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4127)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (65, 124, 250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 620)
[0000][PE] mean and std.dev: (131.22, 112.96)
[0000][PE] low and high boundaries for proper pairs: (1, 805)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000256, nseq: 3266940
	[0000][ M::kt_pipeline] read 3266940 sequences (400000256 bp)...
	[0000][ M::mem_process_seqs] Processed 3266004 reads in 711.065 CPU sec, 18.637 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3266940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (70, 1323871, 97, 85)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (89, 128, 241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 545)
[0000][PE] mean and std.dev: (135.92, 92.36)
[0000][PE] low and high boundaries for proper pairs: (1, 697)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (98, 140, 192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 380)
[0000][PE] mean and std.dev: (150.02, 69.61)
[0000][PE] low and high boundaries for proper pairs: (1, 474)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (58, 252, 1097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3175)
[0000][PE] mean and std.dev: (528.46, 594.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4214)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (81, 134, 234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 540)
[0000][PE] mean and std.dev: (131.51, 88.37)
[0000][PE] low and high boundaries for proper pairs: (1, 693)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000136, nseq: 3269380
	[0000][ M::kt_pipeline] read 3269380 sequences (400000136 bp)...
	[0000][ M::mem_process_seqs] Processed 3266940 reads in 711.718 CPU sec, 18.595 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3269380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (70, 1335271, 66, 81)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (98, 164, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1055)
[0000][PE] mean and std.dev: (207.12, 187.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1374)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (98, 140, 192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 380)
[0000][PE] mean and std.dev: (149.93, 69.47)
[0000][PE] low and high boundaries for proper pairs: (1, 474)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (75, 291, 1084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3102)
[0000][PE] mean and std.dev: (607.19, 704.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4111)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (97, 161, 368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 910)
[0000][PE] mean and std.dev: (185.72, 163.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1181)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000268, nseq: 3259746
	[0000][ M::kt_pipeline] read 3259746 sequences (400000268 bp)...
	[0000][ M::mem_process_seqs] Processed 3269380 reads in 693.068 CPU sec, 18.254 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3259746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (70, 1303878, 69, 78)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (78, 133, 321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 807)
[0000][PE] mean and std.dev: (157.30, 131.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1050)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (98, 140, 192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 380)
[0000][PE] mean and std.dev: (150.10, 69.59)
[0000][PE] low and high boundaries for proper pairs: (1, 474)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (85, 259, 877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2461)
[0000][PE] mean and std.dev: (487.58, 542.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3253)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (72, 121, 253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 615)
[0000][PE] mean and std.dev: (138.66, 108.49)
[0000][PE] low and high boundaries for proper pairs: (1, 796)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000051, nseq: 3269592
	[0000][ M::kt_pipeline] read 3269592 sequences (400000051 bp)...
	[0000][ M::mem_process_seqs] Processed 3259746 reads in 718.496 CPU sec, 19.105 real sec
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 23877527, nseq: 195460
	[0000][ M::kt_pipeline] read 195460 sequences (23877527 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3269592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (85, 1324829, 67, 72)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (105, 153, 245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 525)
[0000][PE] mean and std.dev: (146.28, 70.92)
[0000][PE] low and high boundaries for proper pairs: (1, 665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (98, 140, 192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 380)
[0000][PE] mean and std.dev: (150.06, 69.60)
[0000][PE] low and high boundaries for proper pairs: (1, 474)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (62, 293, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4391)
[0000][PE] mean and std.dev: (694.14, 865.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5834)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (71, 120, 234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 560)
[0000][PE] mean and std.dev: (126.02, 106.45)
[0000][PE] low and high boundaries for proper pairs: (1, 723)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3269592 reads in 697.460 CPU sec, 18.485 real sec
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 195460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2, 80282, 3, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (98, 140, 191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 377)
[0000][PE] mean and std.dev: (149.64, 69.34)
[0000][PE] low and high boundaries for proper pairs: (1, 470)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 195460 reads in 42.716 CPU sec, 1.393 real sec
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 40
Processor is running @2394.721704 MHz
Runtime profile:

	Time taken for main_mem function: 193.35 sec

	IO times (sec) :
	Reading IO time (reads) avg: 87.53, (87.53, 87.53)
	Writing IO time (SAM) avg: 40.47, (40.47, 40.47)
	Reading IO time (Reference Genome) avg: 1.04, (1.04, 1.04)
	Index read time avg: 0.24, (0.24, 0.24)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 192.02
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 149.20, (149.20, 149.20)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 74.77, (74.77, 74.77)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 71.60, (71.60, 71.60)
		MEM_ALN_CHAIN_FLT avg: 0.00, (0.00, 0.00)
		MEM_ALN_CHAIN_SEED avg: 0.00, (0.00, 0.00)
		ERT_SEED_CHAIN avg: 0.00, (0.00, 0.00)
	LEARNED_SEED_CHAIN avg: 30.09, (30.17, 30.01)
		SMEM compute avg: 0.00, (0.00, 0.00)
		SAL compute avg: 0.00, (0.00, 0.00)
				MEM_SA avg: 0.00, (0.00, 0.00)

		BSW time, avg: 39.74, (40.05, 39.56)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
