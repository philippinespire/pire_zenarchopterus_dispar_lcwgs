Looking to launch executable "/opt/conda/bin/bwa-meme_mode3.avx512bw", simd = _mode3.avx512bw
Launching executable "/opt/conda/bin/bwa-meme_mode3.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: reference.genbank.Zdi.fasta
* Entering FMI_search
Reading other elements of the index from files reference.genbank.Zdi.fasta
* Index prefix: reference.genbank.Zdi.fasta
* Read 0 ALT contigs
* Reading reference genome..
* Binary seq file = reference.genbank.Zdi.fasta.0123
* Reference genome size: 1379380954 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 5679.4903 MB
2. Memory pre-allocation for BSW: 9584.6810 MB
[M::memoryAllocLearned::MEME] Reading Learned-index models into memory
[Learned-Config] MODE:3 SEARCH_METHOD: 1 MEM_TRADEOFF:1 EXPONENTIAL_SMEMSEARCH: 1 DEBUG_MODE:0 Num 2nd Models:268435456 PWL Bits Used:28
[M::memoryAllocLearned::MEME] Loading RMI model and Pac reference file took 10.590 sec
[M::memoryAllocLearned::MEME] Reading suffix array into memory
[M::memoryAllocLearned::MEME] Loading pos_packed file took 15.711 sec
[M::memoryAllocLearned::MEME] Generating SA, 64-bit Suffix and ISA in memory
[M::memoryAllocLearned::MEME] Runtime-build-index took 13.105 sec
3. Memory pre-allocation for BWT: 7540.2955 MB
------------------------------------------
* Threads used (compute): 40
* No. of pipeline threads: 2

[0000] read_chunk: 400000000, work_chunk_size: 400000148, nseq: 3283592
	[0000][ M::kt_pipeline] read 3283592 sequences (400000148 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3283592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (83, 1329874, 53, 66)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (85, 118, 224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 502)
[0000][PE] mean and std.dev: (137.04, 100.50)
[0000][PE] low and high boundaries for proper pairs: (1, 641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (97, 133, 177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 337)
[0000][PE] mean and std.dev: (141.08, 59.74)
[0000][PE] low and high boundaries for proper pairs: (1, 417)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (60, 258, 790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2250)
[0000][PE] mean and std.dev: (435.12, 558.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2980)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (75, 125, 181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 393)
[0000][PE] mean and std.dev: (116.53, 64.35)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000120, nseq: 3283466
	[0000][ M::kt_pipeline] read 3283466 sequences (400000120 bp)...
	[0000][ M::mem_process_seqs] Processed 3283592 reads in 672.165 CPU sec, 17.473 real sec
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3283466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (98, 1335804, 53, 64)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (56, 95, 184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 440)
[0000][PE] mean and std.dev: (113.39, 91.07)
[0000][PE] low and high boundaries for proper pairs: (1, 568)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (97, 133, 177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 337)
[0000][PE] mean and std.dev: (141.10, 59.73)
[0000][PE] low and high boundaries for proper pairs: (1, 417)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (57, 262, 996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2874)
[0000][PE] mean and std.dev: (540.84, 710.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3813)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (78, 119, 246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 582)
[0000][PE] mean and std.dev: (141.81, 109.39)
[0000][PE] low and high boundaries for proper pairs: (1, 750)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000063, nseq: 3276324
	[0000][ M::kt_pipeline] read 3276324 sequences (400000063 bp)...
	[0000][ M::mem_process_seqs] Processed 3283466 reads in 679.914 CPU sec, 17.807 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3276324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (73, 1315605, 57, 72)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (99, 186, 424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1074)
[0000][PE] mean and std.dev: (221.59, 164.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1399)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (97, 133, 177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 337)
[0000][PE] mean and std.dev: (141.12, 59.70)
[0000][PE] low and high boundaries for proper pairs: (1, 417)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (53, 144, 787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2255)
[0000][PE] mean and std.dev: (280.08, 386.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2989)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (72, 150, 547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1497)
[0000][PE] mean and std.dev: (235.19, 287.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1972)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000012, nseq: 3276824
	[0000][ M::kt_pipeline] read 3276824 sequences (400000012 bp)...
	[0000][ M::mem_process_seqs] Processed 3276324 reads in 699.514 CPU sec, 18.338 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3276824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (68, 1310860, 51, 89)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (83, 122, 173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 353)
[0000][PE] mean and std.dev: (109.08, 48.67)
[0000][PE] low and high boundaries for proper pairs: (1, 443)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (97, 133, 177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 337)
[0000][PE] mean and std.dev: (141.05, 59.73)
[0000][PE] low and high boundaries for proper pairs: (1, 417)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (62, 389, 1095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3161)
[0000][PE] mean and std.dev: (640.81, 842.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4194)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (93, 141, 225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 489)
[0000][PE] mean and std.dev: (138.79, 85.87)
[0000][PE] low and high boundaries for proper pairs: (1, 621)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000257, nseq: 3283484
	[0000][ M::kt_pipeline] read 3283484 sequences (400000257 bp)...
	[0000][ M::mem_process_seqs] Processed 3276824 reads in 714.415 CPU sec, 18.685 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3283484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (76, 1327117, 52, 68)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (83, 151, 490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1304)
[0000][PE] mean and std.dev: (271.72, 331.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (97, 133, 177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 337)
[0000][PE] mean and std.dev: (141.02, 59.72)
[0000][PE] low and high boundaries for proper pairs: (1, 417)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (93, 370, 1792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5190)
[0000][PE] mean and std.dev: (1059.40, 1346.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6889)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (97, 126, 224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 478)
[0000][PE] mean and std.dev: (134.21, 84.77)
[0000][PE] low and high boundaries for proper pairs: (1, 605)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000043, nseq: 3279620
	[0000][ M::kt_pipeline] read 3279620 sequences (400000043 bp)...
	[0000][ M::mem_process_seqs] Processed 3283484 reads in 693.732 CPU sec, 18.358 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3279620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (67, 1319022, 51, 56)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (54, 101, 182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 438)
[0000][PE] mean and std.dev: (96.79, 70.88)
[0000][PE] low and high boundaries for proper pairs: (1, 566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (97, 133, 177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 337)
[0000][PE] mean and std.dev: (141.05, 59.73)
[0000][PE] low and high boundaries for proper pairs: (1, 417)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (147, 638, 1130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3096)
[0000][PE] mean and std.dev: (598.43, 585.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4079)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (64, 105, 171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 385)
[0000][PE] mean and std.dev: (112.67, 70.29)
[0000][PE] low and high boundaries for proper pairs: (1, 492)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000014, nseq: 3281594
	[0000][ M::kt_pipeline] read 3281594 sequences (400000014 bp)...
	[0000][ M::mem_process_seqs] Processed 3279620 reads in 694.850 CPU sec, 18.209 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3281594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (63, 1332394, 78, 73)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (100, 136, 322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 766)
[0000][PE] mean and std.dev: (172.75, 153.09)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (97, 133, 177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 337)
[0000][PE] mean and std.dev: (141.01, 59.65)
[0000][PE] low and high boundaries for proper pairs: (1, 417)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (104, 321, 1123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3161)
[0000][PE] mean and std.dev: (574.75, 678.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4180)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (71, 122, 456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1226)
[0000][PE] mean and std.dev: (228.52, 265.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1611)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000143, nseq: 3274544
	[0000][ M::kt_pipeline] read 3274544 sequences (400000143 bp)...
	[0000][ M::mem_process_seqs] Processed 3281594 reads in 685.845 CPU sec, 18.130 real sec
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3274544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (71, 1309660, 56, 90)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (76, 102, 204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 460)
[0000][PE] mean and std.dev: (117.36, 81.74)
[0000][PE] low and high boundaries for proper pairs: (1, 588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (97, 133, 177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 337)
[0000][PE] mean and std.dev: (141.05, 59.70)
[0000][PE] low and high boundaries for proper pairs: (1, 417)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (70, 222, 1023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2929)
[0000][PE] mean and std.dev: (481.79, 657.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3882)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (76, 109, 206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 466)
[0000][PE] mean and std.dev: (126.00, 94.62)
[0000][PE] low and high boundaries for proper pairs: (1, 596)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000056, nseq: 3279068
	[0000][ M::kt_pipeline] read 3279068 sequences (400000056 bp)...
	[0000][ M::mem_process_seqs] Processed 3274544 reads in 699.888 CPU sec, 18.441 real sec
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3279068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (81, 1315890, 54, 73)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (68, 116, 177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 395)
[0000][PE] mean and std.dev: (113.97, 64.97)
[0000][PE] low and high boundaries for proper pairs: (1, 504)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (97, 133, 177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 337)
[0000][PE] mean and std.dev: (141.09, 59.68)
[0000][PE] low and high boundaries for proper pairs: (1, 417)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (63, 194, 820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2334)
[0000][PE] mean and std.dev: (402.33, 540.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3091)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (76, 105, 173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 367)
[0000][PE] mean and std.dev: (110.08, 69.71)
[0000][PE] low and high boundaries for proper pairs: (1, 464)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 277585827, nseq: 2276146
	[0000][ M::kt_pipeline] read 2276146 sequences (277585827 bp)...
	[0000][ M::mem_process_seqs] Processed 3279068 reads in 705.581 CPU sec, 18.504 real sec
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 2276146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (58, 911870, 37, 41)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (63, 117, 365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 969)
[0000][PE] mean and std.dev: (145.83, 157.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1271)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (97, 133, 177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 337)
[0000][PE] mean and std.dev: (141.12, 59.68)
[0000][PE] low and high boundaries for proper pairs: (1, 417)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (72, 170, 598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1650)
[0000][PE] mean and std.dev: (285.18, 350.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2176)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (76, 133, 226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 526)
[0000][PE] mean and std.dev: (138.43, 88.77)
[0000][PE] low and high boundaries for proper pairs: (1, 676)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2276146 reads in 481.677 CPU sec, 13.060 real sec
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 40
Processor is running @2394.732344 MHz
Runtime profile:

	Time taken for main_mem function: 224.39 sec

	IO times (sec) :
	Reading IO time (reads) avg: 104.48, (104.48, 104.48)
	Writing IO time (SAM) avg: 45.83, (45.83, 45.83)
	Reading IO time (Reference Genome) avg: 1.11, (1.11, 1.11)
	Index read time avg: 0.25, (0.25, 0.25)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 222.99
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 176.98, (176.98, 176.98)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 85.16, (85.16, 85.16)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 88.47, (88.47, 88.47)
		MEM_ALN_CHAIN_FLT avg: 0.00, (0.00, 0.00)
		MEM_ALN_CHAIN_SEED avg: 0.00, (0.00, 0.00)
		ERT_SEED_CHAIN avg: 0.00, (0.00, 0.00)
	LEARNED_SEED_CHAIN avg: 40.81, (40.87, 40.74)
		SMEM compute avg: 0.00, (0.00, 0.00)
		SAL compute avg: 0.00, (0.00, 0.00)
				MEM_SA avg: 0.00, (0.00, 0.00)

		BSW time, avg: 45.52, (45.70, 45.23)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
