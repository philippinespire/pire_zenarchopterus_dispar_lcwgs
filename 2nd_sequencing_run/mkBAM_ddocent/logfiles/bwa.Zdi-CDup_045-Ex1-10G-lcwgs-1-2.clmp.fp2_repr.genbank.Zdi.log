Looking to launch executable "/opt/conda/bin/bwa-meme_mode3.avx512bw", simd = _mode3.avx512bw
Launching executable "/opt/conda/bin/bwa-meme_mode3.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: reference.genbank.Zdi.fasta
* Entering FMI_search
Reading other elements of the index from files reference.genbank.Zdi.fasta
* Index prefix: reference.genbank.Zdi.fasta
* Read 0 ALT contigs
* Reading reference genome..
* Binary seq file = reference.genbank.Zdi.fasta.0123
* Reference genome size: 1379380954 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 5679.4903 MB
2. Memory pre-allocation for BSW: 9584.6810 MB
[M::memoryAllocLearned::MEME] Reading Learned-index models into memory
[Learned-Config] MODE:3 SEARCH_METHOD: 1 MEM_TRADEOFF:1 EXPONENTIAL_SMEMSEARCH: 1 DEBUG_MODE:0 Num 2nd Models:268435456 PWL Bits Used:28
[M::memoryAllocLearned::MEME] Loading RMI model and Pac reference file took 10.741 sec
[M::memoryAllocLearned::MEME] Reading suffix array into memory
[M::memoryAllocLearned::MEME] Loading pos_packed file took 15.718 sec
[M::memoryAllocLearned::MEME] Generating SA, 64-bit Suffix and ISA in memory
[M::memoryAllocLearned::MEME] Runtime-build-index took 13.118 sec
3. Memory pre-allocation for BWT: 7540.2955 MB
------------------------------------------
* Threads used (compute): 40
* No. of pipeline threads: 2

[0000] read_chunk: 400000000, work_chunk_size: 400000239, nseq: 3520834
	[0000][ M::kt_pipeline] read 3520834 sequences (400000239 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3520834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (73, 1430589, 47, 89)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (66, 98, 141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 291)
[0000][PE] mean and std.dev: (99.52, 51.66)
[0000][PE] low and high boundaries for proper pairs: (1, 366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (84, 120, 163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 321)
[0000][PE] mean and std.dev: (127.13, 58.38)
[0000][PE] low and high boundaries for proper pairs: (1, 400)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (79, 218, 1836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5350)
[0000][PE] mean and std.dev: (1022.49, 1345.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7107)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (79, 123, 221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 505)
[0000][PE] mean and std.dev: (127.17, 82.75)
[0000][PE] low and high boundaries for proper pairs: (1, 647)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000139, nseq: 3517718
	[0000][ M::kt_pipeline] read 3517718 sequences (400000139 bp)...
	[0000][ M::mem_process_seqs] Processed 3520834 reads in 667.115 CPU sec, 17.234 real sec
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3517718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (92, 1419111, 59, 73)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (80, 134, 222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 506)
[0000][PE] mean and std.dev: (143.93, 97.37)
[0000][PE] low and high boundaries for proper pairs: (1, 648)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (84, 120, 163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 321)
[0000][PE] mean and std.dev: (127.14, 58.42)
[0000][PE] low and high boundaries for proper pairs: (1, 400)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (42, 130, 625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1791)
[0000][PE] mean and std.dev: (220.17, 277.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2374)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (71, 120, 196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 446)
[0000][PE] mean and std.dev: (122.14, 81.24)
[0000][PE] low and high boundaries for proper pairs: (1, 571)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000023, nseq: 3519412
	[0000][ M::kt_pipeline] read 3519412 sequences (400000023 bp)...
	[0000][ M::mem_process_seqs] Processed 3517718 reads in 684.261 CPU sec, 18.219 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3519412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (63, 1422583, 46, 82)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (75, 107, 149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 297)
[0000][PE] mean and std.dev: (104.87, 56.70)
[0000][PE] low and high boundaries for proper pairs: (1, 371)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (84, 119, 163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 321)
[0000][PE] mean and std.dev: (127.08, 58.38)
[0000][PE] low and high boundaries for proper pairs: (1, 400)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (58, 248, 689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1951)
[0000][PE] mean and std.dev: (427.38, 512.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2582)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (78, 127, 256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 612)
[0000][PE] mean and std.dev: (167.19, 146.31)
[0000][PE] low and high boundaries for proper pairs: (1, 790)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000191, nseq: 3516866
	[0000][ M::kt_pipeline] read 3516866 sequences (400000191 bp)...
	[0000][ M::mem_process_seqs] Processed 3519412 reads in 684.569 CPU sec, 17.982 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3516866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (81, 1414457, 71, 87)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (80, 111, 204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 452)
[0000][PE] mean and std.dev: (126.07, 73.93)
[0000][PE] low and high boundaries for proper pairs: (1, 576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (84, 120, 163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 321)
[0000][PE] mean and std.dev: (127.07, 58.34)
[0000][PE] low and high boundaries for proper pairs: (1, 400)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (60, 341, 1101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3183)
[0000][PE] mean and std.dev: (506.95, 563.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4224)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (77, 104, 194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 428)
[0000][PE] mean and std.dev: (119.95, 77.24)
[0000][PE] low and high boundaries for proper pairs: (1, 545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 271261870, nseq: 2386156
	[0000][ M::kt_pipeline] read 2386156 sequences (271261870 bp)...
	[0000][ M::mem_process_seqs] Processed 3516866 reads in 686.910 CPU sec, 18.140 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 2386156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (64, 962458, 49, 40)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (72, 114, 162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 342)
[0000][PE] mean and std.dev: (104.46, 64.86)
[0000][PE] low and high boundaries for proper pairs: (1, 432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (84, 120, 163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 321)
[0000][PE] mean and std.dev: (127.08, 58.28)
[0000][PE] low and high boundaries for proper pairs: (1, 400)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (92, 220, 1143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3245)
[0000][PE] mean and std.dev: (524.87, 767.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4296)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (95, 150, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 896)
[0000][PE] mean and std.dev: (146.78, 96.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1163)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2386156 reads in 463.612 CPU sec, 12.372 real sec
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 40
Processor is running @2394.715840 MHz
Runtime profile:

	Time taken for main_mem function: 132.12 sec

	IO times (sec) :
	Reading IO time (reads) avg: 53.47, (53.47, 53.47)
	Writing IO time (SAM) avg: 22.68, (22.68, 22.68)
	Reading IO time (Reference Genome) avg: 1.14, (1.14, 1.14)
	Index read time avg: 0.31, (0.31, 0.31)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 130.62
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 83.93, (83.93, 83.93)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 38.83, (38.83, 38.83)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 43.43, (43.43, 43.43)
		MEM_ALN_CHAIN_FLT avg: 0.00, (0.00, 0.00)
		MEM_ALN_CHAIN_SEED avg: 0.00, (0.00, 0.00)
		ERT_SEED_CHAIN avg: 0.00, (0.00, 0.00)
	LEARNED_SEED_CHAIN avg: 20.91, (21.01, 20.86)
		SMEM compute avg: 0.00, (0.00, 0.00)
		SAL compute avg: 0.00, (0.00, 0.00)
				MEM_SA avg: 0.00, (0.00, 0.00)

		BSW time, avg: 21.49, (21.61, 21.37)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
