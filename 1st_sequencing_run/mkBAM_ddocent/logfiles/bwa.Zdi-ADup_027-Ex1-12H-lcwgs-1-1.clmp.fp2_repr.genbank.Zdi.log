Looking to launch executable "/opt/conda/bin/bwa-meme_mode3.avx512bw", simd = _mode3.avx512bw
Launching executable "/opt/conda/bin/bwa-meme_mode3.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: reference.genbank.Zdi.fasta
* Entering FMI_search
Reading other elements of the index from files reference.genbank.Zdi.fasta
* Index prefix: reference.genbank.Zdi.fasta
* Read 0 ALT contigs
* Reading reference genome..
* Binary seq file = reference.genbank.Zdi.fasta.0123
* Reference genome size: 1379380954 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 5679.4903 MB
2. Memory pre-allocation for BSW: 9584.6810 MB
[M::memoryAllocLearned::MEME] Reading Learned-index models into memory
[Learned-Config] MODE:3 SEARCH_METHOD: 1 MEM_TRADEOFF:1 EXPONENTIAL_SMEMSEARCH: 1 DEBUG_MODE:0 Num 2nd Models:268435456 PWL Bits Used:28
[M::memoryAllocLearned::MEME] Loading RMI model and Pac reference file took 10.334 sec
[M::memoryAllocLearned::MEME] Reading suffix array into memory
[M::memoryAllocLearned::MEME] Loading pos_packed file took 13.255 sec
[M::memoryAllocLearned::MEME] Generating SA, 64-bit Suffix and ISA in memory
[M::memoryAllocLearned::MEME] Runtime-build-index took 16.081 sec
3. Memory pre-allocation for BWT: 7540.2955 MB
------------------------------------------
* Threads used (compute): 40
* No. of pipeline threads: 2

[0000] read_chunk: 400000000, work_chunk_size: 400000196, nseq: 5137446
	[0000][ M::kt_pipeline] read 5137446 sequences (400000196 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 5137446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2465, 2164406, 7, 2778)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (25, 31, 40)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 70)
[0000][PE] mean and std.dev: (32.75, 11.00)
[0000][PE] low and high boundaries for proper pairs: (1, 85)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (52, 68, 88)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 160)
[0000][PE] mean and std.dev: (71.37, 25.74)
[0000][PE] low and high boundaries for proper pairs: (1, 196)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (26, 32, 41)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 71)
[0000][PE] mean and std.dev: (33.65, 11.38)
[0000][PE] low and high boundaries for proper pairs: (1, 86)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 400000124, nseq: 5147606
	[0000][ M::kt_pipeline] read 5147606 sequences (400000124 bp)...
	[0000][ M::mem_process_seqs] Processed 5137446 reads in 295.739 CPU sec, 8.357 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 5147606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2398, 2177505, 3, 2801)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (25, 31, 39)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 67)
[0000][PE] mean and std.dev: (32.23, 10.62)
[0000][PE] low and high boundaries for proper pairs: (1, 81)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (52, 68, 88)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 160)
[0000][PE] mean and std.dev: (71.36, 25.74)
[0000][PE] low and high boundaries for proper pairs: (1, 196)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (26, 32, 40)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 68)
[0000][PE] mean and std.dev: (33.03, 10.66)
[0000][PE] low and high boundaries for proper pairs: (1, 82)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 5147606 reads in 295.659 CPU sec, 8.162 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000140, nseq: 5113360
	[0000][ M::kt_pipeline] read 5113360 sequences (400000140 bp)...
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 5113360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2292, 2133747, 3, 2748)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (25, 31, 39)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 67)
[0000][PE] mean and std.dev: (32.02, 10.62)
[0000][PE] low and high boundaries for proper pairs: (1, 81)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (52, 68, 88)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 160)
[0000][PE] mean and std.dev: (71.41, 25.75)
[0000][PE] low and high boundaries for proper pairs: (1, 196)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (26, 32, 40)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 68)
[0000][PE] mean and std.dev: (32.93, 10.53)
[0000][PE] low and high boundaries for proper pairs: (1, 82)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 5113360 reads in 307.522 CPU sec, 8.374 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000207, nseq: 5098880
	[0000][ M::kt_pipeline] read 5098880 sequences (400000207 bp)...
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 5098880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2323, 2107751, 6, 2638)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (25, 30, 39)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 67)
[0000][PE] mean and std.dev: (31.98, 10.60)
[0000][PE] low and high boundaries for proper pairs: (1, 81)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (52, 68, 88)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 160)
[0000][PE] mean and std.dev: (71.40, 25.74)
[0000][PE] low and high boundaries for proper pairs: (1, 196)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (25, 32, 40)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 70)
[0000][PE] mean and std.dev: (33.11, 10.90)
[0000][PE] low and high boundaries for proper pairs: (1, 85)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 5098880 reads in 324.330 CPU sec, 8.867 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000020, nseq: 5144076
	[0000][ M::kt_pipeline] read 5144076 sequences (400000020 bp)...
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 5144076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2411, 2161361, 9, 2823)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (25, 30, 38)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 64)
[0000][PE] mean and std.dev: (31.53, 10.07)
[0000][PE] low and high boundaries for proper pairs: (1, 77)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (52, 68, 87)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 157)
[0000][PE] mean and std.dev: (71.23, 25.60)
[0000][PE] low and high boundaries for proper pairs: (1, 192)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (25, 31, 40)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 70)
[0000][PE] mean and std.dev: (32.79, 11.06)
[0000][PE] low and high boundaries for proper pairs: (1, 85)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 5144076 reads in 300.306 CPU sec, 8.228 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000186, nseq: 5142886
	[0000][ M::kt_pipeline] read 5142886 sequences (400000186 bp)...
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 5142886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2477, 2170424, 8, 2851)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (25, 31, 39)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 67)
[0000][PE] mean and std.dev: (32.29, 10.53)
[0000][PE] low and high boundaries for proper pairs: (1, 81)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (52, 68, 88)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 160)
[0000][PE] mean and std.dev: (71.37, 25.70)
[0000][PE] low and high boundaries for proper pairs: (1, 196)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (26, 32, 40)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 68)
[0000][PE] mean and std.dev: (33.02, 10.50)
[0000][PE] low and high boundaries for proper pairs: (1, 82)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 5142886 reads in 297.171 CPU sec, 8.204 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000058, nseq: 5154292
	[0000][ M::kt_pipeline] read 5154292 sequences (400000058 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 5154292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2502, 2185088, 4, 2794)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (25, 30, 39)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 67)
[0000][PE] mean and std.dev: (32.18, 10.57)
[0000][PE] low and high boundaries for proper pairs: (1, 81)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (52, 68, 87)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 157)
[0000][PE] mean and std.dev: (71.23, 25.58)
[0000][PE] low and high boundaries for proper pairs: (1, 192)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (26, 32, 40)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 68)
[0000][PE] mean and std.dev: (33.01, 10.54)
[0000][PE] low and high boundaries for proper pairs: (1, 82)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 5154292 reads in 293.302 CPU sec, 8.059 real sec
[0000] read_chunk: 400000000, work_chunk_size: 388243974, nseq: 5001092
	[0000][ M::kt_pipeline] read 5001092 sequences (388243974 bp)...
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 5001092
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2401, 2119029, 5, 2768)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (25, 31, 39)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 67)
[0000][PE] mean and std.dev: (32.17, 10.47)
[0000][PE] low and high boundaries for proper pairs: (1, 81)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (52, 68, 88)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 160)
[0000][PE] mean and std.dev: (71.35, 25.74)
[0000][PE] low and high boundaries for proper pairs: (1, 196)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (26, 31, 40)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 68)
[0000][PE] mean and std.dev: (33.05, 10.89)
[0000][PE] low and high boundaries for proper pairs: (1, 82)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 5001092 reads in 282.032 CPU sec, 8.099 real sec
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 40
Processor is running @2394.720498 MHz
Runtime profile:

	Time taken for main_mem function: 136.28 sec

	IO times (sec) :
	Reading IO time (reads) avg: 85.80, (85.80, 85.80)
	Writing IO time (SAM) avg: 25.15, (25.15, 25.15)
	Reading IO time (Reference Genome) avg: 0.61, (0.61, 0.61)
	Index read time avg: 0.23, (0.23, 0.23)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 135.38
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 66.34, (66.34, 66.34)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 18.71, (18.71, 18.71)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 43.49, (43.49, 43.49)
		MEM_ALN_CHAIN_FLT avg: 0.00, (0.00, 0.00)
		MEM_ALN_CHAIN_SEED avg: 0.00, (0.00, 0.00)
		ERT_SEED_CHAIN avg: 0.00, (0.00, 0.00)
	LEARNED_SEED_CHAIN avg: 20.76, (20.80, 20.68)
		SMEM compute avg: 0.00, (0.00, 0.00)
		SAL compute avg: 0.00, (0.00, 0.00)
				MEM_SA avg: 0.00, (0.00, 0.00)

		BSW time, avg: 21.37, (21.50, 21.21)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
