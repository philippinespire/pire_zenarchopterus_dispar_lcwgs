Looking to launch executable "/opt/conda/bin/bwa-meme_mode3.avx512bw", simd = _mode3.avx512bw
Launching executable "/opt/conda/bin/bwa-meme_mode3.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: reference.genbank.Zdi.fasta
* Entering FMI_search
Reading other elements of the index from files reference.genbank.Zdi.fasta
* Index prefix: reference.genbank.Zdi.fasta
* Read 0 ALT contigs
* Reading reference genome..
* Binary seq file = reference.genbank.Zdi.fasta.0123
* Reference genome size: 1379380954 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 5679.4903 MB
2. Memory pre-allocation for BSW: 9584.6810 MB
[M::memoryAllocLearned::MEME] Reading Learned-index models into memory
[Learned-Config] MODE:3 SEARCH_METHOD: 1 MEM_TRADEOFF:1 EXPONENTIAL_SMEMSEARCH: 1 DEBUG_MODE:0 Num 2nd Models:268435456 PWL Bits Used:28
[M::memoryAllocLearned::MEME] Loading RMI model and Pac reference file took 10.000 sec
[M::memoryAllocLearned::MEME] Reading suffix array into memory
[M::memoryAllocLearned::MEME] Loading pos_packed file took 12.654 sec
[M::memoryAllocLearned::MEME] Generating SA, 64-bit Suffix and ISA in memory
[M::memoryAllocLearned::MEME] Runtime-build-index took 12.193 sec
3. Memory pre-allocation for BWT: 7540.2955 MB
------------------------------------------
* Threads used (compute): 40
* No. of pipeline threads: 2

[0000] read_chunk: 400000000, work_chunk_size: 400000086, nseq: 4641678
	[0000][ M::kt_pipeline] read 4641678 sequences (400000086 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4641678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (143, 2051204, 6, 99)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 47, 71)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 155)
[0000][PE] mean and std.dev: (50.10, 26.89)
[0000][PE] low and high boundaries for proper pairs: (1, 197)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 80, 104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 190)
[0000][PE] mean and std.dev: (84.22, 31.67)
[0000][PE] low and high boundaries for proper pairs: (1, 233)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (27, 41, 69)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 153)
[0000][PE] mean and std.dev: (48.29, 29.27)
[0000][PE] low and high boundaries for proper pairs: (1, 195)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4641678 reads in 258.196 CPU sec, 7.196 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000011, nseq: 4624130
	[0000][ M::kt_pipeline] read 4624130 sequences (400000011 bp)...
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4624130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (127, 2026043, 10, 120)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (31, 46, 73)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 157)
[0000][PE] mean and std.dev: (53.29, 29.28)
[0000][PE] low and high boundaries for proper pairs: (1, 199)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 80, 104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 190)
[0000][PE] mean and std.dev: (84.25, 31.64)
[0000][PE] low and high boundaries for proper pairs: (1, 233)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (31, 99, 238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 652)
[0000][PE] mean and std.dev: (150.40, 151.38)
[0000][PE] low and high boundaries for proper pairs: (1, 859)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (26, 45, 71)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 161)
[0000][PE] mean and std.dev: (48.61, 30.12)
[0000][PE] low and high boundaries for proper pairs: (1, 206)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4624130 reads in 269.520 CPU sec, 7.593 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000070, nseq: 4645792
	[0000][ M::kt_pipeline] read 4645792 sequences (400000070 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4645792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (130, 2057601, 10, 103)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 42, 62)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 132)
[0000][PE] mean and std.dev: (45.01, 25.54)
[0000][PE] low and high boundaries for proper pairs: (1, 167)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 80, 104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 190)
[0000][PE] mean and std.dev: (84.23, 31.65)
[0000][PE] low and high boundaries for proper pairs: (1, 233)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (35, 149, 193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 509)
[0000][PE] mean and std.dev: (90.38, 68.06)
[0000][PE] low and high boundaries for proper pairs: (1, 667)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (27, 42, 61)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 129)
[0000][PE] mean and std.dev: (46.83, 25.25)
[0000][PE] low and high boundaries for proper pairs: (1, 163)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4645792 reads in 253.663 CPU sec, 6.868 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000230, nseq: 4618600
	[0000][ M::kt_pipeline] read 4618600 sequences (400000230 bp)...
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4618600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (130, 2020093, 4, 117)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (26, 39, 66)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 146)
[0000][PE] mean and std.dev: (45.71, 25.79)
[0000][PE] low and high boundaries for proper pairs: (1, 186)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 80, 104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 190)
[0000][PE] mean and std.dev: (84.28, 31.64)
[0000][PE] low and high boundaries for proper pairs: (1, 233)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (29, 47, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 137)
[0000][PE] mean and std.dev: (48.34, 25.35)
[0000][PE] low and high boundaries for proper pairs: (1, 173)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4618600 reads in 276.422 CPU sec, 7.580 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000157, nseq: 4640782
	[0000][ M::kt_pipeline] read 4640782 sequences (400000157 bp)...
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4640782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (134, 2044300, 7, 91)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 39, 63)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 135)
[0000][PE] mean and std.dev: (45.18, 25.39)
[0000][PE] low and high boundaries for proper pairs: (1, 171)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 80, 104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 190)
[0000][PE] mean and std.dev: (84.27, 31.67)
[0000][PE] low and high boundaries for proper pairs: (1, 233)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (28, 42, 69)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 151)
[0000][PE] mean and std.dev: (48.91, 28.00)
[0000][PE] low and high boundaries for proper pairs: (1, 192)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4640782 reads in 260.632 CPU sec, 7.223 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000161, nseq: 4644178
	[0000][ M::kt_pipeline] read 4644178 sequences (400000161 bp)...
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4644178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (106, 2052320, 8, 112)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 41, 53)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 105)
[0000][PE] mean and std.dev: (40.68, 19.53)
[0000][PE] low and high boundaries for proper pairs: (1, 131)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 80, 104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 190)
[0000][PE] mean and std.dev: (84.23, 31.66)
[0000][PE] low and high boundaries for proper pairs: (1, 233)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (28, 41, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 136)
[0000][PE] mean and std.dev: (47.08, 27.21)
[0000][PE] low and high boundaries for proper pairs: (1, 172)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4644178 reads in 258.807 CPU sec, 7.147 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000074, nseq: 4646918
	[0000][ M::kt_pipeline] read 4646918 sequences (400000074 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4646918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (126, 2054286, 3, 113)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 42, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 145)
[0000][PE] mean and std.dev: (48.38, 27.96)
[0000][PE] low and high boundaries for proper pairs: (1, 184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 80, 104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 190)
[0000][PE] mean and std.dev: (84.22, 31.65)
[0000][PE] low and high boundaries for proper pairs: (1, 233)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (29, 48, 78)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 176)
[0000][PE] mean and std.dev: (51.76, 29.42)
[0000][PE] low and high boundaries for proper pairs: (1, 225)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 329791768, nseq: 3836352
	[0000][ M::kt_pipeline] read 3836352 sequences (329791768 bp)...
	[0000][ M::mem_process_seqs] Processed 4646918 reads in 257.690 CPU sec, 7.184 real sec
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 3836352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (118, 1700219, 6, 94)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (34, 47, 69)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 139)
[0000][PE] mean and std.dev: (49.70, 24.79)
[0000][PE] low and high boundaries for proper pairs: (1, 174)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (61, 80, 104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 190)
[0000][PE] mean and std.dev: (84.17, 31.64)
[0000][PE] low and high boundaries for proper pairs: (1, 233)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (26, 43, 74)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 170)
[0000][PE] mean and std.dev: (50.01, 30.10)
[0000][PE] low and high boundaries for proper pairs: (1, 218)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
	[0000][ M::mem_process_seqs] Processed 3836352 reads in 206.147 CPU sec, 5.864 real sec
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 40
Processor is running @2394.718632 MHz
Runtime profile:

	Time taken for main_mem function: 124.96 sec

	IO times (sec) :
	Reading IO time (reads) avg: 82.04, (82.04, 82.04)
	Writing IO time (SAM) avg: 21.40, (21.40, 21.40)
	Reading IO time (Reference Genome) avg: 0.55, (0.55, 0.55)
	Index read time avg: 0.22, (0.22, 0.22)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 124.15
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 56.65, (56.65, 56.65)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 15.36, (15.36, 15.36)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 37.94, (37.94, 37.94)
		MEM_ALN_CHAIN_FLT avg: 0.00, (0.00, 0.00)
		MEM_ALN_CHAIN_SEED avg: 0.00, (0.00, 0.00)
		ERT_SEED_CHAIN avg: 0.00, (0.00, 0.00)
	LEARNED_SEED_CHAIN avg: 19.62, (19.70, 19.53)
		SMEM compute avg: 0.00, (0.00, 0.00)
		SAL compute avg: 0.00, (0.00, 0.00)
				MEM_SA avg: 0.00, (0.00, 0.00)

		BSW time, avg: 17.12, (17.31, 16.84)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
