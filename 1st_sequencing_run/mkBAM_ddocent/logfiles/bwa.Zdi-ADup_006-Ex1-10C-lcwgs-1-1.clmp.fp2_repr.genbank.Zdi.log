Looking to launch executable "/opt/conda/bin/bwa-meme_mode3.avx512bw", simd = _mode3.avx512bw
Launching executable "/opt/conda/bin/bwa-meme_mode3.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: reference.genbank.Zdi.fasta
* Entering FMI_search
Reading other elements of the index from files reference.genbank.Zdi.fasta
* Index prefix: reference.genbank.Zdi.fasta
* Read 0 ALT contigs
* Reading reference genome..
* Binary seq file = reference.genbank.Zdi.fasta.0123
* Reference genome size: 1379380954 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 5679.4903 MB
2. Memory pre-allocation for BSW: 9584.6810 MB
[M::memoryAllocLearned::MEME] Reading Learned-index models into memory
[Learned-Config] MODE:3 SEARCH_METHOD: 1 MEM_TRADEOFF:1 EXPONENTIAL_SMEMSEARCH: 1 DEBUG_MODE:0 Num 2nd Models:268435456 PWL Bits Used:28
[M::memoryAllocLearned::MEME] Loading RMI model and Pac reference file took 11.120 sec
[M::memoryAllocLearned::MEME] Reading suffix array into memory
[M::memoryAllocLearned::MEME] Loading pos_packed file took 16.044 sec
[M::memoryAllocLearned::MEME] Generating SA, 64-bit Suffix and ISA in memory
[M::memoryAllocLearned::MEME] Runtime-build-index took 14.572 sec
3. Memory pre-allocation for BWT: 7540.2955 MB
------------------------------------------
* Threads used (compute): 40
* No. of pipeline threads: 2

[0000] read_chunk: 400000000, work_chunk_size: 400000094, nseq: 4312686
	[0000][ M::kt_pipeline] read 4312686 sequences (400000094 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4312686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (245, 1800207, 16, 218)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (32, 49, 68)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 140)
[0000][PE] mean and std.dev: (50.51, 24.64)
[0000][PE] low and high boundaries for proper pairs: (1, 176)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (63, 84, 111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 207)
[0000][PE] mean and std.dev: (89.23, 35.13)
[0000][PE] low and high boundaries for proper pairs: (1, 255)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (65, 103, 1040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2990)
[0000][PE] mean and std.dev: (297.21, 434.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3965)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (28, 42, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 139)
[0000][PE] mean and std.dev: (47.26, 24.55)
[0000][PE] low and high boundaries for proper pairs: (1, 176)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4312686 reads in 271.812 CPU sec, 7.327 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000127, nseq: 4314228
	[0000][ M::kt_pipeline] read 4314228 sequences (400000127 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4314228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (272, 1801034, 6, 208)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (30, 48, 74)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 162)
[0000][PE] mean and std.dev: (53.64, 29.03)
[0000][PE] low and high boundaries for proper pairs: (1, 206)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (63, 84, 111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 207)
[0000][PE] mean and std.dev: (89.21, 35.10)
[0000][PE] low and high boundaries for proper pairs: (1, 255)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (29, 46, 70)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 152)
[0000][PE] mean and std.dev: (51.08, 30.13)
[0000][PE] low and high boundaries for proper pairs: (1, 193)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4314228 reads in 270.845 CPU sec, 7.231 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000041, nseq: 4305776
	[0000][ M::kt_pipeline] read 4305776 sequences (400000041 bp)...
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4305776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (261, 1789843, 8, 200)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 43, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 136)
[0000][PE] mean and std.dev: (48.75, 27.60)
[0000][PE] low and high boundaries for proper pairs: (1, 172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (63, 84, 111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 207)
[0000][PE] mean and std.dev: (89.22, 35.13)
[0000][PE] low and high boundaries for proper pairs: (1, 255)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (24, 41, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 147)
[0000][PE] mean and std.dev: (46.31, 28.02)
[0000][PE] low and high boundaries for proper pairs: (1, 188)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4305776 reads in 276.354 CPU sec, 7.367 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000164, nseq: 4300312
	[0000][ M::kt_pipeline] read 4300312 sequences (400000164 bp)...
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4300312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (234, 1781673, 8, 218)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 41, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 136)
[0000][PE] mean and std.dev: (46.61, 26.66)
[0000][PE] low and high boundaries for proper pairs: (1, 172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (63, 84, 111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 207)
[0000][PE] mean and std.dev: (89.26, 35.11)
[0000][PE] low and high boundaries for proper pairs: (1, 255)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (28, 45, 66)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 142)
[0000][PE] mean and std.dev: (49.59, 27.70)
[0000][PE] low and high boundaries for proper pairs: (1, 180)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4300312 reads in 283.771 CPU sec, 7.651 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000029, nseq: 4314076
	[0000][ M::kt_pipeline] read 4314076 sequences (400000029 bp)...
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4314076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (240, 1801796, 11, 221)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 44, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 136)
[0000][PE] mean and std.dev: (46.83, 25.69)
[0000][PE] low and high boundaries for proper pairs: (1, 172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (63, 84, 111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 207)
[0000][PE] mean and std.dev: (89.25, 35.16)
[0000][PE] low and high boundaries for proper pairs: (1, 255)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 106, 158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 434)
[0000][PE] mean and std.dev: (84.70, 66.01)
[0000][PE] low and high boundaries for proper pairs: (1, 572)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (30, 45, 69)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 147)
[0000][PE] mean and std.dev: (51.56, 29.54)
[0000][PE] low and high boundaries for proper pairs: (1, 186)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4314076 reads in 271.062 CPU sec, 7.260 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000197, nseq: 4312080
	[0000][ M::kt_pipeline] read 4312080 sequences (400000197 bp)...
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4312080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (275, 1796924, 7, 183)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (31, 45, 66)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 136)
[0000][PE] mean and std.dev: (50.19, 27.55)
[0000][PE] low and high boundaries for proper pairs: (1, 171)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (63, 84, 111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 207)
[0000][PE] mean and std.dev: (89.27, 35.10)
[0000][PE] low and high boundaries for proper pairs: (1, 255)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (31, 44, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 139)
[0000][PE] mean and std.dev: (48.75, 24.94)
[0000][PE] low and high boundaries for proper pairs: (1, 175)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4312080 reads in 275.035 CPU sec, 7.437 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000231, nseq: 4317598
	[0000][ M::kt_pipeline] read 4317598 sequences (400000231 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4317598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (273, 1806587, 10, 219)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 44, 69)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 151)
[0000][PE] mean and std.dev: (50.01, 29.97)
[0000][PE] low and high boundaries for proper pairs: (1, 192)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (63, 84, 111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 207)
[0000][PE] mean and std.dev: (89.19, 35.12)
[0000][PE] low and high boundaries for proper pairs: (1, 255)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (53, 178, 1088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3158)
[0000][PE] mean and std.dev: (396.78, 437.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4193)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (29, 44, 70)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 152)
[0000][PE] mean and std.dev: (50.25, 29.92)
[0000][PE] low and high boundaries for proper pairs: (1, 193)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4317598 reads in 271.584 CPU sec, 7.397 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000008, nseq: 4315480
	[0000][ M::kt_pipeline] read 4315480 sequences (400000008 bp)...
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4315480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (270, 1802801, 8, 224)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 43, 62)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 132)
[0000][PE] mean and std.dev: (45.71, 26.14)
[0000][PE] low and high boundaries for proper pairs: (1, 167)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (63, 84, 111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 207)
[0000][PE] mean and std.dev: (89.23, 35.12)
[0000][PE] low and high boundaries for proper pairs: (1, 255)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (31, 46, 63)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 127)
[0000][PE] mean and std.dev: (48.15, 24.63)
[0000][PE] low and high boundaries for proper pairs: (1, 159)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 400000000, work_chunk_size: 172791515, nseq: 1865626
	[0000][ M::kt_pipeline] read 1865626 sequences (172791515 bp)...
	[0000][ M::mem_process_seqs] Processed 4315480 reads in 273.105 CPU sec, 7.498 real sec
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 1865626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (100, 780708, 1, 98)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 41, 66)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 140)
[0000][PE] mean and std.dev: (46.91, 28.43)
[0000][PE] low and high boundaries for proper pairs: (1, 177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (63, 84, 111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 207)
[0000][PE] mean and std.dev: (89.20, 35.10)
[0000][PE] low and high boundaries for proper pairs: (1, 255)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (31, 49, 73)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 157)
[0000][PE] mean and std.dev: (53.11, 30.09)
[0000][PE] low and high boundaries for proper pairs: (1, 199)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1865626 reads in 116.981 CPU sec, 3.407 real sec
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 40
Processor is running @2394.713146 MHz
Runtime profile:

	Time taken for main_mem function: 131.17 sec

	IO times (sec) :
	Reading IO time (reads) avg: 84.36, (84.36, 84.36)
	Writing IO time (SAM) avg: 21.46, (21.46, 21.46)
	Reading IO time (Reference Genome) avg: 0.66, (0.66, 0.66)
	Index read time avg: 0.24, (0.24, 0.24)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 130.22
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 62.57, (62.57, 62.57)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 15.41, (15.41, 15.41)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 43.91, (43.91, 43.91)
		MEM_ALN_CHAIN_FLT avg: 0.00, (0.00, 0.00)
		MEM_ALN_CHAIN_SEED avg: 0.00, (0.00, 0.00)
		ERT_SEED_CHAIN avg: 0.00, (0.00, 0.00)
	LEARNED_SEED_CHAIN avg: 25.60, (25.64, 25.51)
		SMEM compute avg: 0.00, (0.00, 0.00)
		SAL compute avg: 0.00, (0.00, 0.00)
				MEM_SA avg: 0.00, (0.00, 0.00)

		BSW time, avg: 17.31, (17.45, 17.01)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
