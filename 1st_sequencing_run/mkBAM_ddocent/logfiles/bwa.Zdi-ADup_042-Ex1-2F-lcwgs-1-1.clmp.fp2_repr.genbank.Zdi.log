Looking to launch executable "/opt/conda/bin/bwa-meme_mode3.avx512bw", simd = _mode3.avx512bw
Launching executable "/opt/conda/bin/bwa-meme_mode3.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: reference.genbank.Zdi.fasta
* Entering FMI_search
Reading other elements of the index from files reference.genbank.Zdi.fasta
* Index prefix: reference.genbank.Zdi.fasta
* Read 0 ALT contigs
* Reading reference genome..
* Binary seq file = reference.genbank.Zdi.fasta.0123
* Reference genome size: 1379380954 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 5679.4903 MB
2. Memory pre-allocation for BSW: 9584.6810 MB
[M::memoryAllocLearned::MEME] Reading Learned-index models into memory
[Learned-Config] MODE:3 SEARCH_METHOD: 1 MEM_TRADEOFF:1 EXPONENTIAL_SMEMSEARCH: 1 DEBUG_MODE:0 Num 2nd Models:268435456 PWL Bits Used:28
[M::memoryAllocLearned::MEME] Loading RMI model and Pac reference file took 10.501 sec
[M::memoryAllocLearned::MEME] Reading suffix array into memory
[M::memoryAllocLearned::MEME] Loading pos_packed file took 13.692 sec
[M::memoryAllocLearned::MEME] Generating SA, 64-bit Suffix and ISA in memory
[M::memoryAllocLearned::MEME] Runtime-build-index took 14.251 sec
3. Memory pre-allocation for BWT: 7540.2955 MB
------------------------------------------
* Threads used (compute): 40
* No. of pipeline threads: 2

[0000] read_chunk: 400000000, work_chunk_size: 400000044, nseq: 4655142
	[0000][ M::kt_pipeline] read 4655142 sequences (400000044 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4655142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (310, 2114652, 7, 282)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (27, 38, 61)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 129)
[0000][PE] mean and std.dev: (44.13, 23.75)
[0000][PE] low and high boundaries for proper pairs: (1, 163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (62, 80, 102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 182)
[0000][PE] mean and std.dev: (83.67, 29.55)
[0000][PE] low and high boundaries for proper pairs: (1, 222)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (30, 41, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 141)
[0000][PE] mean and std.dev: (48.71, 26.44)
[0000][PE] low and high boundaries for proper pairs: (1, 178)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4655142 reads in 245.582 CPU sec, 6.748 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000175, nseq: 4646058
	[0000][ M::kt_pipeline] read 4646058 sequences (400000175 bp)...
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4646058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (311, 2100791, 1, 258)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 41, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 136)
[0000][PE] mean and std.dev: (45.52, 24.23)
[0000][PE] low and high boundaries for proper pairs: (1, 172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (62, 80, 102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 182)
[0000][PE] mean and std.dev: (83.65, 29.55)
[0000][PE] low and high boundaries for proper pairs: (1, 222)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (28, 40, 63)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 133)
[0000][PE] mean and std.dev: (46.90, 25.33)
[0000][PE] low and high boundaries for proper pairs: (1, 168)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4646058 reads in 251.692 CPU sec, 6.946 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000059, nseq: 4650778
	[0000][ M::kt_pipeline] read 4650778 sequences (400000059 bp)...
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4650778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (347, 2108664, 6, 276)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (29, 42, 63)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 131)
[0000][PE] mean and std.dev: (46.03, 23.15)
[0000][PE] low and high boundaries for proper pairs: (1, 165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (62, 80, 102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 182)
[0000][PE] mean and std.dev: (83.67, 29.56)
[0000][PE] low and high boundaries for proper pairs: (1, 222)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (27, 39, 61)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 129)
[0000][PE] mean and std.dev: (44.53, 24.26)
[0000][PE] low and high boundaries for proper pairs: (1, 163)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4650778 reads in 251.128 CPU sec, 7.041 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000108, nseq: 4648130
	[0000][ M::kt_pipeline] read 4648130 sequences (400000108 bp)...
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4648130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (298, 2099390, 9, 293)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (30, 44, 66)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 138)
[0000][PE] mean and std.dev: (49.38, 25.03)
[0000][PE] low and high boundaries for proper pairs: (1, 174)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (62, 80, 102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 182)
[0000][PE] mean and std.dev: (83.66, 29.56)
[0000][PE] low and high boundaries for proper pairs: (1, 222)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (27, 41, 68)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 150)
[0000][PE] mean and std.dev: (47.69, 26.77)
[0000][PE] low and high boundaries for proper pairs: (1, 191)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4648130 reads in 254.064 CPU sec, 6.909 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000038, nseq: 4656870
	[0000][ M::kt_pipeline] read 4656870 sequences (400000038 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4656870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (313, 2117092, 6, 254)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 40, 62)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 130)
[0000][PE] mean and std.dev: (46.16, 24.86)
[0000][PE] low and high boundaries for proper pairs: (1, 164)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (62, 80, 102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 182)
[0000][PE] mean and std.dev: (83.67, 29.56)
[0000][PE] low and high boundaries for proper pairs: (1, 222)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (29, 41, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 134)
[0000][PE] mean and std.dev: (47.59, 26.96)
[0000][PE] low and high boundaries for proper pairs: (1, 169)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4656870 reads in 246.621 CPU sec, 6.883 real sec
[0000] read_chunk: 400000000, work_chunk_size: 400000257, nseq: 4661210
	[0000][ M::kt_pipeline] read 4661210 sequences (400000257 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 400000000, work_chunk_size: 200432698, nseq: 2337114
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 4661210
	[0000][ M::kt_pipeline] read 2337114 sequences (200432698 bp)...
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (306, 2122184, 2, 276)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (28, 42, 65)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 139)
[0000][PE] mean and std.dev: (47.66, 26.60)
[0000][PE] low and high boundaries for proper pairs: (1, 176)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (62, 80, 102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 182)
[0000][PE] mean and std.dev: (83.63, 29.56)
[0000][PE] low and high boundaries for proper pairs: (1, 222)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (27, 43, 69)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 153)
[0000][PE] mean and std.dev: (49.54, 26.62)
[0000][PE] low and high boundaries for proper pairs: (1, 195)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 4661210 reads in 241.503 CPU sec, 6.674 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 689690477, n: 2337114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (139, 1064546, 3, 151)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (30, 41, 58)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 114)
[0000][PE] mean and std.dev: (44.29, 21.58)
[0000][PE] low and high boundaries for proper pairs: (1, 142)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (62, 80, 102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 182)
[0000][PE] mean and std.dev: (83.64, 29.52)
[0000][PE] low and high boundaries for proper pairs: (1, 222)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (30, 44, 63)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 129)
[0000][PE] mean and std.dev: (46.94, 25.92)
[0000][PE] low and high boundaries for proper pairs: (1, 162)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2337114 reads in 121.905 CPU sec, 3.642 real sec
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] read_chunk: 400000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 40
Processor is running @2394.739266 MHz
Runtime profile:

	Time taken for main_mem function: 110.87 sec

	IO times (sec) :
	Reading IO time (reads) avg: 67.29, (67.29, 67.29)
	Writing IO time (SAM) avg: 16.76, (16.76, 16.76)
	Reading IO time (Reference Genome) avg: 0.65, (0.65, 0.65)
	Index read time avg: 0.24, (0.24, 0.24)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 109.93
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 44.84, (44.84, 44.84)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 11.65, (11.65, 11.65)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 30.26, (30.26, 30.26)
		MEM_ALN_CHAIN_FLT avg: 0.00, (0.00, 0.00)
		MEM_ALN_CHAIN_SEED avg: 0.00, (0.00, 0.00)
		ERT_SEED_CHAIN avg: 0.00, (0.00, 0.00)
	LEARNED_SEED_CHAIN avg: 16.03, (16.07, 15.94)
		SMEM compute avg: 0.00, (0.00, 0.00)
		SAL compute avg: 0.00, (0.00, 0.00)
				MEM_SA avg: 0.00, (0.00, 0.00)

		BSW time, avg: 13.32, (13.46, 13.04)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
